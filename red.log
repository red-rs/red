[2024-11-05 14:44:24.929] [DEBUG] main: starting red
[2024-11-05 14:44:25.928] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":338,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-05 14:44:26.289] [DEBUG] main: stopping red
[2024-11-05 14:48:33.026] [DEBUG] main: starting red
[2024-11-05 14:48:34.624] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":921,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-05 14:48:35.626] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"initialized","params":{}}
[2024-11-05 14:48:35.638] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"python","text":"import unittest\n\ndef add_numbers(a, b):\n    return a + b\n\n\nclass TestAddNumbers(unittest.TestCase):\n\n    def test_add_positive_numbers(self):\n        print(\"asdfasdfsa dfas dfsa dfs adftest_add_positive_numbers\")\n        result = add_numbers(1, 7)\n        self.assertEqual(result, 8)\n\n    def test_add_negative_numbers(self):\n        result = add_numbers(-2, -3)\n        self.assertEqual(result, -5)\n\n\n    def test_add_fail(self):\n        result = add_numbers(0, 7)\n        self.assertEqual(result, 8)\n\n\n","uri":"file:///Users/max/apps/rust/red/test/ptest.py","version":0}}}
[2024-11-05 14:48:37.543] [DEBUG] lsp: <- {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"codeActionProvider":true,"codeLensProvider":{"resolveProvider":false},"completionProvider":{"resolveProvider":true,"triggerCharacters":["."]},"documentFormattingProvider":true,"documentHighlightProvider":true,"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"definitionProvider":true,"executeCommandProvider":{"commands":[]},"hoverProvider":true,"referencesProvider":true,"renameProvider":true,"foldingRangeProvider":true,"signatureHelpProvider":{"triggerCharacters":["(",",","="]},"textDocumentSync":{"change":2,"save":{"includeText":true},"openClose":true},"workspace":{"workspaceFolders":{"supported":true,"changeNotifications":true}},"experimental":{}},"serverInfo":{"name":"pylsp","version":"1.7.3"}}}
[2024-11-05 14:48:37.887] [DEBUG] main: stopping red
[2024-11-05 14:48:45.604] [DEBUG] main: starting red
[2024-11-05 15:10:47.890] [DEBUG] main: stopping red
[2024-11-05 15:10:59.559] [DEBUG] main: starting red
[2024-11-05 15:11:09.669] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":1536,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-05 15:11:10.643] [DEBUG] lsp: <- {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"codeActionProvider":true,"codeLensProvider":{"resolveProvider":false},"completionProvider":{"resolveProvider":true,"triggerCharacters":["."]},"documentFormattingProvider":true,"documentHighlightProvider":true,"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"definitionProvider":true,"executeCommandProvider":{"commands":[]},"hoverProvider":true,"referencesProvider":true,"renameProvider":true,"foldingRangeProvider":true,"signatureHelpProvider":{"triggerCharacters":["(",",","="]},"textDocumentSync":{"change":2,"save":{"includeText":true},"openClose":true},"workspace":{"workspaceFolders":{"supported":true,"changeNotifications":true}},"experimental":{}},"serverInfo":{"name":"pylsp","version":"1.7.3"}}}
[2024-11-05 15:11:10.644] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"initialized","params":{}}
[2024-11-05 15:11:10.656] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"python","text":"import unittest\n\ndef add_numbers(a, b):\n    return a + b\n\n\nclass TestAddNumbers(unittest.TestCase):\n\n    def test_add_positive_numbers(self):\n        print(\"asdfasdfsa dfas dfsa dfs adftest_add_positive_numbers\")\n        result = add_numbers(1, 7)\n        self.assertEqual(result, 8)\n\n    def test_add_negative_numbers(self):\n        result = add_numbers(-2, -3)\n        self.assertEqual(result, -5)\n\n\n    def test_add_fail(self):\n        result = add_numbers(0, 7)\n        self.assertEqual(result, 8)\n\n\n","uri":"file:///Users/max/apps/rust/red/test/ptest.py","version":0}}}
[2024-11-05 15:11:11.169] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument\/publishDiagnostics","params":{"uri":"file:\/\/\/Users\/max\/apps\/rust\/red\/test\/ptest.py","diagnostics":[{"source":"pycodestyle","range":{"start":{"line":2,"character":0},"end":{"line":2,"character":23}},"message":"E302 expected 2 blank lines, found 1","code":"E302","severity":2},{"source":"pycodestyle","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":29}},"message":"E303 too many blank lines (2)","code":"E303","severity":2},{"source":"pycodestyle","range":{"start":{"line":22,"character":0},"end":{"line":22,"character":1}},"message":"W391 blank line at end of file","code":"W391","severity":2}]}}
[2024-11-05 15:11:59.441] [DEBUG] main: stopping red
[2024-11-05 15:14:24.953] [DEBUG] main: starting red
[2024-11-05 15:14:26.253] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":1772,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-05 15:14:26.821] [DEBUG] lsp: <- {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":1,"completionProvider":{"resolveProvider":true,"triggerCharacters":["$","{"]},"hoverProvider":true,"documentHighlightProvider":true,"definitionProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"referencesProvider":true,"codeActionProvider":{"codeActionKinds":["quickfix"],"resolveProvider":false,"workDoneProgress":false}}}}
[2024-11-05 15:14:26.821] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"initialized","params":{}}
[2024-11-05 15:14:26.830] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"12:14:26.821 INFO BackgroundAnalysis: resolving glob \"**/*@(.sh|.inc|.bash|.command)\" inside \"file:///Users/max/apps/rust/red\"..."}}
[2024-11-05 15:14:26.832] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"shell","text":"#!/bin/sh\n\nPANES=$(tmux list-panes | wc -l)\n\nif [ \"$PANES\" -le 1 ]; then\n  tmux split-window -v\nfi\n\ntmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-command","uri":"file:///Users/max/apps/rust/red/tmux.sh","version":0}}}
[2024-11-05 15:14:26.891] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"12:14:26.890 INFO BackgroundAnalysis: Glob resolved with 3 files after 0.064 seconds"}}
[2024-11-05 15:14:26.893] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":3,"message":"12:14:26.893 INFO BackgroundAnalysis: Completed after 0.067 seconds."}}
[2024-11-05 15:14:27.352] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"window/logMessage","params":{"type":2,"message":"12:14:27.351 WARNING ⛔️ ShellCheck: disabling linting as no executable was found at path 'shellcheck'"}}
[2024-11-05 15:14:27.352] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":0,"diagnostics":[]}}
[2024-11-05 15:14:27.999] [DEBUG] code: ts insert InputEdit { start_byte: 165, old_end_byte: 165, new_end_byte: 166, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:27.999] [DEBUG] code: parse_with 100
[2024-11-05 15:14:27.999] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commanda"
[2024-11-05 15:14:27.999] [DEBUG] code: parse_with 166
[2024-11-05 15:14:28.000] [DEBUG] code: sl ""
[2024-11-05 15:14:28.000] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.000] [DEBUG] code: sl "/tmp/prev-tmux-commanda"
[2024-11-05 15:14:28.000] [DEBUG] code: parse_with 166
[2024-11-05 15:14:28.000] [DEBUG] code: sl ""
[2024-11-05 15:14:28.000] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":34,"line":9},"start":{"character":34,"line":9}},"text":"a"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":0}}}
[2024-11-05 15:14:28.003] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":0,"diagnostics":[]}}
[2024-11-05 15:14:28.031] [DEBUG] code: ts insert InputEdit { start_byte: 166, old_end_byte: 166, new_end_byte: 167, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:28.031] [DEBUG] code: parse_with 100
[2024-11-05 15:14:28.031] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandas"
[2024-11-05 15:14:28.031] [DEBUG] code: parse_with 167
[2024-11-05 15:14:28.031] [DEBUG] code: sl ""
[2024-11-05 15:14:28.031] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.031] [DEBUG] code: sl "/tmp/prev-tmux-commandas"
[2024-11-05 15:14:28.031] [DEBUG] code: parse_with 167
[2024-11-05 15:14:28.031] [DEBUG] code: sl ""
[2024-11-05 15:14:28.031] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":35,"line":9},"start":{"character":35,"line":9}},"text":"s"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":1}}}
[2024-11-05 15:14:28.032] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":1,"diagnostics":[]}}
[2024-11-05 15:14:28.112] [DEBUG] code: ts insert InputEdit { start_byte: 167, old_end_byte: 167, new_end_byte: 168, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:28.112] [DEBUG] code: parse_with 100
[2024-11-05 15:14:28.112] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasd"
[2024-11-05 15:14:28.112] [DEBUG] code: parse_with 168
[2024-11-05 15:14:28.112] [DEBUG] code: sl ""
[2024-11-05 15:14:28.112] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.112] [DEBUG] code: sl "/tmp/prev-tmux-commandasd"
[2024-11-05 15:14:28.112] [DEBUG] code: parse_with 168
[2024-11-05 15:14:28.112] [DEBUG] code: sl ""
[2024-11-05 15:14:28.112] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":36,"line":9},"start":{"character":36,"line":9}},"text":"d"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":2}}}
[2024-11-05 15:14:28.113] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":2,"diagnostics":[]}}
[2024-11-05 15:14:28.248] [DEBUG] code: ts insert InputEdit { start_byte: 168, old_end_byte: 168, new_end_byte: 169, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:28.248] [DEBUG] code: parse_with 100
[2024-11-05 15:14:28.248] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasds"
[2024-11-05 15:14:28.248] [DEBUG] code: parse_with 169
[2024-11-05 15:14:28.248] [DEBUG] code: sl ""
[2024-11-05 15:14:28.248] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.248] [DEBUG] code: sl "/tmp/prev-tmux-commandasds"
[2024-11-05 15:14:28.248] [DEBUG] code: parse_with 169
[2024-11-05 15:14:28.248] [DEBUG] code: sl ""
[2024-11-05 15:14:28.248] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":37,"line":9},"start":{"character":37,"line":9}},"text":"s"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":3}}}
[2024-11-05 15:14:28.251] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":3,"diagnostics":[]}}
[2024-11-05 15:14:28.260] [DEBUG] code: ts insert InputEdit { start_byte: 169, old_end_byte: 169, new_end_byte: 170, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:28.260] [DEBUG] code: parse_with 100
[2024-11-05 15:14:28.260] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasdsa"
[2024-11-05 15:14:28.260] [DEBUG] code: parse_with 170
[2024-11-05 15:14:28.260] [DEBUG] code: sl ""
[2024-11-05 15:14:28.260] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.260] [DEBUG] code: sl "/tmp/prev-tmux-commandasdsa"
[2024-11-05 15:14:28.260] [DEBUG] code: parse_with 170
[2024-11-05 15:14:28.260] [DEBUG] code: sl ""
[2024-11-05 15:14:28.260] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":38,"line":9},"start":{"character":38,"line":9}},"text":"a"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":4}}}
[2024-11-05 15:14:28.263] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":4,"diagnostics":[]}}
[2024-11-05 15:14:28.330] [DEBUG] code: ts insert InputEdit { start_byte: 170, old_end_byte: 170, new_end_byte: 171, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:28.330] [DEBUG] code: parse_with 100
[2024-11-05 15:14:28.330] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasdsad"
[2024-11-05 15:14:28.330] [DEBUG] code: parse_with 171
[2024-11-05 15:14:28.330] [DEBUG] code: sl ""
[2024-11-05 15:14:28.330] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.330] [DEBUG] code: sl "/tmp/prev-tmux-commandasdsad"
[2024-11-05 15:14:28.330] [DEBUG] code: parse_with 171
[2024-11-05 15:14:28.330] [DEBUG] code: sl ""
[2024-11-05 15:14:28.330] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":39,"line":9},"start":{"character":39,"line":9}},"text":"d"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":5}}}
[2024-11-05 15:14:28.334] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":5,"diagnostics":[]}}
[2024-11-05 15:14:28.974] [DEBUG] code: ts remove InputEdit { start_byte: 170, old_end_byte: 171, new_end_byte: 170, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:28.974] [DEBUG] code: parse_with 100
[2024-11-05 15:14:28.974] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasdsa"
[2024-11-05 15:14:28.974] [DEBUG] code: parse_with 170
[2024-11-05 15:14:28.974] [DEBUG] code: sl ""
[2024-11-05 15:14:28.974] [DEBUG] code: parse_with 143
[2024-11-05 15:14:28.974] [DEBUG] code: sl "/tmp/prev-tmux-commandasdsa"
[2024-11-05 15:14:28.974] [DEBUG] code: parse_with 170
[2024-11-05 15:14:28.974] [DEBUG] code: sl ""
[2024-11-05 15:14:28.974] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":40,"line":9},"start":{"character":39,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":6}}}
[2024-11-05 15:14:28.976] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":6,"diagnostics":[]}}
[2024-11-05 15:14:29.226] [DEBUG] code: ts remove InputEdit { start_byte: 169, old_end_byte: 170, new_end_byte: 169, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:29.226] [DEBUG] code: parse_with 100
[2024-11-05 15:14:29.226] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasds"
[2024-11-05 15:14:29.226] [DEBUG] code: parse_with 169
[2024-11-05 15:14:29.226] [DEBUG] code: sl ""
[2024-11-05 15:14:29.226] [DEBUG] code: parse_with 143
[2024-11-05 15:14:29.226] [DEBUG] code: sl "/tmp/prev-tmux-commandasds"
[2024-11-05 15:14:29.226] [DEBUG] code: parse_with 169
[2024-11-05 15:14:29.226] [DEBUG] code: sl ""
[2024-11-05 15:14:29.227] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":39,"line":9},"start":{"character":38,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":7}}}
[2024-11-05 15:14:29.229] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":7,"diagnostics":[]}}
[2024-11-05 15:14:29.260] [DEBUG] code: ts remove InputEdit { start_byte: 168, old_end_byte: 169, new_end_byte: 168, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:29.260] [DEBUG] code: parse_with 100
[2024-11-05 15:14:29.260] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandasd"
[2024-11-05 15:14:29.260] [DEBUG] code: parse_with 168
[2024-11-05 15:14:29.260] [DEBUG] code: sl ""
[2024-11-05 15:14:29.260] [DEBUG] code: parse_with 143
[2024-11-05 15:14:29.260] [DEBUG] code: sl "/tmp/prev-tmux-commandasd"
[2024-11-05 15:14:29.260] [DEBUG] code: parse_with 168
[2024-11-05 15:14:29.260] [DEBUG] code: sl ""
[2024-11-05 15:14:29.261] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":38,"line":9},"start":{"character":37,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":8}}}
[2024-11-05 15:14:29.262] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":8,"diagnostics":[]}}
[2024-11-05 15:14:29.292] [DEBUG] code: ts remove InputEdit { start_byte: 167, old_end_byte: 168, new_end_byte: 167, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:29.292] [DEBUG] code: parse_with 100
[2024-11-05 15:14:29.292] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandas"
[2024-11-05 15:14:29.292] [DEBUG] code: parse_with 167
[2024-11-05 15:14:29.292] [DEBUG] code: sl ""
[2024-11-05 15:14:29.292] [DEBUG] code: parse_with 143
[2024-11-05 15:14:29.292] [DEBUG] code: sl "/tmp/prev-tmux-commandas"
[2024-11-05 15:14:29.292] [DEBUG] code: parse_with 167
[2024-11-05 15:14:29.292] [DEBUG] code: sl ""
[2024-11-05 15:14:29.293] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":37,"line":9},"start":{"character":36,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":9}}}
[2024-11-05 15:14:29.295] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":9,"diagnostics":[]}}
[2024-11-05 15:14:29.327] [DEBUG] code: ts remove InputEdit { start_byte: 166, old_end_byte: 167, new_end_byte: 166, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:29.327] [DEBUG] code: parse_with 100
[2024-11-05 15:14:29.327] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commanda"
[2024-11-05 15:14:29.327] [DEBUG] code: parse_with 166
[2024-11-05 15:14:29.327] [DEBUG] code: sl ""
[2024-11-05 15:14:29.327] [DEBUG] code: parse_with 143
[2024-11-05 15:14:29.327] [DEBUG] code: sl "/tmp/prev-tmux-commanda"
[2024-11-05 15:14:29.327] [DEBUG] code: parse_with 166
[2024-11-05 15:14:29.327] [DEBUG] code: sl ""
[2024-11-05 15:14:29.327] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":36,"line":9},"start":{"character":35,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":10}}}
[2024-11-05 15:14:29.329] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":10,"diagnostics":[]}}
[2024-11-05 15:14:29.357] [DEBUG] code: ts remove InputEdit { start_byte: 165, old_end_byte: 166, new_end_byte: 165, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:29.357] [DEBUG] code: parse_with 100
[2024-11-05 15:14:29.357] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-command"
[2024-11-05 15:14:29.357] [DEBUG] code: parse_with 165
[2024-11-05 15:14:29.357] [DEBUG] code: sl ""
[2024-11-05 15:14:29.357] [DEBUG] code: parse_with 143
[2024-11-05 15:14:29.357] [DEBUG] code: sl "/tmp/prev-tmux-command"
[2024-11-05 15:14:29.357] [DEBUG] code: parse_with 165
[2024-11-05 15:14:29.357] [DEBUG] code: sl ""
[2024-11-05 15:14:29.358] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":35,"line":9},"start":{"character":34,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":11}}}
[2024-11-05 15:14:29.359] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":11,"diagnostics":[]}}
[2024-11-05 15:14:31.627] [DEBUG] code: ts insert InputEdit { start_byte: 165, old_end_byte: 165, new_end_byte: 166, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:31.628] [DEBUG] code: parse_with 100
[2024-11-05 15:14:31.628] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-commandz"
[2024-11-05 15:14:31.628] [DEBUG] code: parse_with 166
[2024-11-05 15:14:31.628] [DEBUG] code: sl ""
[2024-11-05 15:14:31.628] [DEBUG] code: parse_with 143
[2024-11-05 15:14:31.628] [DEBUG] code: sl "/tmp/prev-tmux-commandz"
[2024-11-05 15:14:31.628] [DEBUG] code: parse_with 166
[2024-11-05 15:14:31.628] [DEBUG] code: sl ""
[2024-11-05 15:14:31.629] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":34,"line":9},"start":{"character":34,"line":9}},"text":"z"}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":12}}}
[2024-11-05 15:14:31.633] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":12,"diagnostics":[]}}
[2024-11-05 15:14:31.635] [DEBUG] code: ts remove InputEdit { start_byte: 165, old_end_byte: 166, new_end_byte: 165, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-05 15:14:31.635] [DEBUG] code: parse_with 100
[2024-11-05 15:14:31.635] [DEBUG] code: sl "tmux send-keys -t 1 \"$@\" Enter\necho \"$1\" > /tmp/prev-tmux-command"
[2024-11-05 15:14:31.635] [DEBUG] code: parse_with 165
[2024-11-05 15:14:31.635] [DEBUG] code: sl ""
[2024-11-05 15:14:31.635] [DEBUG] code: parse_with 143
[2024-11-05 15:14:31.635] [DEBUG] code: sl "/tmp/prev-tmux-command"
[2024-11-05 15:14:31.635] [DEBUG] code: parse_with 165
[2024-11-05 15:14:31.635] [DEBUG] code: sl ""
[2024-11-05 15:14:31.635] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":35,"line":9},"start":{"character":34,"line":9}},"text":""}],"textDocument":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":13}}}
[2024-11-05 15:14:31.636] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/tmux.sh","version":13,"diagnostics":[]}}
[2024-11-18 19:56:50.607] [DEBUG] main: starting red
[2024-11-18 20:09:54.767] [DEBUG] main: starting red
[2024-11-18 20:10:37.120] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":7466,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-18 20:10:37.148] [DEBUG] lsp: <- {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"positionEncoding":"utf-16","textDocumentSync":{"openClose":true,"change":2,"save":{}},"selectionRangeProvider":true,"hoverProvider":true,"completionProvider":{"resolveProvider":true,"triggerCharacters":[":",".","'","("],"completionItem":{"labelDetailsSupport":true}},"signatureHelpProvider":{"triggerCharacters":["(",",","<"]},"definitionProvider":true,"typeDefinitionProvider":true,"implementationProvider":true,"referencesProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"codeLensProvider":{"resolveProvider":true},"documentFormattingProvider":true,"documentRangeFormattingProvider":false,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"=","moreTriggerCharacter":[".",">","{","("]},"renameProvider":{"prepareProvider":true},"foldingRangeProvider":true,"declarationProvider":true,"workspace":{"workspaceFolders":{"supported":true,"changeNotifications":true},"fileOperations":{"willRename":{"filters":[{"scheme":"file","pattern":{"glob":"**/*.rs","matches":"file"}},{"scheme":"file","pattern":{"glob":"**","matches":"folder"}}]}}},"callHierarchyProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["comment","decorator","enumMember","enum","function","interface","keyword","macro","method","namespace","number","operator","parameter","property","string","struct","typeParameter","variable","angle","arithmetic","attributeBracket","attribute","bitwise","boolean","brace","bracket","builtinAttribute","builtinType","character","colon","comma","comparison","constParameter","const","deriveHelper","derive","dot","escapeSequence","formatSpecifier","generic","invalidEscapeSequence","label","lifetime","logical","macroBang","parenthesis","procMacro","punctuation","selfKeyword","selfTypeKeyword","semicolon","static","toolModule","typeAlias","union","unresolvedReference"],"tokenModifiers":["async","documentation","declaration","static","defaultLibrary","associated","attribute","callable","constant","consuming","controlFlow","crateRoot","injected","intraDocLink","library","macro","mutable","procMacro","public","reference","trait","unsafe"]},"range":true,"full":{"delta":true}},"inlayHintProvider":{"resolveProvider":true},"experimental":{"externalDocs":true,"hoverRange":true,"joinLines":true,"matchingBrace":true,"moveItem":true,"onEnter":true,"openCargoToml":true,"parentModule":true,"runnables":{"kinds":["cargo"]},"ssr":true,"workspaceSymbolScopeKindFiltering":true}},"serverInfo":{"name":"rust-analyzer","version":"0.0.0 (21ec8f523 2024-05-19)"}}}
[2024-11-18 20:10:37.149] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"initialized","params":{}}
[2024-11-18 20:10:37.160] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"use std::thread;\nuse std::time::{Duration, Instant};\n\nfn main() {\n    let start_time = Instant::now();\n    let mut count = 0;\n\n    for i in 0..3 {\n        count += i;\n        println!(\"hi {}\", i);\n        thread::sleep(Duration::from_millis(1));\n    }\n\n    println!(\"done {}\", count);\n    let elapsed_time = start_time.elapsed();\n    println!(\"elapsed time: {:?}\", elapsed_time);\n}","uri":"file:///Users/max/apps/rust/red/test/test.rs","version":0}}}
[2024-11-18 20:10:38.779] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:38.790] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"if this is intentional, prefix it with an underscore: `_name`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `name`\n   --> src/code.rs:579:29\n    |\n579 |                         let name = capture_name.split('.').next().unwrap_or(capture_name);\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n"}},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:867:17\n    |\n867 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:887:17\n    |\n887 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:940:17\n    |\n940 |             let result = rope_search(slice, substring);\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}},"severity":2,"code":"dead_code","source":"rustc","message":"field `row` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `row` is never read\n   --> src/code.rs:660:9\n    |\n658 | pub struct Runnable {\n    |            -------- field in this struct\n659 |     pub cmd: String,\n660 |     pub row: usize,\n    |         ^^^\n\n"}},{"range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}}},"message":"original diagnostic"}]},{"range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"field `search_pattern` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `search_pattern` is never read\n   --> src/code.rs:779:5\n    |\n777 | struct EarlyTerminationSearch<'a> {\n    |        ---------------------- field in this struct\n778 |     char_iter: ropey::iter::Chars<'a>,\n779 |     search_pattern: &'a str,\n    |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":11},"end":{"line":168,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":361,"character":11},"end":{"line":361,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"method `move_line_up` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `move_line_up` is never used\n    --> src/code.rs:1082:12\n     |\n1038 | impl Code {\n     | --------- method in this implementation\n...\n1082 |     pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n     |            ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:38.791] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Serialize`\n --> src/config.rs:1:26\n  |\n1 | use serde::{Deserialize, Serialize};\n  |                          ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:38.791] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::fs::File`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::fs::File`\n --> src/tree.rs:2:5\n  |\n2 | use std::fs::File;\n  |     ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `PathBuf`\n --> src/tree.rs:3:23\n  |\n3 | use std::path::{Path, PathBuf};\n  |                       ^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueueableCommand`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueueableCommand`\n --> src/tree.rs:5:32\n  |\n5 | use crossterm::{cursor, queue, QueueableCommand, style::Print};\n  |                                ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde::de`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde::de`\n --> src/tree.rs:7:5\n  |\n7 | use serde::de;\n  |     ^^^^^^^^^\n\n"}},{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::watch::error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::watch::error`\n --> src/tree.rs:8:5\n  |\n8 | use tokio::sync::watch::error;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `SetBackgroundColor as BColor`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `SetBackgroundColor as BColor`\n  --> src/tree.rs:12:31\n   |\n12 | use crossterm::style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor};\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":54},"end":{"line":528,"character":70}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\nunreachable pattern","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}}},"message":"matches any value"}],"data":{"rendered":"warning: unreachable pattern\n   --> src/tree.rs:464:13\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |             ------------------------------------------------------------- matches any value\n...\n464 |             _ => {}\n    |             ^ unreachable pattern\n\n"}},{"range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}},"severity":4,"code":"unreachable_patterns","source":"rustc","message":"matches any value","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `row`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"try ignoring the field: `row: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `row`\n   --> src/tree.rs:455:44\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                            ^^^ help: try ignoring the field: `row: _`\n\n"}},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `row: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `column`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"try ignoring the field: `column: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `column`\n   --> src/tree.rs:455:49\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                 ^^^^^^ help: try ignoring the field: `column: _`\n\n"}},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `column: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `modifiers`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"try ignoring the field: `modifiers: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `modifiers`\n   --> src/tree.rs:455:63\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                               ^^^^^^^^^ help: try ignoring the field: `modifiers: _`\n\n"}},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `modifiers: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"original diagnostic"}]},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"if this is intentional, prefix it with an underscore: `_button`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `button`\n   --> src/tree.rs:459:60\n    |\n459 |                     crossterm::event::MouseEventKind::Down(button) => {}\n    |                                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_button`\n\n"}},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Write`","tags":[1],"data":{"rendered":"warning: unused import: `Write`\n --> src/tree.rs:4:21\n  |\n4 | use std::io::{self, Write};\n  |                     ^^^^^\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n  --> src/tree.rs:45:21\n   |\n45 |                 Err(e) => { debug!(\"cant get abs_path for {}\", name); continue;},\n   |                     ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:271:17\n    |\n271 |             for i in 0..padding_left {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:276:17\n    |\n276 |             for i in 0..depth {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:288:21\n    |\n288 |                 for i in 0..self.width-col-1 {\n    |                     ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}},"severity":2,"code":"dead_code","source":"rustc","message":"field `dir` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `dir` is never read\n   --> src/tree.rs:146:5\n    |\n143 | pub struct TreeView {\n    |            -------- field in this struct\n...\n146 |     dir: String,\n    |     ^^^\n\n"}},{"range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}}},"message":"original diagnostic"}]},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/tree.rs:97:21\n   |\n97 |                     child.expand();\n   |                     ^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n97 |                     let _ = child.expand();\n   |                     +++++++\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:179:9\n    |\n179 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n179 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:228:9\n    |\n228 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n228 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:234:9\n    |\n234 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n234 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":254,"character":8},"end":{"line":254,"character":36}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:255:9\n    |\n255 |         queue!(stdout, cursor::Hide);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":259,"character":12},"end":{"line":259,"character":55}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:260:13\n    |\n260 |             queue!(stdout, cursor::MoveTo(0, i as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":272,"character":16},"end":{"line":272,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:273:17\n    |\n273 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":277,"character":16},"end":{"line":277,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:278:17\n    |\n278 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":282,"character":16},"end":{"line":282,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:283:17\n    |\n283 |                 queue!(stdout, FColor(color), Print(ch));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":288,"character":20},"end":{"line":288,"character":46}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:289:21\n    |\n289 |                     queue!(stdout, Print(' '));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":291,"character":12},"end":{"line":291,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:292:13\n    |\n292 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":297,"character":12},"end":{"line":297,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:298:13\n    |\n298 |             queue!(stdout, cursor::MoveTo(0, count as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":298,"character":12},"end":{"line":298,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:299:13\n    |\n299 |             queue!(stdout, Print(\" \".repeat(self.width-1)));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":299,"character":12},"end":{"line":299,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:300:13\n    |\n300 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":315,"character":8},"end":{"line":315,"character":79}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:316:9\n    |\n316 |         queue!(stdout,cursor::Show, cursor::MoveTo(0, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":316,"character":8},"end":{"line":316,"character":38}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:317:9\n    |\n317 |         queue!(stdout, Print(&search));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":317,"character":8},"end":{"line":317,"character":68}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:318:9\n    |\n318 |         queue!(stdout, Print(\" \".repeat(self.width-search.len()-1)));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":318,"character":8},"end":{"line":318,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:319:9\n    |\n319 |         queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":319,"character":8},"end":{"line":319,"character":106}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:320:9\n    |\n320 |         queue!(stdout, cursor::MoveTo((prefix.len() + self.search.index) as u16, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:394:13\n    |\n394 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n394 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:412:13\n    |\n412 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n412 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:429:13\n    |\n429 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n429 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:435:21\n    |\n435 |                     child.expand();\n    |                     ^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n435 |                     let _ = child.expand();\n    |                     +++++++\n\n"}},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"method `print` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `print` is never used\n  --> src/tree.rs:26:12\n   |\n22 | impl TreeNode {\n   | ------------- method in this implementation\n...\n26 |     pub fn print(&self) { println!(\"node {:?}\", self); }\n   |            ^^^^^\n\n"}},{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":322,"character":11},"end":{"line":322,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":326,"character":7},"end":{"line":326,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":353,"character":11},"end":{"line":353,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":514,"character":3},"end":{"line":514,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"function `list_files_and_directories` is never used","tags":[1],"data":{"rendered":"warning: function `list_files_and_directories` is never used\n   --> src/tree.rs:515:4\n    |\n515 | fn list_files_and_directories(path: &str) -> io::Result<Vec<String>> {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:38.794] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":69},"end":{"line":917,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`\n`#[warn(unused_variables)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:306:34\n    |\n306 |                         Some(Err(e)) => { /* println!(\"Error: {:?}\\r\", e) */ } ,\n    |                                  ^ help: if this is intentional, prefix it with an underscore: `_e`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_start`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `start`\n   --> src/editor.rs:846:13\n    |\n846 |         let start = time::Instant::now();\n    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\n"}},{"range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_chars_len`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `chars_len`\n   --> src/editor.rs:932:17\n    |\n932 |             let chars_len = line.chars().len();\n    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chars_len`\n\n"}},{"range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_c`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `c`\n    --> src/editor.rs:1016:17\n     |\n1016 |             for c in self.lp_width..self.width-status.chars().count()-1 {\n     |                 ^ help: if this is intentional, prefix it with an underscore: `_c`\n\n"}},{"range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable\n`#[warn(unused_mut)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2174:26\n     |\n2174 |             let (height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n     |\n     = note: `#[warn(unused_mut)]` on by default\n\n"}},{"range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2540:26\n     |\n2540 |         let (mut height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":399,"character":20},"end":{"line":399,"character":38}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\n`#[warn(unreachable_patterns)]` on by default","data":{"rendered":"warning: unreachable pattern\n   --> src/editor.rs:400:21\n    |\n400 |                     KeyCode::Char('g') => {\n    |                     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\n"}},{"range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2401:22\n     |\n2401 |         let (height, mut width) = (5, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":20}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":17}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2326:14\n     |\n2326 |         let (mut end, mut selected, mut selected_offset) = (false, 0, 0);\n     |              ----^^^\n     |              |\n     |              help: remove this `mut`\n\n"}},{"range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":17}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2327:22\n     |\n2327 |         let (height, mut width) = (10, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":19}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1935:13\n     |\n1935 |         let mut end = false;\n     |             ----^^^\n     |             |\n     |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1957:26\n     |\n1957 |             let (height, mut width) = (5, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":27}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":20}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1969:17\n     |\n1969 |             let mut options = &completion_result.items;\n     |                 ----^^^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\n"}},{"range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":20}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":33},"end":{"line":39,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n  --> src/editor.rs:40:34\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncBufReadExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncBufReadExt`\n  --> src/editor.rs:40:17\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                 ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_dir`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `dir`\n   --> src/editor.rs:127:16\n    |\n127 |     pub fn new(dir: String, config: Config) -> Self {\n    |                ^^^ help: if this is intentional, prefix it with an underscore: `_dir`\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:170:17\n    |\n170 |             Err(e) => {},\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_logo_width`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logo_width`\n    --> src/editor.rs:1121:13\n     |\n1121 |         let logo_width = lines.get(0).unwrap().len();\n     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_logo_width`\n\n"}},{"range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":826,"character":7},"end":{"line":826,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:827:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n827  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1116 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":826,"character":7},"end":{"line":826,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1115,"character":7},"end":{"line":1115,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:827:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n827  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1116 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled\n`#[warn(unused_must_use)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:535:29\n    |\n535 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n535 |                             let _ = node.toggle();\n    |                             +++++++\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}}},"message":"original diagnostic"}]},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:653:45\n    |\n653 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n653 |                                             let _ = node.toggle();\n    |                                             +++++++\n\n"}},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":848,"character":12},"end":{"line":848,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:849:13\n    |\n849 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":849,"character":43},"end":{"line":849,"character":73}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:850:44\n    |\n850 |             if self.tree_view.is_search(){ queue!(stdout(), cursor::Show); }\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":913,"character":12},"end":{"line":913,"character":85}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:914:13\n    |\n914 |             queue!(stdout, BColor(Color::Reset), FColor(lncolor), Print(line_number));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":922,"character":12},"end":{"line":922,"character":97}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:923:13\n    |\n923 |             queue!(stdout, BColor(Color::Reset), FColor(run_or_empty_color), Print(run_or_empty));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":923,"character":12},"end":{"line":923,"character":70}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:924:13\n    |\n924 |             queue!(stdout, BColor(Color::Reset), FColor(Color::Reset));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1010,"character":16},"end":{"line":1010,"character":80}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1011:17\n     |\n1011 |                 queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16));\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1014,"character":12},"end":{"line":1014,"character":84}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1015:13\n     |\n1015 |             queue!(stdout, cursor::MoveTo(self.lp_width as u16, self.height as u16));\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1050,"character":8},"end":{"line":1050,"character":50}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1051:9\n     |\n1051 |         queue!(stdout(), Print(\" \".repeat(space)));\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1128,"character":12},"end":{"line":1131,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1129:13\n     |\n1129 | /             queue!(stdout,\n1130 | |                 cursor::MoveTo(self.lp_width as u16, r as u16),\n1131 | |                 terminal::Clear(ClearType::UntilNewLine)\n1132 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1817,"character":8},"end":{"line":1820,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1818:9\n     |\n1818 | /         queue!(stdout(),\n1819 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1820 | |             BColor(Color::Reset), FColor(Color::Reset), Print(line),\n1821 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1821,"character":8},"end":{"line":1823,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1822:9\n     |\n1822 | /         queue!(stdout(),\n1823 | |             cursor::MoveTo((self.lp_width + 1 + prefix.len() + x) as u16, y as u16),\n1824 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1826:9\n     |\n1826 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1826 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1836,"character":8},"end":{"line":1839,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1837:9\n     |\n1837 | /         queue!(stdout(),\n1838 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1839 | |             BColor(Color::Reset), FColor(Color::Reset), Print(\" \".repeat(line.chars().count())),\n1840 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1842:9\n     |\n1842 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1842 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2065,"character":12},"end":{"line":2073,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2066:13\n     |\n2066 | /             queue!(stdout(),\n2067 | |                 cursor::MoveTo(\n2068 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2069 | |                     (self.r - self.y + row + 1) as u16\n...    |\n2073 | |                 BColor(Color::Reset), FColor(Color::Reset),\n2074 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2293,"character":12},"end":{"line":2296,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2294:13\n     |\n2294 | /             queue!(stdout(),\n2295 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (row + fromy) as u16),\n2296 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2297 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2301,"character":8},"end":{"line":2304,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2302:9\n     |\n2302 | /         queue!(stdout(),\n2303 | |             cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (self.height-1) as u16),\n2304 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2305 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2383,"character":12},"end":{"line":2389,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2384:13\n     |\n2384 | /             queue!(stdout(),\n2385 | |                 cursor::MoveTo(\n2386 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2387 | |                     (self.r - self.y + row + 1) as u16\n2388 | |                 ),\n2389 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2390 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2523,"character":12},"end":{"line":2526,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2524:13\n     |\n2524 | /             queue!(stdout(),\n2525 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, row  as u16),\n2526 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2527 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2676,"character":12},"end":{"line":2680,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2677:13\n     |\n2677 | /             queue!(stdout(),\n2678 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, (row + fromy) as u16),\n2679 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2680 | |                 terminal::Clear(ClearType::UntilNewLine), BColor(Color::Reset), FColor(Color::Reset),\n2681 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2688,"character":8},"end":{"line":2691,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2689:9\n     |\n2689 | /         queue!(stdout(),\n2690 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n2691 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2692 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:10:38.797] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[{"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"method `swap` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `swap` is never used\n   --> src/selection.rs:109:12\n    |\n38  | impl Selection {\n    | -------------- method in this implementation\n...\n109 |     pub fn swap(&mut self) {\n    |            ^^^^\n\n"}},{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:38.797] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"if this is intentional, prefix it with an underscore: `_logger`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logger`\n  --> src/main.rs:20:9\n   |\n20 |     let logger = match std::env::var(\"RED_LOG\") {\n   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_logger`\n\n"}},{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:38.799] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[{"range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":57},"end":{"line":3,"character":69}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":71},"end":{"line":3,"character":76}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueryMatch`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueryMatch`\n  --> src/tests.rs:50:29\n   |\n50 |     use tree_sitter::{Node, QueryMatch};\n   |                             ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}}},"message":"original diagnostic"}]},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_text_provider`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `text_provider`\n  --> src/tests.rs:92:13\n   |\n92 |         let text_provider = |node: tree_sitter::Node| {\n   |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_text_provider`\n\n"}},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `source_code_bytes`\n   --> src/tests.rs:101:13\n    |\n101 |         let source_code_bytes = &source_code.as_bytes();\n    |             ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_code_bytes`\n\n"}},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"if this is intentional, prefix it with an underscore: `_matches`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `matches`\n   --> src/tests.rs:112:13\n    |\n112 |         let matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`\n\n"}},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"function `walk_tree` is never used","tags":[1],"data":{"rendered":"warning: function `walk_tree` is never used\n --> src/tests.rs:6:8\n  |\n6 |     fn walk_tree(cursor: &mut TreeCursor, source_code: &str) {\n  |        ^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:38.800] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[{"range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n --> src/process.rs:3:34\n  |\n3 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n  |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/process.rs:168:9\n    |\n168 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::Mutex`\n   --> src/process.rs:169:9\n    |\n169 |     use tokio::sync::Mutex;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n  --> src/process.rs:62:14\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |              ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `child_stdout_receiver`\n  --> src/process.rs:62:24\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                        ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_child_stdout_receiver`\n\n"}},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"if this is intentional, prefix it with an underscore: `_m`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `m`\n  --> src/process.rs:98:26\n   |\n98 |                     Some(m) = kill.recv() => { // killing manually\n   |                          ^ help: if this is intentional, prefix it with an underscore: `_m`\n\n"}},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/process.rs:62:20\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                    ----^^^^^^^^^^^^^^^^^^^^^\n   |                    |\n   |                    help: remove this `mut`\n\n"}},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `super::Process`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `super::Process`\n   --> src/process.rs:171:9\n    |\n171 |     use super::Process;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":155,"character":7},"end":{"line":155,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:38.801] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `time`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `time`\n  --> src/search.rs:29:19\n   |\n29 |     use std::{fs, time};\n   |                   ^^^^\n\n"}},{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/search.rs:90:9\n   |\n90 |     use std::sync::Arc;\n   |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::task`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::task`\n   --> src/search.rs:169:9\n    |\n169 |     use tokio::task;\n    |         ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Display`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Display`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^\n\n"}},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `futures::future::ready`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `futures::future::ready`\n   --> src/search.rs:301:13\n    |\n301 |         use futures::future::ready;\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::path::PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::path::PathBuf`\n   --> src/search.rs:324:9\n    |\n324 |     use std::path::PathBuf;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::fs`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::fs`\n   --> src/search.rs:325:9\n    |\n325 |     use tokio::fs;\n    |         ^^^^^^^^^\n\n"}},{"range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search`\n   --> src/search.rs:380:9\n    |\n380 |     use crate::search;\n    |         ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/search.rs:405:9\n    |\n405 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Mutex`\n   --> src/search.rs:407:29\n    |\n407 |     use tokio::sync::{mpsc, Mutex};\n    |                             ^^^^^\n\n"}},{"range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/search.rs:361:21\n    |\n361 |                 let mut thread_name = thread.id();\n    |                     ----^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n\n"}},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_sender`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `sender`\n   --> src/search.rs:458:17\n    |\n458 |             let sender = sender.clone();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`\n\n"}},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"field `preview` is never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `preview` is never read\n  --> src/search.rs:97:9\n   |\n94 |     pub struct SearchResult {\n   |                ------------ field in this struct\n...\n97 |         preview: String,\n   |         ^^^^^^^\n   |\n   = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":8},"end":{"line":270,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":271,"character":8},"end":{"line":271,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":8},"end":{"line":411,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":412,"character":8},"end":{"line":412,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":2,"code":"non_snake_case","source":"rustc","message":"function `test_async_listFiles` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"convert the identifier to snake case: `test_async_list_files`"}],"data":{"rendered":"warning: function `test_async_listFiles` should have a snake case name\n   --> src/search.rs:328:14\n    |\n328 |     async fn test_async_listFiles() -> io::Result<()> {\n    |              ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `test_async_list_files`\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `test_async_list_files`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:389:13\n    |\n389 |             tx.send(\"sending from first handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n389 |             let _ = tx.send(\"sending from first handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:393:13\n    |\n393 |             tx2.send(\"sending from second handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n393 |             let _ = tx2.send(\"sending from second handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:460:17\n    |\n460 |                 t.await;\n    |                 ^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n460 |                 let _ = t.await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::time::Instant`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::time::Instant`\n  --> src/search.rs:91:9\n   |\n91 |     use std::time::Instant;\n   |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":29},"end":{"line":255,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `self`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `self`\n   --> src/search.rs:258:21\n    |\n258 |     use tokio::io::{self, AsyncBufReadExt, BufReader};\n    |                     ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc`\n   --> src/search.rs:381:9\n    |\n381 |     use tokio::sync::mpsc;\n    |         ^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:269:16\n    |\n269 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":274,"character":17},"end":{"line":274,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:275:18\n    |\n275 |     pub async fn search(path: &str, term: &str) -> tokio::io::Result<Vec<SearchResult>> {\n    |                  ^^^^^^\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:410:16\n    |\n410 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":415,"character":17},"end":{"line":415,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:416:18\n    |\n416 |     pub async fn search(\n    |                  ^^^^^^\n\n"}}]}}
[2024-11-18 20:10:38.803] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Value`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Value`\n   --> src/lsp.rs:511:28\n    |\n511 |     use serde_json::{json, Value};\n    |                            ^^^^^\n\n"}},{"range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"if this is intentional, prefix it with an underscore: `_id`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `id`\n   --> src/lsp.rs:201:38\n    |\n201 |     pub async fn wait_for(&mut self, id: usize, mut rx: mpsc::Receiver<String>) -> Option<String> {\n    |                                      ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n"}},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"original diagnostic"}]},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/lsp.rs:220:13\n    |\n220 |         let result = self.wait_for(id, rx).await;\n    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:215:18\n    |\n215 |         let (tx, mut rx) = tokio::sync::mpsc::channel::<String>(1);\n    |                  ----^^\n    |                  |\n    |                  help: remove this `mut`\n\n"}},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/lsp.rs:81:13\n   |\n81 |         let mut stdout = child.stdout.take().unwrap();\n   |             ----^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n   --> src/lsp.rs:452:10\n    |\n452 |     let (send, recv) = tokio::sync::oneshot::channel::<()>();\n    |          ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:463:9\n    |\n463 |     let mut stdout = child.stdout.take().unwrap();\n    |         ----^^^^^^\n    |         |\n    |         help: remove this `mut`\n\n"}},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":582,"character":11},"end":{"line":582,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_configuration` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_configuration` is never used\n   --> src/lsp.rs:583:12\n    |\n583 |     pub fn did_change_configuration() -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":617,"character":11},"end":{"line":617,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_watched_files` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_watched_files` is never used\n   --> src/lsp.rs:618:12\n    |\n618 |     pub fn did_change_watched_files(path: &str) -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":631,"character":11},"end":{"line":631,"character":24}},"severity":2,"code":"dead_code","source":"rustc","message":"function `document_link` is never used","tags":[1],"data":{"rendered":"warning: function `document_link` is never used\n   --> src/lsp.rs:632:12\n    |\n632 |     pub fn document_link(path: &str) -> String {\n    |            ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":681,"character":11},"end":{"line":681,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"function `completion` is never used","tags":[1],"data":{"rendered":"warning: function `completion` is never used\n   --> src/lsp.rs:682:12\n    |\n682 |     pub fn completion(id: usize, path: &str, line: usize, character: usize) -> String {\n    |            ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:88:17\n   |\n88 |                 stdin.write_all(header.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n88 |                 let _ = stdin.write_all(header.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:89:17\n   |\n89 |                 stdin.write_all(m.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n89 |                 let _ = stdin.write_all(m.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:90:17\n   |\n90 |                 stdin.flush().await;\n   |                 ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n90 |                 let _ = stdin.flush().await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:120:17\n    |\n120 |                 reader.read_exact(&mut content).await;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n120 |                 let _ = reader.read_exact(&mut content).await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}}},"message":"original diagnostic"}]},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:134:29\n    |\n134 | ...                   s.send(msg).await; // send to request channel\n    |                       ^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n134 |                             let _ = s.send(msg).await; // send to request channel\n    |                             +++++++\n\n"}},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:146:41\n    |\n146 | ...                   diagnostic_send.send(d.params).await;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n146 |                                         let _ = diagnostic_send.send(d.params).await;\n    |                                         +++++++\n\n"}},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}}},"message":"original diagnostic"}]},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:406:5\n    |\n406 |     lsp.start(lang, \"rust-analyzer\", None);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n406 |     let _ = lsp.start(lang, \"rust-analyzer\", None);\n    |     +++++++\n\n"}},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":4},"end":{"line":411,"character":17}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused implementer of `futures::Future` that must be used\nfutures do nothing unless you `.await` or poll them","data":{"rendered":"warning: unused implementer of `futures::Future` that must be used\n   --> src/lsp.rs:412:5\n    |\n412 |     lsp.init(dir);\n    |     ^^^^^^^^^^^^^\n    |\n    = note: futures do nothing unless you `.await` or poll them\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:469:13\n    |\n469 |             stdin.write_all(m.as_bytes()).await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n469 |             let _ = stdin.write_all(m.as_bytes()).await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:487:9\n    |\n487 |         send2_arc.send(\"hello\\n\".to_string()).await;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n487 |         let _ = send2_arc.send(\"hello\\n\".to_string()).await;\n    |         +++++++\n\n"}},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `isIncomplete` should have a snake case name\n`#[warn(non_snake_case)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"convert the identifier to snake case: `is_incomplete`"}],"data":{"rendered":"warning: structure field `isIncomplete` should have a snake case name\n   --> src/lsp.rs:712:13\n    |\n712 |         pub isIncomplete: Option<bool>,\n    |             ^^^^^^^^^^^^ help: convert the identifier to snake case: `is_incomplete`\n    |\n    = note: `#[warn(non_snake_case)]` on by default\n\n"}},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `is_incomplete`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `sortText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"convert the identifier to snake case: `sort_text`"}],"data":{"rendered":"warning: structure field `sortText` should have a snake case name\n   --> src/lsp.rs:722:13\n    |\n722 |         pub sortText: Option<String>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `sort_text`\n\n"}},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `sort_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"convert the identifier to snake case: `insert_text`"}],"data":{"rendered":"warning: structure field `insertText` should have a snake case name\n   --> src/lsp.rs:723:13\n    |\n723 |         pub insertText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `insert_text`\n\n"}},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `filterText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"convert the identifier to snake case: `filter_text`"}],"data":{"rendered":"warning: structure field `filterText` should have a snake case name\n   --> src/lsp.rs:724:13\n    |\n724 |         pub filterText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `filter_text`\n\n"}},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `filter_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertTextFormat` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"convert the identifier to snake case: `insert_text_format`"}],"data":{"rendered":"warning: structure field `insertTextFormat` should have a snake case name\n   --> src/lsp.rs:725:13\n    |\n725 |         pub insertTextFormat: Option<f64>,\n    |             ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `insert_text_format`\n\n"}},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text_format`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"original diagnostic"}]},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `textEdit` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"convert the identifier to snake case: `text_edit`"}],"data":{"rendered":"warning: structure field `textEdit` should have a snake case name\n   --> src/lsp.rs:726:13\n    |\n726 |         pub textEdit: Option<TextEdit>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `text_edit`\n\n"}},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `text_edit`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `newText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"convert the identifier to snake case: `new_text`"}],"data":{"rendered":"warning: structure field `newText` should have a snake case name\n   --> src/lsp.rs:735:13\n    |\n735 |         pub newText: String,\n    |             ^^^^^^^ help: convert the identifier to snake case: `new_text`\n\n"}},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `new_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `sleep`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `sleep`\n  --> src/lsp.rs:15:19\n   |\n15 | use tokio::time::{sleep, Duration};\n   |                   ^^^^^\n\n"}},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"method `stop` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `stop` is never used\n   --> src/lsp.rs:178:18\n    |\n39  | impl Lsp {\n    | -------- method in this implementation\n...\n178 |     pub async fn stop(&mut self) {\n    |                  ^^^^\n\n"}},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:38.805] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"function `hex_to_rgb` is never used","tags":[1],"data":{"rendered":"warning: function `hex_to_rgb` is never used\n  --> src/utils.rs:13:8\n   |\n13 | pub fn hex_to_rgb(hex_color: &str) -> (u8, u8, u8) {\n   |        ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":77,"character":7},"end":{"line":77,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"function `pad_left` is never used","tags":[1],"data":{"rendered":"warning: function `pad_left` is never used\n  --> src/utils.rs:78:8\n   |\n78 | pub fn pad_left(str: &str, length: usize) -> String {\n   |        ^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:38.805] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[{"range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}},"severity":4,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":848,"character":12},"end":{"line":848,"character":42}}},"message":"Exact error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:849:13\n    |\n849 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:10:38.944] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[]}}
[2024-11-18 20:10:38.944] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[]}}
[2024-11-18 20:10:38.945] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[]}}
[2024-11-18 20:10:38.947] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[]}}
[2024-11-18 20:10:38.949] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[]}}
[2024-11-18 20:10:38.955] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[]}}
[2024-11-18 20:10:38.957] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[]}}
[2024-11-18 20:10:38.959] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[]}}
[2024-11-18 20:10:38.960] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[]}}
[2024-11-18 20:10:38.963] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[]}}
[2024-11-18 20:10:38.964] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[]}}
[2024-11-18 20:10:38.965] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[]}}
[2024-11-18 20:10:39.103] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.103] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.104] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.116] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"if this is intentional, prefix it with an underscore: `_name`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `name`\n   --> src/code.rs:579:29\n    |\n579 |                         let name = capture_name.split('.').next().unwrap_or(capture_name);\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n"}},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:867:17\n    |\n867 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:887:17\n    |\n887 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:940:17\n    |\n940 |             let result = rope_search(slice, substring);\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}},"severity":2,"code":"dead_code","source":"rustc","message":"field `row` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `row` is never read\n   --> src/code.rs:660:9\n    |\n658 | pub struct Runnable {\n    |            -------- field in this struct\n659 |     pub cmd: String,\n660 |     pub row: usize,\n    |         ^^^\n\n"}},{"range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}}},"message":"original diagnostic"}]},{"range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"field `search_pattern` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `search_pattern` is never read\n   --> src/code.rs:779:5\n    |\n777 | struct EarlyTerminationSearch<'a> {\n    |        ---------------------- field in this struct\n778 |     char_iter: ropey::iter::Chars<'a>,\n779 |     search_pattern: &'a str,\n    |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":11},"end":{"line":168,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":361,"character":11},"end":{"line":361,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"method `move_line_up` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `move_line_up` is never used\n    --> src/code.rs:1082:12\n     |\n1038 | impl Code {\n     | --------- method in this implementation\n...\n1082 |     pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n     |            ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.117] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Serialize`\n --> src/config.rs:1:26\n  |\n1 | use serde::{Deserialize, Serialize};\n  |                          ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.117] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::fs::File`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::fs::File`\n --> src/tree.rs:2:5\n  |\n2 | use std::fs::File;\n  |     ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `PathBuf`\n --> src/tree.rs:3:23\n  |\n3 | use std::path::{Path, PathBuf};\n  |                       ^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueueableCommand`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueueableCommand`\n --> src/tree.rs:5:32\n  |\n5 | use crossterm::{cursor, queue, QueueableCommand, style::Print};\n  |                                ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde::de`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde::de`\n --> src/tree.rs:7:5\n  |\n7 | use serde::de;\n  |     ^^^^^^^^^\n\n"}},{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::watch::error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::watch::error`\n --> src/tree.rs:8:5\n  |\n8 | use tokio::sync::watch::error;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `SetBackgroundColor as BColor`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `SetBackgroundColor as BColor`\n  --> src/tree.rs:12:31\n   |\n12 | use crossterm::style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor};\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":54},"end":{"line":528,"character":70}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\nunreachable pattern","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}}},"message":"matches any value"}],"data":{"rendered":"warning: unreachable pattern\n   --> src/tree.rs:464:13\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |             ------------------------------------------------------------- matches any value\n...\n464 |             _ => {}\n    |             ^ unreachable pattern\n\n"}},{"range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}},"severity":4,"code":"unreachable_patterns","source":"rustc","message":"matches any value","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `row`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"try ignoring the field: `row: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `row`\n   --> src/tree.rs:455:44\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                            ^^^ help: try ignoring the field: `row: _`\n\n"}},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `row: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `column`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"try ignoring the field: `column: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `column`\n   --> src/tree.rs:455:49\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                 ^^^^^^ help: try ignoring the field: `column: _`\n\n"}},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `column: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `modifiers`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"try ignoring the field: `modifiers: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `modifiers`\n   --> src/tree.rs:455:63\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                               ^^^^^^^^^ help: try ignoring the field: `modifiers: _`\n\n"}},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `modifiers: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"original diagnostic"}]},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"if this is intentional, prefix it with an underscore: `_button`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `button`\n   --> src/tree.rs:459:60\n    |\n459 |                     crossterm::event::MouseEventKind::Down(button) => {}\n    |                                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_button`\n\n"}},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Write`","tags":[1],"data":{"rendered":"warning: unused import: `Write`\n --> src/tree.rs:4:21\n  |\n4 | use std::io::{self, Write};\n  |                     ^^^^^\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n  --> src/tree.rs:45:21\n   |\n45 |                 Err(e) => { debug!(\"cant get abs_path for {}\", name); continue;},\n   |                     ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:271:17\n    |\n271 |             for i in 0..padding_left {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:276:17\n    |\n276 |             for i in 0..depth {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:288:21\n    |\n288 |                 for i in 0..self.width-col-1 {\n    |                     ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}},"severity":2,"code":"dead_code","source":"rustc","message":"field `dir` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `dir` is never read\n   --> src/tree.rs:146:5\n    |\n143 | pub struct TreeView {\n    |            -------- field in this struct\n...\n146 |     dir: String,\n    |     ^^^\n\n"}},{"range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}}},"message":"original diagnostic"}]},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/tree.rs:97:21\n   |\n97 |                     child.expand();\n   |                     ^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n97 |                     let _ = child.expand();\n   |                     +++++++\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:179:9\n    |\n179 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n179 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:228:9\n    |\n228 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n228 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:234:9\n    |\n234 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n234 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":254,"character":8},"end":{"line":254,"character":36}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:255:9\n    |\n255 |         queue!(stdout, cursor::Hide);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":259,"character":12},"end":{"line":259,"character":55}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:260:13\n    |\n260 |             queue!(stdout, cursor::MoveTo(0, i as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":272,"character":16},"end":{"line":272,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:273:17\n    |\n273 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":277,"character":16},"end":{"line":277,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:278:17\n    |\n278 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":282,"character":16},"end":{"line":282,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:283:17\n    |\n283 |                 queue!(stdout, FColor(color), Print(ch));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":288,"character":20},"end":{"line":288,"character":46}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:289:21\n    |\n289 |                     queue!(stdout, Print(' '));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":291,"character":12},"end":{"line":291,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:292:13\n    |\n292 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":297,"character":12},"end":{"line":297,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:298:13\n    |\n298 |             queue!(stdout, cursor::MoveTo(0, count as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":298,"character":12},"end":{"line":298,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:299:13\n    |\n299 |             queue!(stdout, Print(\" \".repeat(self.width-1)));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":299,"character":12},"end":{"line":299,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:300:13\n    |\n300 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":315,"character":8},"end":{"line":315,"character":79}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:316:9\n    |\n316 |         queue!(stdout,cursor::Show, cursor::MoveTo(0, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":316,"character":8},"end":{"line":316,"character":38}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:317:9\n    |\n317 |         queue!(stdout, Print(&search));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":317,"character":8},"end":{"line":317,"character":68}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:318:9\n    |\n318 |         queue!(stdout, Print(\" \".repeat(self.width-search.len()-1)));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":318,"character":8},"end":{"line":318,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:319:9\n    |\n319 |         queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":319,"character":8},"end":{"line":319,"character":106}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:320:9\n    |\n320 |         queue!(stdout, cursor::MoveTo((prefix.len() + self.search.index) as u16, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:394:13\n    |\n394 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n394 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:412:13\n    |\n412 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n412 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:429:13\n    |\n429 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n429 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:435:21\n    |\n435 |                     child.expand();\n    |                     ^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n435 |                     let _ = child.expand();\n    |                     +++++++\n\n"}},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"method `print` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `print` is never used\n  --> src/tree.rs:26:12\n   |\n22 | impl TreeNode {\n   | ------------- method in this implementation\n...\n26 |     pub fn print(&self) { println!(\"node {:?}\", self); }\n   |            ^^^^^\n\n"}},{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":322,"character":11},"end":{"line":322,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":326,"character":7},"end":{"line":326,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":353,"character":11},"end":{"line":353,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":514,"character":3},"end":{"line":514,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"function `list_files_and_directories` is never used","tags":[1],"data":{"rendered":"warning: function `list_files_and_directories` is never used\n   --> src/tree.rs:515:4\n    |\n515 | fn list_files_and_directories(path: &str) -> io::Result<Vec<String>> {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.119] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":69},"end":{"line":917,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`\n`#[warn(unused_variables)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:306:34\n    |\n306 |                         Some(Err(e)) => { /* println!(\"Error: {:?}\\r\", e) */ } ,\n    |                                  ^ help: if this is intentional, prefix it with an underscore: `_e`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_start`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `start`\n   --> src/editor.rs:846:13\n    |\n846 |         let start = time::Instant::now();\n    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\n"}},{"range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_chars_len`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `chars_len`\n   --> src/editor.rs:932:17\n    |\n932 |             let chars_len = line.chars().len();\n    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chars_len`\n\n"}},{"range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_c`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `c`\n    --> src/editor.rs:1016:17\n     |\n1016 |             for c in self.lp_width..self.width-status.chars().count()-1 {\n     |                 ^ help: if this is intentional, prefix it with an underscore: `_c`\n\n"}},{"range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable\n`#[warn(unused_mut)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2174:26\n     |\n2174 |             let (height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n     |\n     = note: `#[warn(unused_mut)]` on by default\n\n"}},{"range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2540:26\n     |\n2540 |         let (mut height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":399,"character":20},"end":{"line":399,"character":38}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\n`#[warn(unreachable_patterns)]` on by default","data":{"rendered":"warning: unreachable pattern\n   --> src/editor.rs:400:21\n    |\n400 |                     KeyCode::Char('g') => {\n    |                     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\n"}},{"range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2401:22\n     |\n2401 |         let (height, mut width) = (5, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":20}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":17}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2326:14\n     |\n2326 |         let (mut end, mut selected, mut selected_offset) = (false, 0, 0);\n     |              ----^^^\n     |              |\n     |              help: remove this `mut`\n\n"}},{"range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":17}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2327:22\n     |\n2327 |         let (height, mut width) = (10, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":19}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1935:13\n     |\n1935 |         let mut end = false;\n     |             ----^^^\n     |             |\n     |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1957:26\n     |\n1957 |             let (height, mut width) = (5, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":27}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":20}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1969:17\n     |\n1969 |             let mut options = &completion_result.items;\n     |                 ----^^^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\n"}},{"range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":20}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":33},"end":{"line":39,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n  --> src/editor.rs:40:34\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncBufReadExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncBufReadExt`\n  --> src/editor.rs:40:17\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                 ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_dir`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `dir`\n   --> src/editor.rs:127:16\n    |\n127 |     pub fn new(dir: String, config: Config) -> Self {\n    |                ^^^ help: if this is intentional, prefix it with an underscore: `_dir`\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:170:17\n    |\n170 |             Err(e) => {},\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_logo_width`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logo_width`\n    --> src/editor.rs:1121:13\n     |\n1121 |         let logo_width = lines.get(0).unwrap().len();\n     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_logo_width`\n\n"}},{"range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":826,"character":7},"end":{"line":826,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:827:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n827  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1116 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":826,"character":7},"end":{"line":826,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1115,"character":7},"end":{"line":1115,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:827:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n827  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1116 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled\n`#[warn(unused_must_use)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:535:29\n    |\n535 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n535 |                             let _ = node.toggle();\n    |                             +++++++\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}}},"message":"original diagnostic"}]},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:653:45\n    |\n653 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n653 |                                             let _ = node.toggle();\n    |                                             +++++++\n\n"}},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":848,"character":12},"end":{"line":848,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:849:13\n    |\n849 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":849,"character":43},"end":{"line":849,"character":73}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:850:44\n    |\n850 |             if self.tree_view.is_search(){ queue!(stdout(), cursor::Show); }\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":913,"character":12},"end":{"line":913,"character":85}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:914:13\n    |\n914 |             queue!(stdout, BColor(Color::Reset), FColor(lncolor), Print(line_number));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":922,"character":12},"end":{"line":922,"character":97}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:923:13\n    |\n923 |             queue!(stdout, BColor(Color::Reset), FColor(run_or_empty_color), Print(run_or_empty));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":923,"character":12},"end":{"line":923,"character":70}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:924:13\n    |\n924 |             queue!(stdout, BColor(Color::Reset), FColor(Color::Reset));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1010,"character":16},"end":{"line":1010,"character":80}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1011:17\n     |\n1011 |                 queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16));\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1014,"character":12},"end":{"line":1014,"character":84}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1015:13\n     |\n1015 |             queue!(stdout, cursor::MoveTo(self.lp_width as u16, self.height as u16));\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1050,"character":8},"end":{"line":1050,"character":50}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1051:9\n     |\n1051 |         queue!(stdout(), Print(\" \".repeat(space)));\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1128,"character":12},"end":{"line":1131,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1129:13\n     |\n1129 | /             queue!(stdout,\n1130 | |                 cursor::MoveTo(self.lp_width as u16, r as u16),\n1131 | |                 terminal::Clear(ClearType::UntilNewLine)\n1132 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1817,"character":8},"end":{"line":1820,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1818:9\n     |\n1818 | /         queue!(stdout(),\n1819 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1820 | |             BColor(Color::Reset), FColor(Color::Reset), Print(line),\n1821 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1821,"character":8},"end":{"line":1823,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1822:9\n     |\n1822 | /         queue!(stdout(),\n1823 | |             cursor::MoveTo((self.lp_width + 1 + prefix.len() + x) as u16, y as u16),\n1824 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1826:9\n     |\n1826 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1826 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1836,"character":8},"end":{"line":1839,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1837:9\n     |\n1837 | /         queue!(stdout(),\n1838 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1839 | |             BColor(Color::Reset), FColor(Color::Reset), Print(\" \".repeat(line.chars().count())),\n1840 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1842:9\n     |\n1842 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1842 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2065,"character":12},"end":{"line":2073,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2066:13\n     |\n2066 | /             queue!(stdout(),\n2067 | |                 cursor::MoveTo(\n2068 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2069 | |                     (self.r - self.y + row + 1) as u16\n...    |\n2073 | |                 BColor(Color::Reset), FColor(Color::Reset),\n2074 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2293,"character":12},"end":{"line":2296,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2294:13\n     |\n2294 | /             queue!(stdout(),\n2295 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (row + fromy) as u16),\n2296 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2297 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2301,"character":8},"end":{"line":2304,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2302:9\n     |\n2302 | /         queue!(stdout(),\n2303 | |             cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (self.height-1) as u16),\n2304 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2305 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2383,"character":12},"end":{"line":2389,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2384:13\n     |\n2384 | /             queue!(stdout(),\n2385 | |                 cursor::MoveTo(\n2386 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2387 | |                     (self.r - self.y + row + 1) as u16\n2388 | |                 ),\n2389 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2390 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2523,"character":12},"end":{"line":2526,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2524:13\n     |\n2524 | /             queue!(stdout(),\n2525 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, row  as u16),\n2526 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2527 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2676,"character":12},"end":{"line":2680,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2677:13\n     |\n2677 | /             queue!(stdout(),\n2678 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, (row + fromy) as u16),\n2679 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2680 | |                 terminal::Clear(ClearType::UntilNewLine), BColor(Color::Reset), FColor(Color::Reset),\n2681 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2688,"character":8},"end":{"line":2691,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2689:9\n     |\n2689 | /         queue!(stdout(),\n2690 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n2691 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2692 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:10:39.122] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[{"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"method `swap` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `swap` is never used\n   --> src/selection.rs:109:12\n    |\n38  | impl Selection {\n    | -------------- method in this implementation\n...\n109 |     pub fn swap(&mut self) {\n    |            ^^^^\n\n"}},{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.122] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"if this is intentional, prefix it with an underscore: `_logger`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logger`\n  --> src/main.rs:20:9\n   |\n20 |     let logger = match std::env::var(\"RED_LOG\") {\n   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_logger`\n\n"}},{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.123] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[{"range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":57},"end":{"line":3,"character":69}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":71},"end":{"line":3,"character":76}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueryMatch`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueryMatch`\n  --> src/tests.rs:50:29\n   |\n50 |     use tree_sitter::{Node, QueryMatch};\n   |                             ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}}},"message":"original diagnostic"}]},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_text_provider`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `text_provider`\n  --> src/tests.rs:92:13\n   |\n92 |         let text_provider = |node: tree_sitter::Node| {\n   |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_text_provider`\n\n"}},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `source_code_bytes`\n   --> src/tests.rs:101:13\n    |\n101 |         let source_code_bytes = &source_code.as_bytes();\n    |             ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_code_bytes`\n\n"}},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"if this is intentional, prefix it with an underscore: `_matches`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `matches`\n   --> src/tests.rs:112:13\n    |\n112 |         let matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`\n\n"}},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"function `walk_tree` is never used","tags":[1],"data":{"rendered":"warning: function `walk_tree` is never used\n --> src/tests.rs:6:8\n  |\n6 |     fn walk_tree(cursor: &mut TreeCursor, source_code: &str) {\n  |        ^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.124] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[{"range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n --> src/process.rs:3:34\n  |\n3 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n  |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/process.rs:168:9\n    |\n168 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::Mutex`\n   --> src/process.rs:169:9\n    |\n169 |     use tokio::sync::Mutex;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n  --> src/process.rs:62:14\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |              ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `child_stdout_receiver`\n  --> src/process.rs:62:24\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                        ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_child_stdout_receiver`\n\n"}},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"if this is intentional, prefix it with an underscore: `_m`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `m`\n  --> src/process.rs:98:26\n   |\n98 |                     Some(m) = kill.recv() => { // killing manually\n   |                          ^ help: if this is intentional, prefix it with an underscore: `_m`\n\n"}},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/process.rs:62:20\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                    ----^^^^^^^^^^^^^^^^^^^^^\n   |                    |\n   |                    help: remove this `mut`\n\n"}},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `super::Process`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `super::Process`\n   --> src/process.rs:171:9\n    |\n171 |     use super::Process;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":155,"character":7},"end":{"line":155,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.125] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `time`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `time`\n  --> src/search.rs:29:19\n   |\n29 |     use std::{fs, time};\n   |                   ^^^^\n\n"}},{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/search.rs:90:9\n   |\n90 |     use std::sync::Arc;\n   |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::task`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::task`\n   --> src/search.rs:169:9\n    |\n169 |     use tokio::task;\n    |         ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Display`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Display`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^\n\n"}},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `futures::future::ready`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `futures::future::ready`\n   --> src/search.rs:301:13\n    |\n301 |         use futures::future::ready;\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::path::PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::path::PathBuf`\n   --> src/search.rs:324:9\n    |\n324 |     use std::path::PathBuf;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::fs`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::fs`\n   --> src/search.rs:325:9\n    |\n325 |     use tokio::fs;\n    |         ^^^^^^^^^\n\n"}},{"range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search`\n   --> src/search.rs:380:9\n    |\n380 |     use crate::search;\n    |         ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/search.rs:405:9\n    |\n405 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Mutex`\n   --> src/search.rs:407:29\n    |\n407 |     use tokio::sync::{mpsc, Mutex};\n    |                             ^^^^^\n\n"}},{"range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/search.rs:361:21\n    |\n361 |                 let mut thread_name = thread.id();\n    |                     ----^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n\n"}},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_sender`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `sender`\n   --> src/search.rs:458:17\n    |\n458 |             let sender = sender.clone();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`\n\n"}},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"field `preview` is never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `preview` is never read\n  --> src/search.rs:97:9\n   |\n94 |     pub struct SearchResult {\n   |                ------------ field in this struct\n...\n97 |         preview: String,\n   |         ^^^^^^^\n   |\n   = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":8},"end":{"line":270,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":271,"character":8},"end":{"line":271,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":8},"end":{"line":411,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":412,"character":8},"end":{"line":412,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":2,"code":"non_snake_case","source":"rustc","message":"function `test_async_listFiles` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"convert the identifier to snake case: `test_async_list_files`"}],"data":{"rendered":"warning: function `test_async_listFiles` should have a snake case name\n   --> src/search.rs:328:14\n    |\n328 |     async fn test_async_listFiles() -> io::Result<()> {\n    |              ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `test_async_list_files`\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `test_async_list_files`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:389:13\n    |\n389 |             tx.send(\"sending from first handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n389 |             let _ = tx.send(\"sending from first handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:393:13\n    |\n393 |             tx2.send(\"sending from second handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n393 |             let _ = tx2.send(\"sending from second handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:460:17\n    |\n460 |                 t.await;\n    |                 ^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n460 |                 let _ = t.await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::time::Instant`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::time::Instant`\n  --> src/search.rs:91:9\n   |\n91 |     use std::time::Instant;\n   |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":29},"end":{"line":255,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `self`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `self`\n   --> src/search.rs:258:21\n    |\n258 |     use tokio::io::{self, AsyncBufReadExt, BufReader};\n    |                     ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc`\n   --> src/search.rs:381:9\n    |\n381 |     use tokio::sync::mpsc;\n    |         ^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:269:16\n    |\n269 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":274,"character":17},"end":{"line":274,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:275:18\n    |\n275 |     pub async fn search(path: &str, term: &str) -> tokio::io::Result<Vec<SearchResult>> {\n    |                  ^^^^^^\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:410:16\n    |\n410 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":415,"character":17},"end":{"line":415,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:416:18\n    |\n416 |     pub async fn search(\n    |                  ^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.127] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Value`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Value`\n   --> src/lsp.rs:511:28\n    |\n511 |     use serde_json::{json, Value};\n    |                            ^^^^^\n\n"}},{"range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"if this is intentional, prefix it with an underscore: `_id`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `id`\n   --> src/lsp.rs:201:38\n    |\n201 |     pub async fn wait_for(&mut self, id: usize, mut rx: mpsc::Receiver<String>) -> Option<String> {\n    |                                      ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n"}},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"original diagnostic"}]},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/lsp.rs:220:13\n    |\n220 |         let result = self.wait_for(id, rx).await;\n    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:215:18\n    |\n215 |         let (tx, mut rx) = tokio::sync::mpsc::channel::<String>(1);\n    |                  ----^^\n    |                  |\n    |                  help: remove this `mut`\n\n"}},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/lsp.rs:81:13\n   |\n81 |         let mut stdout = child.stdout.take().unwrap();\n   |             ----^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n   --> src/lsp.rs:452:10\n    |\n452 |     let (send, recv) = tokio::sync::oneshot::channel::<()>();\n    |          ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:463:9\n    |\n463 |     let mut stdout = child.stdout.take().unwrap();\n    |         ----^^^^^^\n    |         |\n    |         help: remove this `mut`\n\n"}},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":582,"character":11},"end":{"line":582,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_configuration` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_configuration` is never used\n   --> src/lsp.rs:583:12\n    |\n583 |     pub fn did_change_configuration() -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":617,"character":11},"end":{"line":617,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_watched_files` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_watched_files` is never used\n   --> src/lsp.rs:618:12\n    |\n618 |     pub fn did_change_watched_files(path: &str) -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":631,"character":11},"end":{"line":631,"character":24}},"severity":2,"code":"dead_code","source":"rustc","message":"function `document_link` is never used","tags":[1],"data":{"rendered":"warning: function `document_link` is never used\n   --> src/lsp.rs:632:12\n    |\n632 |     pub fn document_link(path: &str) -> String {\n    |            ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":681,"character":11},"end":{"line":681,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"function `completion` is never used","tags":[1],"data":{"rendered":"warning: function `completion` is never used\n   --> src/lsp.rs:682:12\n    |\n682 |     pub fn completion(id: usize, path: &str, line: usize, character: usize) -> String {\n    |            ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:88:17\n   |\n88 |                 stdin.write_all(header.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n88 |                 let _ = stdin.write_all(header.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:89:17\n   |\n89 |                 stdin.write_all(m.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n89 |                 let _ = stdin.write_all(m.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:90:17\n   |\n90 |                 stdin.flush().await;\n   |                 ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n90 |                 let _ = stdin.flush().await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:120:17\n    |\n120 |                 reader.read_exact(&mut content).await;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n120 |                 let _ = reader.read_exact(&mut content).await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}}},"message":"original diagnostic"}]},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:134:29\n    |\n134 | ...                   s.send(msg).await; // send to request channel\n    |                       ^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n134 |                             let _ = s.send(msg).await; // send to request channel\n    |                             +++++++\n\n"}},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:146:41\n    |\n146 | ...                   diagnostic_send.send(d.params).await;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n146 |                                         let _ = diagnostic_send.send(d.params).await;\n    |                                         +++++++\n\n"}},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}}},"message":"original diagnostic"}]},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:406:5\n    |\n406 |     lsp.start(lang, \"rust-analyzer\", None);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n406 |     let _ = lsp.start(lang, \"rust-analyzer\", None);\n    |     +++++++\n\n"}},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":4},"end":{"line":411,"character":17}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused implementer of `futures::Future` that must be used\nfutures do nothing unless you `.await` or poll them","data":{"rendered":"warning: unused implementer of `futures::Future` that must be used\n   --> src/lsp.rs:412:5\n    |\n412 |     lsp.init(dir);\n    |     ^^^^^^^^^^^^^\n    |\n    = note: futures do nothing unless you `.await` or poll them\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:469:13\n    |\n469 |             stdin.write_all(m.as_bytes()).await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n469 |             let _ = stdin.write_all(m.as_bytes()).await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:487:9\n    |\n487 |         send2_arc.send(\"hello\\n\".to_string()).await;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n487 |         let _ = send2_arc.send(\"hello\\n\".to_string()).await;\n    |         +++++++\n\n"}},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `isIncomplete` should have a snake case name\n`#[warn(non_snake_case)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"convert the identifier to snake case: `is_incomplete`"}],"data":{"rendered":"warning: structure field `isIncomplete` should have a snake case name\n   --> src/lsp.rs:712:13\n    |\n712 |         pub isIncomplete: Option<bool>,\n    |             ^^^^^^^^^^^^ help: convert the identifier to snake case: `is_incomplete`\n    |\n    = note: `#[warn(non_snake_case)]` on by default\n\n"}},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `is_incomplete`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `sortText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"convert the identifier to snake case: `sort_text`"}],"data":{"rendered":"warning: structure field `sortText` should have a snake case name\n   --> src/lsp.rs:722:13\n    |\n722 |         pub sortText: Option<String>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `sort_text`\n\n"}},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `sort_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"convert the identifier to snake case: `insert_text`"}],"data":{"rendered":"warning: structure field `insertText` should have a snake case name\n   --> src/lsp.rs:723:13\n    |\n723 |         pub insertText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `insert_text`\n\n"}},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `filterText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"convert the identifier to snake case: `filter_text`"}],"data":{"rendered":"warning: structure field `filterText` should have a snake case name\n   --> src/lsp.rs:724:13\n    |\n724 |         pub filterText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `filter_text`\n\n"}},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `filter_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertTextFormat` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"convert the identifier to snake case: `insert_text_format`"}],"data":{"rendered":"warning: structure field `insertTextFormat` should have a snake case name\n   --> src/lsp.rs:725:13\n    |\n725 |         pub insertTextFormat: Option<f64>,\n    |             ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `insert_text_format`\n\n"}},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text_format`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"original diagnostic"}]},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `textEdit` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"convert the identifier to snake case: `text_edit`"}],"data":{"rendered":"warning: structure field `textEdit` should have a snake case name\n   --> src/lsp.rs:726:13\n    |\n726 |         pub textEdit: Option<TextEdit>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `text_edit`\n\n"}},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `text_edit`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `newText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"convert the identifier to snake case: `new_text`"}],"data":{"rendered":"warning: structure field `newText` should have a snake case name\n   --> src/lsp.rs:735:13\n    |\n735 |         pub newText: String,\n    |             ^^^^^^^ help: convert the identifier to snake case: `new_text`\n\n"}},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `new_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `sleep`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `sleep`\n  --> src/lsp.rs:15:19\n   |\n15 | use tokio::time::{sleep, Duration};\n   |                   ^^^^^\n\n"}},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"method `stop` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `stop` is never used\n   --> src/lsp.rs:178:18\n    |\n39  | impl Lsp {\n    | -------- method in this implementation\n...\n178 |     pub async fn stop(&mut self) {\n    |                  ^^^^\n\n"}},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.129] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"function `hex_to_rgb` is never used","tags":[1],"data":{"rendered":"warning: function `hex_to_rgb` is never used\n  --> src/utils.rs:13:8\n   |\n13 | pub fn hex_to_rgb(hex_color: &str) -> (u8, u8, u8) {\n   |        ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":77,"character":7},"end":{"line":77,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"function `pad_left` is never used","tags":[1],"data":{"rendered":"warning: function `pad_left` is never used\n  --> src/utils.rs:78:8\n   |\n78 | pub fn pad_left(str: &str, length: usize) -> String {\n   |        ^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.129] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[{"range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}},"severity":4,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":848,"character":12},"end":{"line":848,"character":42}}},"message":"Exact error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:849:13\n    |\n849 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:10:39.331] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[]}}
[2024-11-18 20:10:39.331] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[]}}
[2024-11-18 20:10:39.331] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[]}}
[2024-11-18 20:10:39.332] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[]}}
[2024-11-18 20:10:39.338] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[]}}
[2024-11-18 20:10:39.339] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[]}}
[2024-11-18 20:10:39.340] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[]}}
[2024-11-18 20:10:39.341] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[]}}
[2024-11-18 20:10:39.342] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[]}}
[2024-11-18 20:10:39.343] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[]}}
[2024-11-18 20:10:39.344] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[]}}
[2024-11-18 20:10:39.344] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[]}}
[2024-11-18 20:10:39.500] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.500] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.500] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.501] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.502] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":69},"end":{"line":917,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}}]}}
[2024-11-18 20:10:39.503] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Value`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Value`\n   --> src/lsp.rs:511:28\n    |\n511 |     use serde_json::{json, Value};\n    |                            ^^^^^\n\n"}},{"range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.513] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"if this is intentional, prefix it with an underscore: `_name`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `name`\n   --> src/code.rs:579:29\n    |\n579 |                         let name = capture_name.split('.').next().unwrap_or(capture_name);\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n"}},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:867:17\n    |\n867 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:887:17\n    |\n887 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:940:17\n    |\n940 |             let result = rope_search(slice, substring);\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}},"severity":2,"code":"dead_code","source":"rustc","message":"field `row` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `row` is never read\n   --> src/code.rs:660:9\n    |\n658 | pub struct Runnable {\n    |            -------- field in this struct\n659 |     pub cmd: String,\n660 |     pub row: usize,\n    |         ^^^\n\n"}},{"range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}}},"message":"original diagnostic"}]},{"range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"field `search_pattern` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `search_pattern` is never read\n   --> src/code.rs:779:5\n    |\n777 | struct EarlyTerminationSearch<'a> {\n    |        ---------------------- field in this struct\n778 |     char_iter: ropey::iter::Chars<'a>,\n779 |     search_pattern: &'a str,\n    |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":11},"end":{"line":168,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":361,"character":11},"end":{"line":361,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"method `move_line_up` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `move_line_up` is never used\n    --> src/code.rs:1082:12\n     |\n1038 | impl Code {\n     | --------- method in this implementation\n...\n1082 |     pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n     |            ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.514] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Serialize`\n --> src/config.rs:1:26\n  |\n1 | use serde::{Deserialize, Serialize};\n  |                          ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.515] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::fs::File`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::fs::File`\n --> src/tree.rs:2:5\n  |\n2 | use std::fs::File;\n  |     ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `PathBuf`\n --> src/tree.rs:3:23\n  |\n3 | use std::path::{Path, PathBuf};\n  |                       ^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueueableCommand`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueueableCommand`\n --> src/tree.rs:5:32\n  |\n5 | use crossterm::{cursor, queue, QueueableCommand, style::Print};\n  |                                ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde::de`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde::de`\n --> src/tree.rs:7:5\n  |\n7 | use serde::de;\n  |     ^^^^^^^^^\n\n"}},{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::watch::error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::watch::error`\n --> src/tree.rs:8:5\n  |\n8 | use tokio::sync::watch::error;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `SetBackgroundColor as BColor`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `SetBackgroundColor as BColor`\n  --> src/tree.rs:12:31\n   |\n12 | use crossterm::style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor};\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":54},"end":{"line":528,"character":70}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\nunreachable pattern","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}}},"message":"matches any value"}],"data":{"rendered":"warning: unreachable pattern\n   --> src/tree.rs:464:13\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |             ------------------------------------------------------------- matches any value\n...\n464 |             _ => {}\n    |             ^ unreachable pattern\n\n"}},{"range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}},"severity":4,"code":"unreachable_patterns","source":"rustc","message":"matches any value","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `row`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"try ignoring the field: `row: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `row`\n   --> src/tree.rs:455:44\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                            ^^^ help: try ignoring the field: `row: _`\n\n"}},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `row: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `column`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"try ignoring the field: `column: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `column`\n   --> src/tree.rs:455:49\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                 ^^^^^^ help: try ignoring the field: `column: _`\n\n"}},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `column: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `modifiers`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"try ignoring the field: `modifiers: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `modifiers`\n   --> src/tree.rs:455:63\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                               ^^^^^^^^^ help: try ignoring the field: `modifiers: _`\n\n"}},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `modifiers: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"original diagnostic"}]},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"if this is intentional, prefix it with an underscore: `_button`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `button`\n   --> src/tree.rs:459:60\n    |\n459 |                     crossterm::event::MouseEventKind::Down(button) => {}\n    |                                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_button`\n\n"}},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Write`","tags":[1],"data":{"rendered":"warning: unused import: `Write`\n --> src/tree.rs:4:21\n  |\n4 | use std::io::{self, Write};\n  |                     ^^^^^\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n  --> src/tree.rs:45:21\n   |\n45 |                 Err(e) => { debug!(\"cant get abs_path for {}\", name); continue;},\n   |                     ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:271:17\n    |\n271 |             for i in 0..padding_left {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:276:17\n    |\n276 |             for i in 0..depth {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:288:21\n    |\n288 |                 for i in 0..self.width-col-1 {\n    |                     ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}},"severity":2,"code":"dead_code","source":"rustc","message":"field `dir` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `dir` is never read\n   --> src/tree.rs:146:5\n    |\n143 | pub struct TreeView {\n    |            -------- field in this struct\n...\n146 |     dir: String,\n    |     ^^^\n\n"}},{"range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}}},"message":"original diagnostic"}]},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/tree.rs:97:21\n   |\n97 |                     child.expand();\n   |                     ^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n97 |                     let _ = child.expand();\n   |                     +++++++\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:179:9\n    |\n179 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n179 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:228:9\n    |\n228 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n228 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:234:9\n    |\n234 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n234 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":254,"character":8},"end":{"line":254,"character":36}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:255:9\n    |\n255 |         queue!(stdout, cursor::Hide);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":259,"character":12},"end":{"line":259,"character":55}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:260:13\n    |\n260 |             queue!(stdout, cursor::MoveTo(0, i as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":272,"character":16},"end":{"line":272,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:273:17\n    |\n273 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":277,"character":16},"end":{"line":277,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:278:17\n    |\n278 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":282,"character":16},"end":{"line":282,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:283:17\n    |\n283 |                 queue!(stdout, FColor(color), Print(ch));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":288,"character":20},"end":{"line":288,"character":46}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:289:21\n    |\n289 |                     queue!(stdout, Print(' '));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":291,"character":12},"end":{"line":291,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:292:13\n    |\n292 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":297,"character":12},"end":{"line":297,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:298:13\n    |\n298 |             queue!(stdout, cursor::MoveTo(0, count as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":298,"character":12},"end":{"line":298,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:299:13\n    |\n299 |             queue!(stdout, Print(\" \".repeat(self.width-1)));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":299,"character":12},"end":{"line":299,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:300:13\n    |\n300 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":315,"character":8},"end":{"line":315,"character":79}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:316:9\n    |\n316 |         queue!(stdout,cursor::Show, cursor::MoveTo(0, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":316,"character":8},"end":{"line":316,"character":38}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:317:9\n    |\n317 |         queue!(stdout, Print(&search));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":317,"character":8},"end":{"line":317,"character":68}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:318:9\n    |\n318 |         queue!(stdout, Print(\" \".repeat(self.width-search.len()-1)));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":318,"character":8},"end":{"line":318,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:319:9\n    |\n319 |         queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":319,"character":8},"end":{"line":319,"character":106}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:320:9\n    |\n320 |         queue!(stdout, cursor::MoveTo((prefix.len() + self.search.index) as u16, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:394:13\n    |\n394 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n394 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:412:13\n    |\n412 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n412 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:429:13\n    |\n429 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n429 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:435:21\n    |\n435 |                     child.expand();\n    |                     ^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n435 |                     let _ = child.expand();\n    |                     +++++++\n\n"}},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"method `print` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `print` is never used\n  --> src/tree.rs:26:12\n   |\n22 | impl TreeNode {\n   | ------------- method in this implementation\n...\n26 |     pub fn print(&self) { println!(\"node {:?}\", self); }\n   |            ^^^^^\n\n"}},{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":322,"character":11},"end":{"line":322,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":326,"character":7},"end":{"line":326,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":353,"character":11},"end":{"line":353,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":514,"character":3},"end":{"line":514,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"function `list_files_and_directories` is never used","tags":[1],"data":{"rendered":"warning: function `list_files_and_directories` is never used\n   --> src/tree.rs:515:4\n    |\n515 | fn list_files_and_directories(path: &str) -> io::Result<Vec<String>> {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.517] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":917,"character":69},"end":{"line":917,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":917,"character":66},"end":{"line":917,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:918:67\n    |\n918 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n918 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n918 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`\n`#[warn(unused_variables)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:306:34\n    |\n306 |                         Some(Err(e)) => { /* println!(\"Error: {:?}\\r\", e) */ } ,\n    |                                  ^ help: if this is intentional, prefix it with an underscore: `_e`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_start`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `start`\n   --> src/editor.rs:846:13\n    |\n846 |         let start = time::Instant::now();\n    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\n"}},{"range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":845,"character":12},"end":{"line":845,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_chars_len`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `chars_len`\n   --> src/editor.rs:932:17\n    |\n932 |             let chars_len = line.chars().len();\n    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chars_len`\n\n"}},{"range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":931,"character":16},"end":{"line":931,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_c`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `c`\n    --> src/editor.rs:1016:17\n     |\n1016 |             for c in self.lp_width..self.width-status.chars().count()-1 {\n     |                 ^ help: if this is intentional, prefix it with an underscore: `_c`\n\n"}},{"range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1015,"character":16},"end":{"line":1015,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable\n`#[warn(unused_mut)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2174:26\n     |\n2174 |             let (height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n     |\n     = note: `#[warn(unused_mut)]` on by default\n\n"}},{"range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2173,"character":25},"end":{"line":2173,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2540:26\n     |\n2540 |         let (mut height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2539,"character":25},"end":{"line":2539,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":399,"character":20},"end":{"line":399,"character":38}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\n`#[warn(unreachable_patterns)]` on by default","data":{"rendered":"warning: unreachable pattern\n   --> src/editor.rs:400:21\n    |\n400 |                     KeyCode::Char('g') => {\n    |                     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\n"}},{"range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2401:22\n     |\n2401 |         let (height, mut width) = (5, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2400,"character":21},"end":{"line":2400,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":20}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":17}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2326:14\n     |\n2326 |         let (mut end, mut selected, mut selected_offset) = (false, 0, 0);\n     |              ----^^^\n     |              |\n     |              help: remove this `mut`\n\n"}},{"range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":17}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2325,"character":13},"end":{"line":2325,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2327:22\n     |\n2327 |         let (height, mut width) = (10, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2326,"character":21},"end":{"line":2326,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":19}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1935:13\n     |\n1935 |         let mut end = false;\n     |             ----^^^\n     |             |\n     |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1934,"character":12},"end":{"line":1934,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1957:26\n     |\n1957 |             let (height, mut width) = (5, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1956,"character":25},"end":{"line":1956,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":27}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":20}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1969:17\n     |\n1969 |             let mut options = &completion_result.items;\n     |                 ----^^^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\n"}},{"range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":20}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1968,"character":16},"end":{"line":1968,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":33},"end":{"line":39,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n  --> src/editor.rs:40:34\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncBufReadExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncBufReadExt`\n  --> src/editor.rs:40:17\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                 ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_dir`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `dir`\n   --> src/editor.rs:127:16\n    |\n127 |     pub fn new(dir: String, config: Config) -> Self {\n    |                ^^^ help: if this is intentional, prefix it with an underscore: `_dir`\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:170:17\n    |\n170 |             Err(e) => {},\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_logo_width`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logo_width`\n    --> src/editor.rs:1121:13\n     |\n1121 |         let logo_width = lines.get(0).unwrap().len();\n     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_logo_width`\n\n"}},{"range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1120,"character":12},"end":{"line":1120,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":826,"character":7},"end":{"line":826,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:827:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n827  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1116 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":826,"character":7},"end":{"line":826,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1115,"character":7},"end":{"line":1115,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:827:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n827  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1116 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled\n`#[warn(unused_must_use)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:535:29\n    |\n535 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n535 |                             let _ = node.toggle();\n    |                             +++++++\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}}},"message":"original diagnostic"}]},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:653:45\n    |\n653 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n653 |                                             let _ = node.toggle();\n    |                                             +++++++\n\n"}},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":848,"character":12},"end":{"line":848,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:849:13\n    |\n849 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":849,"character":43},"end":{"line":849,"character":73}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:850:44\n    |\n850 |             if self.tree_view.is_search(){ queue!(stdout(), cursor::Show); }\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":913,"character":12},"end":{"line":913,"character":85}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:914:13\n    |\n914 |             queue!(stdout, BColor(Color::Reset), FColor(lncolor), Print(line_number));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":922,"character":12},"end":{"line":922,"character":97}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:923:13\n    |\n923 |             queue!(stdout, BColor(Color::Reset), FColor(run_or_empty_color), Print(run_or_empty));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":923,"character":12},"end":{"line":923,"character":70}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:924:13\n    |\n924 |             queue!(stdout, BColor(Color::Reset), FColor(Color::Reset));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1010,"character":16},"end":{"line":1010,"character":80}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1011:17\n     |\n1011 |                 queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16));\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1014,"character":12},"end":{"line":1014,"character":84}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1015:13\n     |\n1015 |             queue!(stdout, cursor::MoveTo(self.lp_width as u16, self.height as u16));\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1050,"character":8},"end":{"line":1050,"character":50}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1051:9\n     |\n1051 |         queue!(stdout(), Print(\" \".repeat(space)));\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1128,"character":12},"end":{"line":1131,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1129:13\n     |\n1129 | /             queue!(stdout,\n1130 | |                 cursor::MoveTo(self.lp_width as u16, r as u16),\n1131 | |                 terminal::Clear(ClearType::UntilNewLine)\n1132 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1817,"character":8},"end":{"line":1820,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1818:9\n     |\n1818 | /         queue!(stdout(),\n1819 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1820 | |             BColor(Color::Reset), FColor(Color::Reset), Print(line),\n1821 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1821,"character":8},"end":{"line":1823,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1822:9\n     |\n1822 | /         queue!(stdout(),\n1823 | |             cursor::MoveTo((self.lp_width + 1 + prefix.len() + x) as u16, y as u16),\n1824 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1826:9\n     |\n1826 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1826 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1825,"character":8},"end":{"line":1825,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1836,"character":8},"end":{"line":1839,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1837:9\n     |\n1837 | /         queue!(stdout(),\n1838 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1839 | |             BColor(Color::Reset), FColor(Color::Reset), Print(\" \".repeat(line.chars().count())),\n1840 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1842:9\n     |\n1842 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1842 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1841,"character":8},"end":{"line":1841,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2065,"character":12},"end":{"line":2073,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2066:13\n     |\n2066 | /             queue!(stdout(),\n2067 | |                 cursor::MoveTo(\n2068 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2069 | |                     (self.r - self.y + row + 1) as u16\n...    |\n2073 | |                 BColor(Color::Reset), FColor(Color::Reset),\n2074 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2293,"character":12},"end":{"line":2296,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2294:13\n     |\n2294 | /             queue!(stdout(),\n2295 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (row + fromy) as u16),\n2296 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2297 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2301,"character":8},"end":{"line":2304,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2302:9\n     |\n2302 | /         queue!(stdout(),\n2303 | |             cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (self.height-1) as u16),\n2304 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2305 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2383,"character":12},"end":{"line":2389,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2384:13\n     |\n2384 | /             queue!(stdout(),\n2385 | |                 cursor::MoveTo(\n2386 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2387 | |                     (self.r - self.y + row + 1) as u16\n2388 | |                 ),\n2389 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2390 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2523,"character":12},"end":{"line":2526,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2524:13\n     |\n2524 | /             queue!(stdout(),\n2525 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, row  as u16),\n2526 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2527 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2676,"character":12},"end":{"line":2680,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2677:13\n     |\n2677 | /             queue!(stdout(),\n2678 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, (row + fromy) as u16),\n2679 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2680 | |                 terminal::Clear(ClearType::UntilNewLine), BColor(Color::Reset), FColor(Color::Reset),\n2681 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2688,"character":8},"end":{"line":2691,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2689:9\n     |\n2689 | /         queue!(stdout(),\n2690 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n2691 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2692 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:10:39.520] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[{"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"method `swap` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `swap` is never used\n   --> src/selection.rs:109:12\n    |\n38  | impl Selection {\n    | -------------- method in this implementation\n...\n109 |     pub fn swap(&mut self) {\n    |            ^^^^\n\n"}},{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.520] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"if this is intentional, prefix it with an underscore: `_logger`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logger`\n  --> src/main.rs:20:9\n   |\n20 |     let logger = match std::env::var(\"RED_LOG\") {\n   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_logger`\n\n"}},{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.520] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[{"range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":57},"end":{"line":3,"character":69}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":71},"end":{"line":3,"character":76}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueryMatch`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueryMatch`\n  --> src/tests.rs:50:29\n   |\n50 |     use tree_sitter::{Node, QueryMatch};\n   |                             ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}}},"message":"original diagnostic"}]},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_text_provider`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `text_provider`\n  --> src/tests.rs:92:13\n   |\n92 |         let text_provider = |node: tree_sitter::Node| {\n   |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_text_provider`\n\n"}},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `source_code_bytes`\n   --> src/tests.rs:101:13\n    |\n101 |         let source_code_bytes = &source_code.as_bytes();\n    |             ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_code_bytes`\n\n"}},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"if this is intentional, prefix it with an underscore: `_matches`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `matches`\n   --> src/tests.rs:112:13\n    |\n112 |         let matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`\n\n"}},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"function `walk_tree` is never used","tags":[1],"data":{"rendered":"warning: function `walk_tree` is never used\n --> src/tests.rs:6:8\n  |\n6 |     fn walk_tree(cursor: &mut TreeCursor, source_code: &str) {\n  |        ^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.521] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[{"range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n --> src/process.rs:3:34\n  |\n3 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n  |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/process.rs:168:9\n    |\n168 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::Mutex`\n   --> src/process.rs:169:9\n    |\n169 |     use tokio::sync::Mutex;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n  --> src/process.rs:62:14\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |              ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `child_stdout_receiver`\n  --> src/process.rs:62:24\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                        ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_child_stdout_receiver`\n\n"}},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"if this is intentional, prefix it with an underscore: `_m`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `m`\n  --> src/process.rs:98:26\n   |\n98 |                     Some(m) = kill.recv() => { // killing manually\n   |                          ^ help: if this is intentional, prefix it with an underscore: `_m`\n\n"}},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/process.rs:62:20\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                    ----^^^^^^^^^^^^^^^^^^^^^\n   |                    |\n   |                    help: remove this `mut`\n\n"}},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `super::Process`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `super::Process`\n   --> src/process.rs:171:9\n    |\n171 |     use super::Process;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":155,"character":7},"end":{"line":155,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.522] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `time`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `time`\n  --> src/search.rs:29:19\n   |\n29 |     use std::{fs, time};\n   |                   ^^^^\n\n"}},{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/search.rs:90:9\n   |\n90 |     use std::sync::Arc;\n   |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::task`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::task`\n   --> src/search.rs:169:9\n    |\n169 |     use tokio::task;\n    |         ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Display`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Display`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^\n\n"}},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `futures::future::ready`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `futures::future::ready`\n   --> src/search.rs:301:13\n    |\n301 |         use futures::future::ready;\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::path::PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::path::PathBuf`\n   --> src/search.rs:324:9\n    |\n324 |     use std::path::PathBuf;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::fs`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::fs`\n   --> src/search.rs:325:9\n    |\n325 |     use tokio::fs;\n    |         ^^^^^^^^^\n\n"}},{"range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search`\n   --> src/search.rs:380:9\n    |\n380 |     use crate::search;\n    |         ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/search.rs:405:9\n    |\n405 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Mutex`\n   --> src/search.rs:407:29\n    |\n407 |     use tokio::sync::{mpsc, Mutex};\n    |                             ^^^^^\n\n"}},{"range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/search.rs:361:21\n    |\n361 |                 let mut thread_name = thread.id();\n    |                     ----^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n\n"}},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_sender`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `sender`\n   --> src/search.rs:458:17\n    |\n458 |             let sender = sender.clone();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`\n\n"}},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"field `preview` is never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `preview` is never read\n  --> src/search.rs:97:9\n   |\n94 |     pub struct SearchResult {\n   |                ------------ field in this struct\n...\n97 |         preview: String,\n   |         ^^^^^^^\n   |\n   = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":8},"end":{"line":270,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":271,"character":8},"end":{"line":271,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":8},"end":{"line":411,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":412,"character":8},"end":{"line":412,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":2,"code":"non_snake_case","source":"rustc","message":"function `test_async_listFiles` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"convert the identifier to snake case: `test_async_list_files`"}],"data":{"rendered":"warning: function `test_async_listFiles` should have a snake case name\n   --> src/search.rs:328:14\n    |\n328 |     async fn test_async_listFiles() -> io::Result<()> {\n    |              ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `test_async_list_files`\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `test_async_list_files`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:389:13\n    |\n389 |             tx.send(\"sending from first handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n389 |             let _ = tx.send(\"sending from first handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:393:13\n    |\n393 |             tx2.send(\"sending from second handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n393 |             let _ = tx2.send(\"sending from second handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:460:17\n    |\n460 |                 t.await;\n    |                 ^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n460 |                 let _ = t.await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::time::Instant`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::time::Instant`\n  --> src/search.rs:91:9\n   |\n91 |     use std::time::Instant;\n   |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":29},"end":{"line":255,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `self`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `self`\n   --> src/search.rs:258:21\n    |\n258 |     use tokio::io::{self, AsyncBufReadExt, BufReader};\n    |                     ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc`\n   --> src/search.rs:381:9\n    |\n381 |     use tokio::sync::mpsc;\n    |         ^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:269:16\n    |\n269 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":274,"character":17},"end":{"line":274,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:275:18\n    |\n275 |     pub async fn search(path: &str, term: &str) -> tokio::io::Result<Vec<SearchResult>> {\n    |                  ^^^^^^\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:410:16\n    |\n410 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":415,"character":17},"end":{"line":415,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:416:18\n    |\n416 |     pub async fn search(\n    |                  ^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.524] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Value`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Value`\n   --> src/lsp.rs:511:28\n    |\n511 |     use serde_json::{json, Value};\n    |                            ^^^^^\n\n"}},{"range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"if this is intentional, prefix it with an underscore: `_id`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `id`\n   --> src/lsp.rs:201:38\n    |\n201 |     pub async fn wait_for(&mut self, id: usize, mut rx: mpsc::Receiver<String>) -> Option<String> {\n    |                                      ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n"}},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"original diagnostic"}]},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/lsp.rs:220:13\n    |\n220 |         let result = self.wait_for(id, rx).await;\n    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:215:18\n    |\n215 |         let (tx, mut rx) = tokio::sync::mpsc::channel::<String>(1);\n    |                  ----^^\n    |                  |\n    |                  help: remove this `mut`\n\n"}},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/lsp.rs:81:13\n   |\n81 |         let mut stdout = child.stdout.take().unwrap();\n   |             ----^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n   --> src/lsp.rs:452:10\n    |\n452 |     let (send, recv) = tokio::sync::oneshot::channel::<()>();\n    |          ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:463:9\n    |\n463 |     let mut stdout = child.stdout.take().unwrap();\n    |         ----^^^^^^\n    |         |\n    |         help: remove this `mut`\n\n"}},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":582,"character":11},"end":{"line":582,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_configuration` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_configuration` is never used\n   --> src/lsp.rs:583:12\n    |\n583 |     pub fn did_change_configuration() -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":617,"character":11},"end":{"line":617,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_watched_files` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_watched_files` is never used\n   --> src/lsp.rs:618:12\n    |\n618 |     pub fn did_change_watched_files(path: &str) -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":631,"character":11},"end":{"line":631,"character":24}},"severity":2,"code":"dead_code","source":"rustc","message":"function `document_link` is never used","tags":[1],"data":{"rendered":"warning: function `document_link` is never used\n   --> src/lsp.rs:632:12\n    |\n632 |     pub fn document_link(path: &str) -> String {\n    |            ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":681,"character":11},"end":{"line":681,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"function `completion` is never used","tags":[1],"data":{"rendered":"warning: function `completion` is never used\n   --> src/lsp.rs:682:12\n    |\n682 |     pub fn completion(id: usize, path: &str, line: usize, character: usize) -> String {\n    |            ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:88:17\n   |\n88 |                 stdin.write_all(header.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n88 |                 let _ = stdin.write_all(header.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:89:17\n   |\n89 |                 stdin.write_all(m.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n89 |                 let _ = stdin.write_all(m.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:90:17\n   |\n90 |                 stdin.flush().await;\n   |                 ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n90 |                 let _ = stdin.flush().await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:120:17\n    |\n120 |                 reader.read_exact(&mut content).await;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n120 |                 let _ = reader.read_exact(&mut content).await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}}},"message":"original diagnostic"}]},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:134:29\n    |\n134 | ...                   s.send(msg).await; // send to request channel\n    |                       ^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n134 |                             let _ = s.send(msg).await; // send to request channel\n    |                             +++++++\n\n"}},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:146:41\n    |\n146 | ...                   diagnostic_send.send(d.params).await;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n146 |                                         let _ = diagnostic_send.send(d.params).await;\n    |                                         +++++++\n\n"}},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}}},"message":"original diagnostic"}]},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:406:5\n    |\n406 |     lsp.start(lang, \"rust-analyzer\", None);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n406 |     let _ = lsp.start(lang, \"rust-analyzer\", None);\n    |     +++++++\n\n"}},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":4},"end":{"line":411,"character":17}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused implementer of `futures::Future` that must be used\nfutures do nothing unless you `.await` or poll them","data":{"rendered":"warning: unused implementer of `futures::Future` that must be used\n   --> src/lsp.rs:412:5\n    |\n412 |     lsp.init(dir);\n    |     ^^^^^^^^^^^^^\n    |\n    = note: futures do nothing unless you `.await` or poll them\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:469:13\n    |\n469 |             stdin.write_all(m.as_bytes()).await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n469 |             let _ = stdin.write_all(m.as_bytes()).await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:487:9\n    |\n487 |         send2_arc.send(\"hello\\n\".to_string()).await;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n487 |         let _ = send2_arc.send(\"hello\\n\".to_string()).await;\n    |         +++++++\n\n"}},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `isIncomplete` should have a snake case name\n`#[warn(non_snake_case)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"convert the identifier to snake case: `is_incomplete`"}],"data":{"rendered":"warning: structure field `isIncomplete` should have a snake case name\n   --> src/lsp.rs:712:13\n    |\n712 |         pub isIncomplete: Option<bool>,\n    |             ^^^^^^^^^^^^ help: convert the identifier to snake case: `is_incomplete`\n    |\n    = note: `#[warn(non_snake_case)]` on by default\n\n"}},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `is_incomplete`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `sortText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"convert the identifier to snake case: `sort_text`"}],"data":{"rendered":"warning: structure field `sortText` should have a snake case name\n   --> src/lsp.rs:722:13\n    |\n722 |         pub sortText: Option<String>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `sort_text`\n\n"}},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `sort_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"convert the identifier to snake case: `insert_text`"}],"data":{"rendered":"warning: structure field `insertText` should have a snake case name\n   --> src/lsp.rs:723:13\n    |\n723 |         pub insertText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `insert_text`\n\n"}},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `filterText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"convert the identifier to snake case: `filter_text`"}],"data":{"rendered":"warning: structure field `filterText` should have a snake case name\n   --> src/lsp.rs:724:13\n    |\n724 |         pub filterText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `filter_text`\n\n"}},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `filter_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertTextFormat` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"convert the identifier to snake case: `insert_text_format`"}],"data":{"rendered":"warning: structure field `insertTextFormat` should have a snake case name\n   --> src/lsp.rs:725:13\n    |\n725 |         pub insertTextFormat: Option<f64>,\n    |             ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `insert_text_format`\n\n"}},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text_format`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"original diagnostic"}]},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `textEdit` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"convert the identifier to snake case: `text_edit`"}],"data":{"rendered":"warning: structure field `textEdit` should have a snake case name\n   --> src/lsp.rs:726:13\n    |\n726 |         pub textEdit: Option<TextEdit>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `text_edit`\n\n"}},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `text_edit`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `newText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"convert the identifier to snake case: `new_text`"}],"data":{"rendered":"warning: structure field `newText` should have a snake case name\n   --> src/lsp.rs:735:13\n    |\n735 |         pub newText: String,\n    |             ^^^^^^^ help: convert the identifier to snake case: `new_text`\n\n"}},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `new_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `sleep`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `sleep`\n  --> src/lsp.rs:15:19\n   |\n15 | use tokio::time::{sleep, Duration};\n   |                   ^^^^^\n\n"}},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"method `stop` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `stop` is never used\n   --> src/lsp.rs:178:18\n    |\n39  | impl Lsp {\n    | -------- method in this implementation\n...\n178 |     pub async fn stop(&mut self) {\n    |                  ^^^^\n\n"}},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:10:39.526] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"function `hex_to_rgb` is never used","tags":[1],"data":{"rendered":"warning: function `hex_to_rgb` is never used\n  --> src/utils.rs:13:8\n   |\n13 | pub fn hex_to_rgb(hex_color: &str) -> (u8, u8, u8) {\n   |        ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":77,"character":7},"end":{"line":77,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"function `pad_left` is never used","tags":[1],"data":{"rendered":"warning: function `pad_left` is never used\n  --> src/utils.rs:78:8\n   |\n78 | pub fn pad_left(str: &str, length: usize) -> String {\n   |        ^^^^^^^^\n\n"}}]}}
[2024-11-18 20:10:39.526] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[{"range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}},"severity":4,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":848,"character":12},"end":{"line":848,"character":42}}},"message":"Exact error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:849:13\n    |\n849 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:10:42.915] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/test/test.rs","diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":2}},"severity":4,"code":"unlinked-file","codeDescription":{"href":"https://rust-analyzer.github.io/manual.html#unlinked-file"},"source":"rust-analyzer","message":"file not included in crate hierarchy"}],"version":0}}
[2024-11-18 20:11:13.603] [DEBUG] main: starting red
[2024-11-18 20:11:31.914] [DEBUG] main: starting red
[2024-11-18 20:15:30.080] [DEBUG] main: starting red
[2024-11-18 20:15:33.695] [DEBUG] code: ts insert InputEdit { start_byte: 0, old_end_byte: 0, new_end_byte: 1, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.231] [DEBUG] code: ts insert InputEdit { start_byte: 1, old_end_byte: 1, new_end_byte: 2, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.233] [DEBUG] code: ts insert InputEdit { start_byte: 2, old_end_byte: 2, new_end_byte: 3, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.356] [DEBUG] code: ts insert InputEdit { start_byte: 3, old_end_byte: 3, new_end_byte: 4, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.497] [DEBUG] code: ts insert InputEdit { start_byte: 4, old_end_byte: 4, new_end_byte: 5, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.621] [DEBUG] code: ts insert InputEdit { start_byte: 5, old_end_byte: 5, new_end_byte: 6, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.672] [DEBUG] code: ts insert InputEdit { start_byte: 6, old_end_byte: 6, new_end_byte: 7, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.732] [DEBUG] code: ts insert InputEdit { start_byte: 7, old_end_byte: 7, new_end_byte: 8, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.820] [DEBUG] code: ts insert InputEdit { start_byte: 8, old_end_byte: 8, new_end_byte: 9, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.915] [DEBUG] code: ts insert InputEdit { start_byte: 9, old_end_byte: 9, new_end_byte: 10, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:34.941] [DEBUG] code: ts insert InputEdit { start_byte: 10, old_end_byte: 10, new_end_byte: 11, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:35.001] [DEBUG] code: ts insert InputEdit { start_byte: 11, old_end_byte: 11, new_end_byte: 12, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:35.091] [DEBUG] code: ts insert InputEdit { start_byte: 12, old_end_byte: 12, new_end_byte: 13, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:35.652] [DEBUG] code: ts insert InputEdit { start_byte: 13, old_end_byte: 13, new_end_byte: 14, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:15:40.453] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":8847,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-18 20:15:41.456] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"initialized","params":{}}
[2024-11-18 20:15:41.468] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"python","text":"import unittest\n\ndef add_numbers(a, b):\n    return a + b\n\n\nclass TestAddNumbers(unittest.TestCase):\n\n    def test_add_positive_numbers(self):\n        print(\"test_add_positive_numbers\")\n        result = add_numbers(1, 7)\n        self.assertEqual(result, 8)\n\n    def test_add_negative_numbers(self):\n        result = add_numbers(-2, -3)\n        self.assertEqual(result, -5)\n\n\n    def test_add_fail(self):\n        result = add_numbers(0, 7)\n        self.assertEqual(result, 8)\n\n\n","uri":"file:///Users/max/apps/rust/red/test/ptest.py","version":0}}}
[2024-11-18 20:15:41.766] [DEBUG] lsp: <- {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"codeActionProvider":true,"codeLensProvider":{"resolveProvider":false},"completionProvider":{"resolveProvider":true,"triggerCharacters":["."]},"documentFormattingProvider":true,"documentHighlightProvider":true,"documentRangeFormattingProvider":true,"documentSymbolProvider":true,"definitionProvider":true,"executeCommandProvider":{"commands":[]},"hoverProvider":true,"referencesProvider":true,"renameProvider":true,"foldingRangeProvider":true,"signatureHelpProvider":{"triggerCharacters":["(",",","="]},"textDocumentSync":{"change":2,"save":{"includeText":true},"openClose":true},"workspace":{"workspaceFolders":{"supported":true,"changeNotifications":true}},"experimental":{}},"serverInfo":{"name":"pylsp","version":"1.7.3"}}}
[2024-11-18 20:15:42.283] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument\/publishDiagnostics","params":{"uri":"file:\/\/\/Users\/max\/apps\/rust\/red\/test\/ptest.py","diagnostics":[{"source":"pycodestyle","range":{"start":{"line":2,"character":0},"end":{"line":2,"character":23}},"message":"E302 expected 2 blank lines, found 1","code":"E302","severity":2},{"source":"pycodestyle","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":29}},"message":"E303 too many blank lines (2)","code":"E303","severity":2},{"source":"pycodestyle","range":{"start":{"line":22,"character":0},"end":{"line":22,"character":1}},"message":"W391 blank line at end of file","code":"W391","severity":2}]}}
[2024-11-18 20:15:46.803] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"python","text":"import unittest\n\ndef add_numbers(a, b):\n    return a + b\n\n\nclass TestAddNumbers(unittest.TestCase):\n\n    def test_add_positive_numbers(self):\n        print(\"test_add_positive_numbers\")\n        result = add_numbers(1, 7)\n        self.assertEqual(result, 8)\n\n    def test_add_negative_numbers(self):\n        result = add_numbers(-2, -3)\n        self.assertEqual(result, -5)\n\n\n    def test_add_fail(self):\n        result = add_numbers(0, 7)\n        self.assertEqual(result, 8)\n\n\n","uri":"file://./test/ptest.py","version":0}}}
[2024-11-18 20:15:47.310] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument\/publishDiagnostics","params":{"uri":"file:\/\/.\/test\/ptest.py","diagnostics":[{"source":"pycodestyle","range":{"start":{"line":2,"character":0},"end":{"line":2,"character":23}},"message":"E302 expected 2 blank lines, found 1","code":"E302","severity":2},{"source":"pycodestyle","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":29}},"message":"E303 too many blank lines (2)","code":"E303","severity":2},{"source":"pycodestyle","range":{"start":{"line":22,"character":0},"end":{"line":22,"character":1}},"message":"W391 blank line at end of file","code":"W391","severity":2}]}}
[2024-11-18 20:15:53.857] [DEBUG] lsp: -> {"id":0,"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"textDocument":{"completion":{"completionItem":{"insertReplaceSupport":true,"labelDetailsSupport":true,"resolveProvider":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":false}},"hover":{"contentFormat":["plaintext"]},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":false,"versionSupport":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["plaintext"]}},"synchronization":{"dynamicRegistration":true}}},"clientInfo":{"name":"red","version":"1.0.0"},"processId":8847,"rootPath":"/Users/max/apps/rust/red","rootUri":"file:///Users/max/apps/rust/red","workspaceFolders":[{"name":"red","uri":"file:///Users/max/apps/rust/red"}]}}
[2024-11-18 20:15:53.875] [DEBUG] lsp: <- {"jsonrpc":"2.0","id":0,"result":{"capabilities":{"positionEncoding":"utf-16","textDocumentSync":{"openClose":true,"change":2,"save":{}},"selectionRangeProvider":true,"hoverProvider":true,"completionProvider":{"resolveProvider":true,"triggerCharacters":[":",".","'","("],"completionItem":{"labelDetailsSupport":true}},"signatureHelpProvider":{"triggerCharacters":["(",",","<"]},"definitionProvider":true,"typeDefinitionProvider":true,"implementationProvider":true,"referencesProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"codeLensProvider":{"resolveProvider":true},"documentFormattingProvider":true,"documentRangeFormattingProvider":false,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"=","moreTriggerCharacter":[".",">","{","("]},"renameProvider":{"prepareProvider":true},"foldingRangeProvider":true,"declarationProvider":true,"workspace":{"workspaceFolders":{"supported":true,"changeNotifications":true},"fileOperations":{"willRename":{"filters":[{"scheme":"file","pattern":{"glob":"**/*.rs","matches":"file"}},{"scheme":"file","pattern":{"glob":"**","matches":"folder"}}]}}},"callHierarchyProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["comment","decorator","enumMember","enum","function","interface","keyword","macro","method","namespace","number","operator","parameter","property","string","struct","typeParameter","variable","angle","arithmetic","attributeBracket","attribute","bitwise","boolean","brace","bracket","builtinAttribute","builtinType","character","colon","comma","comparison","constParameter","const","deriveHelper","derive","dot","escapeSequence","formatSpecifier","generic","invalidEscapeSequence","label","lifetime","logical","macroBang","parenthesis","procMacro","punctuation","selfKeyword","selfTypeKeyword","semicolon","static","toolModule","typeAlias","union","unresolvedReference"],"tokenModifiers":["async","documentation","declaration","static","defaultLibrary","associated","attribute","callable","constant","consuming","controlFlow","crateRoot","injected","intraDocLink","library","macro","mutable","procMacro","public","reference","trait","unsafe"]},"range":true,"full":{"delta":true}},"inlayHintProvider":{"resolveProvider":true},"experimental":{"externalDocs":true,"hoverRange":true,"joinLines":true,"matchingBrace":true,"moveItem":true,"onEnter":true,"openCargoToml":true,"parentModule":true,"runnables":{"kinds":["cargo"]},"ssr":true,"workspaceSymbolScopeKindFiltering":true}},"serverInfo":{"name":"rust-analyzer","version":"0.0.0 (21ec8f523 2024-05-19)"}}}
[2024-11-18 20:15:53.876] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"initialized","params":{}}
[2024-11-18 20:15:53.889] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"use crossterm::style::Color;\nuse rayon::vec;\nuse ropey::iter::Lines;\nuse ropey::Rope;\nuse ropey::RopeSlice;\nuse tree_sitter::InputEdit;\nuse std::cmp::min;\nuse std::collections::HashMap;\nuse std::fs;\nuse std::fs::File;\nuse std::io::{BufReader, BufWriter};\nuse std::path::Path;\nuse tree_sitter::{Node, Parser, Point, Query, QueryCursor, TextProvider};\n\nuse crate::config::{Config, Language};\nuse crate::utils::{self, hex_to_color};\nuse strfmt::strfmt;\nuse log2::*;\nuse streaming_iterator::StreamingIterator;\n\npub struct Code {\n    pub file_name: String,\n    pub abs_path: String,\n    pub lang: String,\n    pub text: ropey::Rope,\n    pub changed: bool,\n    pub history: Vec<Change>,\n    tree: Option<tree_sitter::Tree>,\n    parser: Option<tree_sitter::Parser>,\n    query: Option<tree_sitter::Query>,\n    r: usize, c: usize, x: usize, y: usize,\n    lang_conf: Option<Language>,\n    line2runneble: HashMap<usize, Runnable>,\n    query_test: Option<tree_sitter::Query>,\n}\n\nimpl Code {\n    pub fn new() -> Self {\n        Self {\n            text: Rope::new(),\n            file_name: String::new(),\n            abs_path: String::new(),\n            changed: false,\n            history: Vec::new(),\n            tree: None,\n            lang: String::new(),\n            parser: None,\n            query: None,\n            r: 0, c: 0, x: 0, y: 0,\n            lang_conf: None,\n            line2runneble: HashMap::new(),\n            query_test: None,\n        }\n    }\n\n    pub fn from_str(text: &str) -> Self {\n        let mut code = Self::new();\n        code.insert_text(text, 0, 0);\n        code\n    }\n\n    pub fn from_file(path: &str, conf: &Config) -> std::io::Result<Self> {\n        let file = File::open(path)?;\n        let text = Rope::from_reader(BufReader::new(file))?;\n        let abs_path = utils::abs_file(path);\n        let file_name = utils::get_file_name(path);\n\n        let mut lang = match detect_lang::from_path(path) {\n            Some(lang) => lang.id().to_lowercase(),\n            None => {\n                // find lang by ext from config\n                match conf.language.iter().find(|l| l.types.iter().any(|t| path.ends_with(t))) {\n                    Some(lang) => lang.name.to_string(),\n                    None => \"text\".to_string(),\n                }\n            }\n        };\n\n        let lang_conf = conf.language.iter().find(|l| l.name == lang);\n        let lang_conf = lang_conf.map(|lc| (*lc).clone());\n\n        let language = match lang.as_str() {\n            \"rust\" => tree_sitter_rust::LANGUAGE.into(),\n            \"javascript\" => tree_sitter_javascript::LANGUAGE.into(),\n            \"python\" => tree_sitter_python::LANGUAGE.into(),\n            \"go\" => tree_sitter_go::LANGUAGE.into(),\n            \"yaml\" => tree_sitter_yaml::language().into(),\n            \"html\" => tree_sitter_html::LANGUAGE.into(),\n            \"shell\" => tree_sitter_bash::LANGUAGE.into(),\n            // \"toml\" => tree_sitter_toml::language().into(),\n            \"java\" => tree_sitter_java::LANGUAGE.into(),\n            // \"kotlin\" => tree_sitter_kotlin::LANGUAGE.into(),\n            \"cpp\" => tree_sitter_cpp::LANGUAGE.into(),\n            \"c\" => tree_sitter_c::LANGUAGE.into(),\n            // \"zig\" => tree_sitter_zig::LANGUAGE.into(),\n            // \"lua\" => tree_sitter_lua::LANGUAGE.into(),\n            \"json\" => tree_sitter_json::LANGUAGE.into(),\n             _ => {\n                lang = \"text\".to_string();\n                tree_sitter_rust::LANGUAGE.into()\n            }\n        };\n\n        if lang == \"text\".to_string() {\n            return Ok(Self {\n                text,\n                file_name,\n                abs_path,\n                changed: false,\n                history: Vec::new(),\n                tree:None,\n                lang,\n                parser: None,\n                query: None,\n                r: 0, c: 0, x: 0, y: 0,\n                lang_conf,\n                line2runneble: HashMap::new(),\n                query_test: None,\n            })\n        }\n\n        let mut parser = Parser::new();\n        parser.set_language(&language).expect(\"Can not set_language\");\n\n        let tree = parser.parse(text.to_string(), None);\n\n        // debug\n        // let query_pattern = r#\"\n        // (string_literal) @string\n        // (function_item name: (identifier) @function)\n        // \"fn\" @keyword\n        // \"#;\n\n        let red_home = std::env::var(\"RED_HOME\").unwrap_or(\"./\".to_string());\n\n        let lang_highlights = Path::new(&red_home).join(\"langs\").join(lang.clone()).join(\"highlights.scm\");\n        let err_message = format!(\"Failed to read highlights.scm file: {:?}\", lang_highlights);\n        let query_pattern = fs::read_to_string(lang_highlights).expect(&err_message.as_str());\n        let query = match Query::new(&language, &query_pattern) {\n            Ok(q) => Some(q),\n            Err(e) => { debug!(\"err {}\", e); None },\n        };\n\n        let scm = Path::new(&red_home).join(\"langs\").join(lang.clone()).join(\"tests.scm\");\n        let query_test = match fs::read_to_string(scm) {\n            Ok(qp) => Query::new(&language, &qp).ok(),\n            Err(_) => None,\n        };\n\n        let mut this = Self {\n            text,\n            file_name,\n            abs_path,\n            changed: false,\n            history: Vec::new(),\n            tree,\n            lang,\n            parser: Some(parser),\n            query,\n            r: 0, c: 0, x: 0, y: 0,\n            lang_conf,\n            line2runneble: HashMap::new(),\n            query_test\n        };\n\n        this.update_runnables();\n        Ok(this)\n    }\n    pub fn set_lang(&mut self, lang:String, conf: &Config) {\n        self.lang = lang;\n        let lang_conf = conf.language.iter().find(|l| l.name == self.lang);\n        self.lang_conf = lang_conf.map(|lc| (*lc).clone());\n    }\n\n    pub fn set_cursor_position(&mut self, r: usize, c: usize, y: usize, x: usize) {\n        self.r = r;\n        self.c = c;\n        self.y = y;\n        self.x = x;\n    }\n    pub fn get_cursor_position(&mut self) -> (usize,usize,usize,usize) {\n        (self.r.clone(), self.c.clone(), self.y.clone(), self.x.clone())\n    }\n\n    pub fn save_file(&mut self) -> std::io::Result<()> {\n        if !self.changed { return Ok(()); }\n\n        let file = File::create(&self.abs_path)?;\n        let saved = self.text.write_to(BufWriter::new(file));\n        self.changed = false;\n        saved\n    }\n\n    fn insert(&mut self, text: &str, from: usize) {\n        let offset_byte = self.text.char_to_byte(from);\n        self.text.insert(from, text);\n        self.changed = true;\n\n        let total_bytes: usize = text.chars().map(|ch| ch.len_utf8()).sum();\n        let edit = tree_sitter::InputEdit {\n            start_byte: offset_byte,\n            old_end_byte: offset_byte,\n            new_end_byte: offset_byte + total_bytes,\n            start_position: Point { row: 0, column: 0 },\n            old_end_position: Point { row: 0, column: 0 },\n            new_end_position: Point { row: 0, column: 0 },\n        };\n        debug!(\"ts insert {:?}\", edit);\n        self.apply_edit(edit);\n    }\n\n    pub fn insert_text(&mut self, text: &str, row: usize, column: usize) {\n        let from = self.text.line_to_char(row) + column;\n        self.insert(text, from);\n\n        self.history.push(Change {\n            start: from,\n            operation: Operation::Insert,\n            text: text.to_string(),\n            row, column\n        });\n    }\n\n    pub fn insert_char(&mut self, c: char, row: usize, column: usize) {\n        self.insert_text(&c.to_string(), row, column);\n    }\n\n    pub fn insert_tab(&mut self, row: usize, column: usize) -> String {\n        let text = match self.lang_conf.as_ref() {\n            Some(conf) if conf.indent.unit == \" \" =>\n                \" \".repeat(conf.indent.width as usize).to_string(),\n            _ =>  \"\\t\".to_string(),\n        };\n\n        self.insert_text(&text, row, column);\n        return text;\n    }\n\n    /// removes from text and edit tree\n    fn remove(&mut self, from: usize, to: usize) {\n        let from_byte = self.text.char_to_byte(from);\n        let to_byte = self.text.char_to_byte(to);\n\n        self.text.remove(from..to);\n        self.changed = true;\n\n        let edit = tree_sitter::InputEdit {\n            start_byte: from_byte,\n            old_end_byte: to_byte,\n            new_end_byte: from_byte,\n            start_position: Point { row: 0, column: 0 },\n            old_end_position: Point { row: 0, column: 0 },\n            new_end_position: Point { row: 0, column: 0 },\n        };\n        debug!(\"ts remove {:?}\", edit);\n        self.apply_edit(edit);\n    }\n\n    pub fn remove_text(&mut self, row: usize, col: usize, row1: usize, col1: usize) {\n        let from = self.text.line_to_char(row) + col;\n        let to = self.text.line_to_char(row1) + col1;\n        let text = self.text.slice(from..to).to_string();\n\n        self.history.push(Change {\n            start: from,\n            operation: Operation::Remove,\n            text: text.to_string(),\n            row:row1, column:col1\n        });\n\n        self.remove(from, to);\n    }\n\n    pub fn remove_char(&mut self, row: usize, column: usize) {\n        self.remove_text(row, column-1, row, column);\n    }\n\n    fn apply_edit(&mut self, edit: InputEdit) {\n        match self.tree.as_mut() {\n            Some(tree) => {\n                tree.edit(&edit);\n                self.tree_parse();\n                self.update_runnables();\n            },\n            None => return,\n        }\n    }\n    fn tree_parse(&mut self) {\n        if let Some(parser) = &mut self.parser {\n            // let text = self.text.to_string();\n            let rope = &self.text;\n            self.tree = parser.parse_with(&mut |byte, _| {\n                // debug!(\"parse_with {}\", byte);\n                let sl = if byte <= rope.len_bytes() {\n                    let (chunk, start, _, _) = rope.chunk_at_byte(byte);\n                    chunk[byte - start..].as_bytes()\n                } else {\n                    &[]\n                };\n                // debug!(\"sl {:?}\", String::from_utf8_lossy(sl));\n                sl\n            }, self.tree.as_ref());\n\n            // self.tree = parser.parse(text, self.tree.as_ref());\n        }\n    }\n\n    pub fn get_text(&mut self, row: usize, col: usize, row1: usize, col1: usize) -> String {\n        let from = self.text.line_to_char(row) + col;\n        let to = self.text.line_to_char(row1) + col1;\n        let string = self.text.slice(from..to).to_string();\n        return string;\n    }\n\n    pub fn line_len(&self, idx: usize) -> usize {\n        let line = self.text.line(idx);\n        let chars = line.chars();\n        let len = chars.len();\n\n        // '/n' at the end if len not 0, do not count it\n        if chars.last() == Some('\\n') { len - 1 } else { len }\n    }\n\n    pub fn get_line_at(&self, idx: usize) -> Option<RopeSlice> {\n        self.text.get_line(idx)\n    }\n\n    pub fn line_at(&self, idx: usize) -> Option<&str> {\n        let line = self.text.line(idx);\n        line.as_str()\n    }\n\n    pub fn lines_from(&self, from: usize) -> Option<Lines> {\n        self.text.get_lines_at(from)\n    }\n\n    pub fn get_from(&self, from: usize) -> Lines {\n        self.text.lines_at(from)\n    }\n\n    pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n        let from = self.text.line_to_char(row) + col;\n        let to = self.text.line_to_char(row1) + col1;\n        self.text.slice(from..to)\n    }\n\n    pub fn slice(&self, from: usize, to: usize) -> RopeSlice {\n        let max_index = self.text.len_lines();\n        let end_index = min(to, max_index);\n        let start_index = self.text.line_to_char(from);\n        let end_index = self.text.line_to_char(end_index);\n        self.text.slice(start_index..end_index)\n    }\n\n    pub fn len_lines(&self) -> usize {\n        self.text.len_lines()\n    }\n    pub fn line_to_byte(&self, line: usize) -> usize {\n        self.text.line_to_byte(line)\n    }\n\n    pub fn is_empty(&self) -> bool {\n        self.text.len_chars() == 0\n    }\n\n    pub fn indentation_level(&self, line: usize) -> usize {\n        match self.lang_conf.as_ref() {\n            Some(conf) if conf.indent.unit == \" \" => {  // spaces case\n                let spaces_count = self.text.line(line).chars().take_while(|&ch| ch == ' ').count();\n                // println!(\"spaces_count={spaces_count}\");\n                let width = if conf.indent.width > 0 { conf.indent.width as usize} else { 2 };\n                return (spaces_count as f64 / width as f64).ceil() as usize;\n            }\n            _ =>  {\n                let tabs_count = self.text.line(line).chars().take_while(|&ch| ch == '\\t').count();\n                // println!(\"tabs_count={tabs_count}\");\n                return tabs_count;\n            },\n        };\n    }\n\n    fn position_to_point(text: &RopeSlice, pos: usize) -> (usize, usize) {\n        let byte = text.char_to_byte(pos);\n        let line = text.char_to_line(pos);\n        let line_start_byte = text.line_to_byte(line);\n        let col = byte - line_start_byte;\n\n        (line, col)\n    }\n\n    pub fn search(&self, substring: &str) -> Vec<(usize, usize)> {\n\n        let rope_slice = &self.text.slice(0..);\n        let result: Vec<(usize, usize)> = SearchIter::from_rope_slice(rope_slice, substring)\n            .map(|(pos, _)| Self::position_to_point(rope_slice, pos))\n            .collect();\n\n        result\n    }\n\n    pub fn find_substring(&self, line:usize, substring: &str) -> Option<usize> {\n        match self.text.get_line(line) {\n            Some(line) => {\n                let search_iter = EarlyTerminationSearch::from_rope_slice(&line, substring);\n                let result: Vec<(usize, usize)> = search_iter.collect();\n                result.first().map(|r|r.0)\n            },\n            None => None,\n        }\n    }\n\n    pub fn find_comment(&self, line:usize) -> Option<usize> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => self.find_substring(line, &conf.comment),\n            None => None,\n        }\n    }\n\n    pub fn get_lang_comment(&self) -> Option<String> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(conf.comment.clone()),\n            None => None,\n        }\n    }\n    pub fn get_lang_conf(&self) -> Option<&Language> {\n        self.lang_conf.as_ref()\n    }\n\n    pub fn find_first_non_whitespace(&self, line_index:usize, stop_index: usize) -> Option<usize> {\n        match self.text.get_line(line_index) {\n            Some(line) => {\n                line.chars()\n                    .enumerate()\n                    .take(stop_index)\n                    .find(|(_, ch)| !ch.is_whitespace())\n                    .map(|(index, _)| index)\n            },\n            None => None,\n        }\n    }\n\n    pub fn indent_string(&self) -> Option<String> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(conf.indent.unit.repeat(conf.indent.width as usize)),\n            None => None,\n        }\n    }\n    pub fn indent_width(&self) -> Option<usize> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(conf.indent.width as usize),\n            None => None,\n        }\n    }\n    pub fn indent_unit(&self) -> Option<&String> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(&conf.indent.unit),\n            None => None,\n        }\n    }\n    pub fn is_only_indentation_before(&self, r: usize, c: usize) -> bool {\n        if r >= self.text.len_lines() || c == 0 { return false; }\n\n        let line = self.text.line(r);\n\n        let mut col = 0;\n        for ch in line.chars() {\n            if col >= c { break; } // Reached the specified column\n            // Found a non-whitespace character before the specified position\n            if !ch.is_whitespace() { return false; }\n            col += 1;\n        }\n        true\n    }\n\n    pub fn count_tabs(&self, line_index:usize, stop_index: usize) -> Option<usize> {\n        match self.text.get_line(line_index) {\n            Some(line) => {\n                let mut count = 0;\n                for ch in line.chars().take(stop_index) {\n                    if ch == '\\t' {\n                        count += 1;\n                    }\n                }\n                Some(count)\n            },\n            None => None,\n        }\n    }\n\n    /// calculates color ranges from line number `from` to `to`\n    /// returns colors vectors of (start_byte, end_byte, color): (usize, usize, Color)\n    pub fn colors(\n        &self,\n        from: usize,\n        to: usize,\n        theme: &HashMap<String, String>,\n    ) -> Vec<(usize, usize, usize, usize, Color)> {\n\n        let query = match self.query.as_ref() {\n            Some(q) => q, None => return Vec::new(),\n        };\n\n        let mut query_cursor = QueryCursor::new();\n        let start_index = self.text.line_to_byte(from);\n        let max_index = self.text.len_lines();\n        let end_index = self.text.line_to_byte(min(to, max_index));\n\n        query_cursor.set_byte_range(start_index..end_index); //superfast\n\n        let root = self.tree.as_ref().unwrap().root_node();\n\n        let mut query_matches = query_cursor.matches(&query, root, RopeProvider(self.text.slice(..)));\n        \n        let mut result = Vec::new();\n\n        while let Some(m) = query_matches.next() {\n            for capture in m.captures {\n                let capture_index = capture.index as usize;\n                let capture_name = &query.capture_names()[capture_index];\n                let name = capture_name.split('.').next().unwrap_or(capture_name);\n                let theme_colors = theme.get(name);\n                let color = theme_colors\n                    .map(|s| hex_to_color(s))\n                    .unwrap_or(Color::Reset);\n                \n                if color == Color::Reset { continue }\n\n                result.push((\n                    capture.node.start_byte(), \n                    capture.node.end_byte(), \n                    capture.node.start_position().row, \n                    capture.node.end_position().row, \n                    color\n                ));\n            }\n        }\n        \n        result\n\n    }\n\n    fn update_runnables(&mut self) {\n        if self.lang_conf.is_none() {return; }\n\n        let lang = self.lang_conf.as_ref().unwrap();\n\n        self.line2runneble.clear();\n\n        match (lang.executable.as_ref(), lang.exec.as_ref()) {\n            (Some(true), Some(template)) => {\n\n                let mut vars = std::collections::HashMap::new();\n                vars.insert(\"file\".to_string(), self.abs_path.clone());\n\n                let res = strfmt(&template, &vars);\n                if res.is_ok() {\n                    let cmd = res.unwrap();\n                    let runnable = Runnable { cmd, row: 0 };\n                    self.line2runneble.insert(0, runnable);\n                }\n            }\n            _ => {},\n        }\n\n        match (lang.executable.as_ref(), lang.exectest.as_ref()) {\n            (Some(true), Some(template)) => {\n                if self.query_test.is_none() { return; }\n\n                let query = self.query_test.as_ref().expect(\"cant get query\");\n                let mut query_cursor = QueryCursor::new();\n\n                let root = self.tree.as_ref().unwrap().root_node();\n                let mut matches = query_cursor.matches(&query, root, RopeProvider(self.text.slice(..)));\n\n                while let Some(m) = matches.next() {\n                    for capture in m.captures {\n                        let capture_index = capture.index as usize;\n                        let capture_name = &query.capture_names()[capture_index];\n                        let name = capture_name.split('.').next().unwrap_or(capture_name);\n                        let text = self.text.byte_slice(capture.node.start_byte()..capture.node.end_byte()).to_string();\n                        let row = capture.node.start_position().row;\n                        let mut vars = std::collections::HashMap::new();\n                        vars.insert(\"test\".to_string(), text);\n                        vars.insert(\"file\".to_string(), self.abs_path.clone());\n\n                        let res = strfmt(&template, &vars);\n                        if res.is_ok() {\n                            let cmd = res.unwrap();\n                            let runnable = Runnable { cmd, row };\n                            self.line2runneble.insert(row, runnable);\n                        }\n                    }\n                }\n\n            }\n            _ => {},\n        }\n    }\n\n    pub fn is_runnable(&self, line: usize) -> bool {\n        self.line2runneble.contains_key(&line)\n    }\n    pub fn get_runnable(&self, line: usize) -> Option<&Runnable> {\n        self.line2runneble.get(&line)\n    }\n\n    \n    pub fn get_node_path(\n        &self, row: usize, column: usize\n    ) -> Option<NodePath> {\n\n        // return node path at row column position\n        let root = self.tree.as_ref()?.root_node();\n        let mut node = root.named_descendant_for_point_range(\n            Point { row, column }, Point { row, column }\n        );\n        \n        let mut path = NodePath { row, column, nodes: vec![], current:0 };\n\n        // traverse tree to up\n        while node.is_some() {\n            match node {\n                Some(n) => {\n                    path.nodes.push((n.start_position(), n.end_position()));\n                    node = n.parent();\n                },\n                None => { break },\n            }\n        }\n        Some(path)\n    }\n\n}\n\npub struct NodePath {\n    pub row: usize,\n    pub column: usize,\n    pub nodes: Vec<(Point,Point)>,\n    current: usize\n}\n\nimpl NodePath {\n    pub fn current_node(&self) -> Option<&(Point, Point)>{\n        self.nodes.get(self.current)\n    }\n    pub fn next_node(&mut self) -> Option<&(Point, Point)>{\n        self.current += 1;\n        if self.current >= self.nodes.len() { self.current = self.nodes.len() -1 } \n        self.nodes.get(self.current)\n    }\n    pub fn prev_node(&mut self) -> Option<&(Point, Point)>{\n        if self.current == 0 { return None } \n        if self.current > 0 { self.current -= 1 } \n        self.nodes.get(self.current)\n    }\n}\n\npub struct Runnable {\n    pub cmd: String,\n    pub row: usize,\n}\n\npub struct ChunksBytes<'a> {\n    chunks: ropey::iter::Chunks<'a>,\n}\n\nimpl<'a> Iterator for ChunksBytes<'a> {\n    type Item = &'a [u8];\n    \n    #[inline]\n    fn next(&mut self) -> Option<Self::Item> {\n        self.chunks.next().map(str::as_bytes)\n    }\n}\n\npub struct RopeProvider<'a>(pub RopeSlice<'a>);\nimpl<'a> TextProvider<&'a [u8]> for RopeProvider<'a> {\n    type I = ChunksBytes<'a>;\n\n    #[inline]\n    fn text(&mut self, node: Node) -> Self::I {\n        let fragment = self.0.byte_slice(node.start_byte()..node.end_byte());\n        ChunksBytes {\n            chunks: fragment.chunks(),\n        }\n    }\n}\n\nstruct SearchIter<'a> {\n    char_iter: ropey::iter::Chars<'a>,\n    search_pattern: &'a str,\n    search_pattern_char_len: usize,\n\n    // The current char index of the search head.\n    cur_index: usize,\n\n    // Tracks where we are in the search pattern for the current possible matches.\n    possible_matches: Vec<std::str::Chars<'a>>,\n}\n\nimpl<'a> SearchIter<'a> {\n    fn from_rope_slice<'b>(slice: &'b RopeSlice, search_pattern: &'b str) -> SearchIter<'b> {\n        assert!(\n            !search_pattern.is_empty(),\n            \"Can't search using an empty search pattern.\"\n        );\n        SearchIter {\n            char_iter: slice.chars(),\n            search_pattern,\n            search_pattern_char_len: search_pattern.chars().count(),\n            cur_index: 0,\n            possible_matches: Vec::new(),\n        }\n    }\n}\n\nimpl<'a> Iterator for SearchIter<'a> {\n    type Item = (usize, usize);\n\n    // Return the start/end char indices of the next match.\n    fn next(&mut self) -> Option<(usize, usize)> {\n        #[allow(clippy::while_let_on_iterator)]\n        while let Some(next_char) = self.char_iter.next() {\n            self.cur_index += 1;\n\n            // Push new potential match, for a possible match starting at the\n            // current char.\n            self.possible_matches.push(self.search_pattern.chars());\n\n            // Check the rope's char against the next character in each of\n            // the potential matches, removing the potential matches that\n            // don't match.  We're using indexing instead of iteration here\n            // so that we can remove the possible matches as we go.\n            let mut i = 0;\n            while i < self.possible_matches.len() {\n                let pattern_char = self.possible_matches[i].next().unwrap();\n                if next_char == pattern_char {\n                    if self.possible_matches[i].clone().next() == None {\n                        // We have a match!  Reset possible matches and\n                        // return the successful match's char indices.\n                        let char_match_range = (\n                            self.cur_index - self.search_pattern_char_len,\n                            self.cur_index,\n                        );\n                        self.possible_matches.clear();\n                        return Some(char_match_range);\n                    } else {\n                        // Match isn't complete yet, move on to the next.\n                        i += 1;\n                    }\n                } else {\n                    // Doesn't match, remove it.\n                    let _ = self.possible_matches.swap_remove(i);\n                }\n            }\n        }\n\n        None\n    }\n}\n\n#[cfg(test)]\nmod code_rope_search_iterator_simple_tests {\n    use super::SearchIter;\n\n    #[test]\n    fn test_search_iterator() {\n        let rope = ropey::Rope::from_str(\"// This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let search_iter = SearchIter::from_rope_slice(slice, substring);\n        search_iter.for_each(|r| println!(\"search {:?}\", r))\n    }\n}\n\nstruct EarlyTerminationSearch<'a> {\n    char_iter: ropey::iter::Chars<'a>,\n    search_pattern: &'a str,\n    search_pattern_chars: Vec<char>,\n    cur_index: usize, // The current char index of the search head.\n    possible_match: Vec<char>, // Tracks where we are in the search pattern for the current possible match.\n    match_start_index: usize, // The starting index of the current possible match.\n    found_match: bool, // Flag indicating whether a match has been found.\n}\n\nimpl<'a> EarlyTerminationSearch<'a> {\n    fn from_rope_slice(slice: &'a RopeSlice, search_pattern: &'a str) -> EarlyTerminationSearch<'a> {\n        assert!(\n            !search_pattern.is_empty(),\n            \"Can't search using an empty search pattern.\"\n        );\n        let search_pattern_chars: Vec<char> = search_pattern.chars().collect();\n        EarlyTerminationSearch {\n            char_iter: slice.chars(),\n            search_pattern,\n            search_pattern_chars,\n            cur_index: 0,\n            possible_match: Vec::new(),\n            match_start_index: 0,\n            found_match: false,\n        }\n    }\n}\n\nimpl<'a> Iterator for EarlyTerminationSearch<'a> {\n    type Item = (usize, usize);\n\n    fn next(&mut self) -> Option<(usize, usize)> {\n        while let Some(next_char) = self.char_iter.next() {\n            self.cur_index += 1;\n            if self.found_match {\n                // If a match has been found, terminate early.\n                return None;\n            }\n            if next_char == self.search_pattern_chars[self.possible_match.len()] {\n                self.possible_match.push(next_char);\n                if self.possible_match.len() == self.search_pattern_chars.len() {\n                    // Complete match found.\n                    self.found_match = true;\n                    return Some((self.cur_index - self.search_pattern_chars.len(), self.cur_index));\n                }\n                if self.possible_match.len() == 1 {\n                    // Start of a potential match.\n                    self.match_start_index = self.cur_index - 1;\n                }\n            } else {\n                // Mismatch, reset possible match.\n                self.possible_match.clear();\n            }\n        }\n        None\n    }\n}\n#[cfg(test)]\nmod code_rope_search_iterator_tests {\n    use crate::code::{EarlyTerminationSearch, SearchIter};\n\n    #[test]\n    fn test_early_termination_search() {\n        let rope = ropey::Rope::from_str(\"// This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let search_iter = EarlyTerminationSearch::from_rope_slice(slice, substring);\n        let result: Vec<(usize, usize)> = search_iter.collect();\n        assert_eq!(result.len(), 1);\n        assert_eq!(result.get(0).unwrap().0, 0);\n        assert_eq!(result.get(0).unwrap().1, 2);\n    }\n\n\n    #[test]\n    fn test_full_search_bench() {\n        use std::time::{Instant};\n\n        let n = 10000000;\n\n        let start_time = Instant::now();\n\n        let rope = ropey::Rope::from_str(\"// This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        for _ in 0..n {\n            let search_iter = SearchIter::from_rope_slice(slice, substring);\n            let result: Vec<(usize, usize)> = search_iter.collect();\n        }\n\n        let elapsed_time = Instant::now().duration_since(start_time).as_secs_f64();\n        let ops_per_sec = (n as f64) / elapsed_time;\n        println!(\"ops: {:.2}\", ops_per_sec);\n        // ops: 204967.29\n    }\n\n\n    #[test]\n    fn test_early_termination_search_bench() {\n        use std::time::{Instant};\n\n        let rope = ropey::Rope::from_str(\"This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let operation = || {\n            let search_iter = EarlyTerminationSearch::from_rope_slice(slice, substring);\n            let result: Vec<(usize, usize)> = search_iter.collect();\n        };\n\n        let n = 10_000;\n        let start_time = Instant::now();\n        for _ in 0..n { operation(); }\n\n        let elapsed_time = Instant::now().duration_since(start_time).as_secs_f64();\n        let ops_per_sec = (n as f64) / elapsed_time;\n        println!(\"ops: {:.2}\", ops_per_sec);\n        // ops: 211009.97\n    }\n}\n\n#[cfg(test)]\nmod code_rope_search_tests {\n    use ropey::RopeSlice;\n\n    fn rope_search(rope: &RopeSlice, substring: &str) -> Option<usize> {\n        let sub_len = substring.len();\n\n        for i in 0..=rope.len_chars() - sub_len {\n            let sb = rope.slice(i..i + sub_len).as_str();\n            if sb.is_some() && sb.unwrap() == substring {\n                return Some(i);\n            }\n        }\n        None\n    }\n\n    #[test]\n    fn test_search() {\n        let rope = ropey::Rope::from_str(\"This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let result = rope_search(slice, substring);\n        match result {\n            Some(r) => println!(\"result {}\", r),\n            None => println!(\"not found\"),\n        }\n    }\n\n\n    #[test]\n    fn test_rope_search_bench() {\n        use std::time::{Instant};\n\n        let rope = ropey::Rope::from_str(\"This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let operation = || {\n            let result = rope_search(slice, substring);\n        };\n\n        let n = 10_000;\n        let start_time = Instant::now();\n        for _ in 0..n { operation(); }\n\n        let elapsed_time = Instant::now().duration_since(start_time).as_secs_f64();\n        let ops_per_sec = (n as f64) / elapsed_time;\n        println!(\"ops: {:.2}\", ops_per_sec);\n        // ops: 25167.75\n        // slow\n    }\n}\n\n// Enum to represent different types of operations\n#[derive(Debug)]\npub enum Operation {\n    Insert,\n    Remove,\n    Start,\n    End\n}\n\n// Change struct to represent a single change operation\n#[derive(Debug)]\npub struct Change {\n    pub start: usize,\n    pub operation: Operation,\n    pub text: String,\n    pub row: usize,\n    pub column: usize\n}\n\n#[derive(Debug, Default)]\npub struct MultipleChange {\n    pub changes: Vec<Change>,\n}\n\nimpl Code {\n    pub fn undo(&mut self) -> Option<MultipleChange> {\n        let mut multiple_change = MultipleChange::default();\n        let mut end = false;\n        let mut multiple = false;\n\n        while !end {\n            match self.history.pop() {\n                None => return None,\n                Some(change) => {\n                    match change.operation {\n                        Operation::Insert => {\n                            let from = change.start;\n                            let to = from + change.text.chars().count();\n                            self.remove(from, to);\n                            multiple_change.changes.push(change);\n                            if !multiple { return Some(multiple_change) }\n                        },\n                        Operation::Remove => {\n                            self.insert(&change.text, change.start);\n                            multiple_change.changes.push(change);\n                            if !multiple { return Some(multiple_change) }\n                        }\n                        Operation::End => multiple = true,\n                        Operation::Start => end = true,\n                    }\n                }\n            }\n\n        }\n\n        Some(multiple_change)\n    }\n}\n\n\n#[cfg(test)]\nmod code_undo_tests {\n    use crate::code::Code;\n\n    #[test]\n    fn test_code_undo() {\n        let mut buffer = Code::new();\n\n        buffer.insert_text(\"hello\", 0, 0);\n        buffer.insert_text(\" world\", 0, 5);\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        buffer.undo();\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n    }\n}\n\n\nimpl Code {\n    pub fn move_line_down(&mut self, line_idx: usize) -> bool {\n        let len_lines = self.text.len_lines();\n        if len_lines <= 2 { return false; }\n\n        let line1_start = match self.text.try_line_to_char(line_idx).ok(){\n            Some(idx) => idx, None => return false,\n        };\n        let line1_end = match self.text.try_line_to_char(line_idx + 1).ok(){\n            Some(idx) => idx-1, None => return false,\n        };\n        let line2_start = match self.text.try_line_to_char(line_idx + 1).ok(){\n            Some(idx) => idx, None => return false,\n        };\n        let line2_end = match self.text.try_line_to_char(line_idx + 2).ok(){\n            Some(idx) if idx == self.text.len_chars() => idx,\n            Some(idx) => idx-1,\n            None => return false,\n        };\n\n        // if line1_end == self.text.len_chars() { return false; } // skip last line\n\n        let line_1 = self.text.slice(line1_start..line1_end).to_string();\n        let line_2 = self.text.slice(line2_start..line2_end).to_string();\n        // let text = self.get_text(line_idx, 0, line_idx+1, 0);\n\n        self.history.push(Change {\n            start: 0, operation: Operation::Start,\n            text: \"\".to_string(), row:0, column:0\n        });\n\n        self.remove_text(line_idx, 0, line_idx, line_1.chars().count());\n        self.insert_text(&line_2, line_idx, 0);\n        self.remove_text(line_idx+1, 0, line_idx+1, line_2.chars().count());\n        self.insert_text(&line_1, line_idx+1, 0);\n\n        self.history.push(Change {\n            start: 0, operation: Operation::End,\n            text: \"\".to_string(), row:0, column:0\n        });\n\n        return true;\n    }\n\n    pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n        self.move_line_down(line_idx-1)\n    }\n}\n\n#[cfg(test)]\nmod code_move_line_test {\n    use crate::code::Code;\n\n    #[test]\n    fn test_code_move_line_down() {\n        let mut buffer = Code::from_str(\"hello\\nworld\\na\");\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        buffer.move_line_down(0);\n\n        println!(\"\\n-------move hello to world-------------\");\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        assert_eq!(buffer.text.to_string(), \"world\\nhello\\na\");\n\n        buffer.undo();\n\n        println!(\"\\n--------------------\\n{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n        assert_eq!(buffer.text.to_string(), \"hello\\nworld\\na\");\n    }\n\n    #[test]\n    fn test_code_move_line_up() {\n        let mut buffer = Code::new();\n        buffer.insert_text(\"hello\\nworld\\na\", 0, 0);\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        buffer.move_line_up(1);\n\n        println!(\"\\n--------------------\\n{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        assert_eq!(buffer.text.to_string(), \"world\\nhello\\na\");\n    }\n\n    #[test]\n    fn test_code_move_line_down_last_line() {\n        let mut buffer = Code::from_str(\"1\\n2\\n3\\n4\");\n        println!(\"{}\", buffer.text.to_string());\n\n        buffer.move_line_down(2);\n        println!(\"\\n-------move 3 to 4-------------\");\n\n        println!(\"{}\", buffer.text.to_string());\n\n        assert_eq!(buffer.text.to_string(), \"1\\n2\\n4\\n3\");\n    }\n}\n\n#[cfg(test)]\nmod code_indentation_tests {\n    use crate::code::Code;\n\n    #[test]\n    fn test_code_indentation_level() {\n        let config = crate::config::get();\n        let mut code = Code::from_str(\"    print('hello')\");\n        code.set_lang(\"python\".to_string(), &config);\n\n        println!(\"{}\", code.text.to_string());\n\n        let il = code.indentation_level(0);\n        println!(\"indentation_level on line is {il}\");\n\n        assert_eq!(il, 1);\n    }\n\n    #[test]\n    fn test_code_indentation_level_2() {\n        let config = crate::config::get();\n        let mut code = Code::from_str(\"        print('hello')\");\n        code.set_lang(\"python\".to_string(), &config);\n\n        println!(\"{}\", code.text.to_string());\n\n        let il = code.indentation_level(0);\n        println!(\"indentation_level on line is {il}\");\n\n        assert_eq!(il, 2);\n    }\n\n    #[test]\n    fn test_code_indentation_only() {\n        let config = crate::config::get();\n        let mut code = Code::from_str(\"        print('hello')\");\n        code.set_lang(\"python\".to_string(), &config);\n\n        println!(\"{}\", code.text.to_string());\n\n        let il = code.is_only_indentation_before(0,8);\n        println!(\"indentation_level on line is {il}\");\n\n        assert_eq!(il, true);\n    }\n}\n","uri":"file:///Users/max/apps/rust/red/src/code.rs","version":0}}}
[2024-11-18 20:15:53.964] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"use crossterm::style::Color;\nuse rayon::vec;\nuse ropey::iter::Lines;\nuse ropey::Rope;\nuse ropey::RopeSlice;\nuse tree_sitter::InputEdit;\nuse std::cmp::min;\nuse std::collections::HashMap;\nuse std::fs;\nuse std::fs::File;\nuse std::io::{BufReader, BufWriter};\nuse std::path::Path;\nuse tree_sitter::{Node, Parser, Point, Query, QueryCursor, TextProvider};\n\nuse crate::config::{Config, Language};\nuse crate::utils::{self, hex_to_color};\nuse strfmt::strfmt;\nuse log2::*;\nuse streaming_iterator::StreamingIterator;\n\npub struct Code {\n    pub file_name: String,\n    pub abs_path: String,\n    pub lang: String,\n    pub text: ropey::Rope,\n    pub changed: bool,\n    pub history: Vec<Change>,\n    tree: Option<tree_sitter::Tree>,\n    parser: Option<tree_sitter::Parser>,\n    query: Option<tree_sitter::Query>,\n    r: usize, c: usize, x: usize, y: usize,\n    lang_conf: Option<Language>,\n    line2runneble: HashMap<usize, Runnable>,\n    query_test: Option<tree_sitter::Query>,\n}\n\nimpl Code {\n    pub fn new() -> Self {\n        Self {\n            text: Rope::new(),\n            file_name: String::new(),\n            abs_path: String::new(),\n            changed: false,\n            history: Vec::new(),\n            tree: None,\n            lang: String::new(),\n            parser: None,\n            query: None,\n            r: 0, c: 0, x: 0, y: 0,\n            lang_conf: None,\n            line2runneble: HashMap::new(),\n            query_test: None,\n        }\n    }\n\n    pub fn from_str(text: &str) -> Self {\n        let mut code = Self::new();\n        code.insert_text(text, 0, 0);\n        code\n    }\n\n    pub fn from_file(path: &str, conf: &Config) -> std::io::Result<Self> {\n        let file = File::open(path)?;\n        let text = Rope::from_reader(BufReader::new(file))?;\n        let abs_path = utils::abs_file(path);\n        let file_name = utils::get_file_name(path);\n\n        let mut lang = match detect_lang::from_path(path) {\n            Some(lang) => lang.id().to_lowercase(),\n            None => {\n                // find lang by ext from config\n                match conf.language.iter().find(|l| l.types.iter().any(|t| path.ends_with(t))) {\n                    Some(lang) => lang.name.to_string(),\n                    None => \"text\".to_string(),\n                }\n            }\n        };\n\n        let lang_conf = conf.language.iter().find(|l| l.name == lang);\n        let lang_conf = lang_conf.map(|lc| (*lc).clone());\n\n        let language = match lang.as_str() {\n            \"rust\" => tree_sitter_rust::LANGUAGE.into(),\n            \"javascript\" => tree_sitter_javascript::LANGUAGE.into(),\n            \"python\" => tree_sitter_python::LANGUAGE.into(),\n            \"go\" => tree_sitter_go::LANGUAGE.into(),\n            \"yaml\" => tree_sitter_yaml::language().into(),\n            \"html\" => tree_sitter_html::LANGUAGE.into(),\n            \"shell\" => tree_sitter_bash::LANGUAGE.into(),\n            // \"toml\" => tree_sitter_toml::language().into(),\n            \"java\" => tree_sitter_java::LANGUAGE.into(),\n            // \"kotlin\" => tree_sitter_kotlin::LANGUAGE.into(),\n            \"cpp\" => tree_sitter_cpp::LANGUAGE.into(),\n            \"c\" => tree_sitter_c::LANGUAGE.into(),\n            // \"zig\" => tree_sitter_zig::LANGUAGE.into(),\n            // \"lua\" => tree_sitter_lua::LANGUAGE.into(),\n            \"json\" => tree_sitter_json::LANGUAGE.into(),\n             _ => {\n                lang = \"text\".to_string();\n                tree_sitter_rust::LANGUAGE.into()\n            }\n        };\n\n        if lang == \"text\".to_string() {\n            return Ok(Self {\n                text,\n                file_name,\n                abs_path,\n                changed: false,\n                history: Vec::new(),\n                tree:None,\n                lang,\n                parser: None,\n                query: None,\n                r: 0, c: 0, x: 0, y: 0,\n                lang_conf,\n                line2runneble: HashMap::new(),\n                query_test: None,\n            })\n        }\n\n        let mut parser = Parser::new();\n        parser.set_language(&language).expect(\"Can not set_language\");\n\n        let tree = parser.parse(text.to_string(), None);\n\n        // debug\n        // let query_pattern = r#\"\n        // (string_literal) @string\n        // (function_item name: (identifier) @function)\n        // \"fn\" @keyword\n        // \"#;\n\n        let red_home = std::env::var(\"RED_HOME\").unwrap_or(\"./\".to_string());\n\n        let lang_highlights = Path::new(&red_home).join(\"langs\").join(lang.clone()).join(\"highlights.scm\");\n        let err_message = format!(\"Failed to read highlights.scm file: {:?}\", lang_highlights);\n        let query_pattern = fs::read_to_string(lang_highlights).expect(&err_message.as_str());\n        let query = match Query::new(&language, &query_pattern) {\n            Ok(q) => Some(q),\n            Err(e) => { debug!(\"err {}\", e); None },\n        };\n\n        let scm = Path::new(&red_home).join(\"langs\").join(lang.clone()).join(\"tests.scm\");\n        let query_test = match fs::read_to_string(scm) {\n            Ok(qp) => Query::new(&language, &qp).ok(),\n            Err(_) => None,\n        };\n\n        let mut this = Self {\n            text,\n            file_name,\n            abs_path,\n            changed: false,\n            history: Vec::new(),\n            tree,\n            lang,\n            parser: Some(parser),\n            query,\n            r: 0, c: 0, x: 0, y: 0,\n            lang_conf,\n            line2runneble: HashMap::new(),\n            query_test\n        };\n\n        this.update_runnables();\n        Ok(this)\n    }\n    pub fn set_lang(&mut self, lang:String, conf: &Config) {\n        self.lang = lang;\n        let lang_conf = conf.language.iter().find(|l| l.name == self.lang);\n        self.lang_conf = lang_conf.map(|lc| (*lc).clone());\n    }\n\n    pub fn set_cursor_position(&mut self, r: usize, c: usize, y: usize, x: usize) {\n        self.r = r;\n        self.c = c;\n        self.y = y;\n        self.x = x;\n    }\n    pub fn get_cursor_position(&mut self) -> (usize,usize,usize,usize) {\n        (self.r.clone(), self.c.clone(), self.y.clone(), self.x.clone())\n    }\n\n    pub fn save_file(&mut self) -> std::io::Result<()> {\n        if !self.changed { return Ok(()); }\n\n        let file = File::create(&self.abs_path)?;\n        let saved = self.text.write_to(BufWriter::new(file));\n        self.changed = false;\n        saved\n    }\n\n    fn insert(&mut self, text: &str, from: usize) {\n        let offset_byte = self.text.char_to_byte(from);\n        self.text.insert(from, text);\n        self.changed = true;\n\n        let total_bytes: usize = text.chars().map(|ch| ch.len_utf8()).sum();\n        let edit = tree_sitter::InputEdit {\n            start_byte: offset_byte,\n            old_end_byte: offset_byte,\n            new_end_byte: offset_byte + total_bytes,\n            start_position: Point { row: 0, column: 0 },\n            old_end_position: Point { row: 0, column: 0 },\n            new_end_position: Point { row: 0, column: 0 },\n        };\n        debug!(\"ts insert {:?}\", edit);\n        self.apply_edit(edit);\n    }\n\n    pub fn insert_text(&mut self, text: &str, row: usize, column: usize) {\n        let from = self.text.line_to_char(row) + column;\n        self.insert(text, from);\n\n        self.history.push(Change {\n            start: from,\n            operation: Operation::Insert,\n            text: text.to_string(),\n            row, column\n        });\n    }\n\n    pub fn insert_char(&mut self, c: char, row: usize, column: usize) {\n        self.insert_text(&c.to_string(), row, column);\n    }\n\n    pub fn insert_tab(&mut self, row: usize, column: usize) -> String {\n        let text = match self.lang_conf.as_ref() {\n            Some(conf) if conf.indent.unit == \" \" =>\n                \" \".repeat(conf.indent.width as usize).to_string(),\n            _ =>  \"\\t\".to_string(),\n        };\n\n        self.insert_text(&text, row, column);\n        return text;\n    }\n\n    /// removes from text and edit tree\n    fn remove(&mut self, from: usize, to: usize) {\n        let from_byte = self.text.char_to_byte(from);\n        let to_byte = self.text.char_to_byte(to);\n\n        self.text.remove(from..to);\n        self.changed = true;\n\n        let edit = tree_sitter::InputEdit {\n            start_byte: from_byte,\n            old_end_byte: to_byte,\n            new_end_byte: from_byte,\n            start_position: Point { row: 0, column: 0 },\n            old_end_position: Point { row: 0, column: 0 },\n            new_end_position: Point { row: 0, column: 0 },\n        };\n        debug!(\"ts remove {:?}\", edit);\n        self.apply_edit(edit);\n    }\n\n    pub fn remove_text(&mut self, row: usize, col: usize, row1: usize, col1: usize) {\n        let from = self.text.line_to_char(row) + col;\n        let to = self.text.line_to_char(row1) + col1;\n        let text = self.text.slice(from..to).to_string();\n\n        self.history.push(Change {\n            start: from,\n            operation: Operation::Remove,\n            text: text.to_string(),\n            row:row1, column:col1\n        });\n\n        self.remove(from, to);\n    }\n\n    pub fn remove_char(&mut self, row: usize, column: usize) {\n        self.remove_text(row, column-1, row, column);\n    }\n\n    fn apply_edit(&mut self, edit: InputEdit) {\n        match self.tree.as_mut() {\n            Some(tree) => {\n                tree.edit(&edit);\n                self.tree_parse();\n                self.update_runnables();\n            },\n            None => return,\n        }\n    }\n    fn tree_parse(&mut self) {\n        if let Some(parser) = &mut self.parser {\n            // let text = self.text.to_string();\n            let rope = &self.text;\n            self.tree = parser.parse_with(&mut |byte, _| {\n                // debug!(\"parse_with {}\", byte);\n                let sl = if byte <= rope.len_bytes() {\n                    let (chunk, start, _, _) = rope.chunk_at_byte(byte);\n                    chunk[byte - start..].as_bytes()\n                } else {\n                    &[]\n                };\n                // debug!(\"sl {:?}\", String::from_utf8_lossy(sl));\n                sl\n            }, self.tree.as_ref());\n\n            // self.tree = parser.parse(text, self.tree.as_ref());\n        }\n    }\n\n    pub fn get_text(&mut self, row: usize, col: usize, row1: usize, col1: usize) -> String {\n        let from = self.text.line_to_char(row) + col;\n        let to = self.text.line_to_char(row1) + col1;\n        let string = self.text.slice(from..to).to_string();\n        return string;\n    }\n\n    pub fn line_len(&self, idx: usize) -> usize {\n        let line = self.text.line(idx);\n        let chars = line.chars();\n        let len = chars.len();\n\n        // '/n' at the end if len not 0, do not count it\n        if chars.last() == Some('\\n') { len - 1 } else { len }\n    }\n\n    pub fn get_line_at(&self, idx: usize) -> Option<RopeSlice> {\n        self.text.get_line(idx)\n    }\n\n    pub fn line_at(&self, idx: usize) -> Option<&str> {\n        let line = self.text.line(idx);\n        line.as_str()\n    }\n\n    pub fn lines_from(&self, from: usize) -> Option<Lines> {\n        self.text.get_lines_at(from)\n    }\n\n    pub fn get_from(&self, from: usize) -> Lines {\n        self.text.lines_at(from)\n    }\n\n    pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n        let from = self.text.line_to_char(row) + col;\n        let to = self.text.line_to_char(row1) + col1;\n        self.text.slice(from..to)\n    }\n\n    pub fn slice(&self, from: usize, to: usize) -> RopeSlice {\n        let max_index = self.text.len_lines();\n        let end_index = min(to, max_index);\n        let start_index = self.text.line_to_char(from);\n        let end_index = self.text.line_to_char(end_index);\n        self.text.slice(start_index..end_index)\n    }\n\n    pub fn len_lines(&self) -> usize {\n        self.text.len_lines()\n    }\n    pub fn line_to_byte(&self, line: usize) -> usize {\n        self.text.line_to_byte(line)\n    }\n\n    pub fn is_empty(&self) -> bool {\n        self.text.len_chars() == 0\n    }\n\n    pub fn indentation_level(&self, line: usize) -> usize {\n        match self.lang_conf.as_ref() {\n            Some(conf) if conf.indent.unit == \" \" => {  // spaces case\n                let spaces_count = self.text.line(line).chars().take_while(|&ch| ch == ' ').count();\n                // println!(\"spaces_count={spaces_count}\");\n                let width = if conf.indent.width > 0 { conf.indent.width as usize} else { 2 };\n                return (spaces_count as f64 / width as f64).ceil() as usize;\n            }\n            _ =>  {\n                let tabs_count = self.text.line(line).chars().take_while(|&ch| ch == '\\t').count();\n                // println!(\"tabs_count={tabs_count}\");\n                return tabs_count;\n            },\n        };\n    }\n\n    fn position_to_point(text: &RopeSlice, pos: usize) -> (usize, usize) {\n        let byte = text.char_to_byte(pos);\n        let line = text.char_to_line(pos);\n        let line_start_byte = text.line_to_byte(line);\n        let col = byte - line_start_byte;\n\n        (line, col)\n    }\n\n    pub fn search(&self, substring: &str) -> Vec<(usize, usize)> {\n\n        let rope_slice = &self.text.slice(0..);\n        let result: Vec<(usize, usize)> = SearchIter::from_rope_slice(rope_slice, substring)\n            .map(|(pos, _)| Self::position_to_point(rope_slice, pos))\n            .collect();\n\n        result\n    }\n\n    pub fn find_substring(&self, line:usize, substring: &str) -> Option<usize> {\n        match self.text.get_line(line) {\n            Some(line) => {\n                let search_iter = EarlyTerminationSearch::from_rope_slice(&line, substring);\n                let result: Vec<(usize, usize)> = search_iter.collect();\n                result.first().map(|r|r.0)\n            },\n            None => None,\n        }\n    }\n\n    pub fn find_comment(&self, line:usize) -> Option<usize> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => self.find_substring(line, &conf.comment),\n            None => None,\n        }\n    }\n\n    pub fn get_lang_comment(&self) -> Option<String> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(conf.comment.clone()),\n            None => None,\n        }\n    }\n    pub fn get_lang_conf(&self) -> Option<&Language> {\n        self.lang_conf.as_ref()\n    }\n\n    pub fn find_first_non_whitespace(&self, line_index:usize, stop_index: usize) -> Option<usize> {\n        match self.text.get_line(line_index) {\n            Some(line) => {\n                line.chars()\n                    .enumerate()\n                    .take(stop_index)\n                    .find(|(_, ch)| !ch.is_whitespace())\n                    .map(|(index, _)| index)\n            },\n            None => None,\n        }\n    }\n\n    pub fn indent_string(&self) -> Option<String> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(conf.indent.unit.repeat(conf.indent.width as usize)),\n            None => None,\n        }\n    }\n    pub fn indent_width(&self) -> Option<usize> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(conf.indent.width as usize),\n            None => None,\n        }\n    }\n    pub fn indent_unit(&self) -> Option<&String> {\n        match self.lang_conf.as_ref() {\n            Some(conf) => Some(&conf.indent.unit),\n            None => None,\n        }\n    }\n    pub fn is_only_indentation_before(&self, r: usize, c: usize) -> bool {\n        if r >= self.text.len_lines() || c == 0 { return false; }\n\n        let line = self.text.line(r);\n\n        let mut col = 0;\n        for ch in line.chars() {\n            if col >= c { break; } // Reached the specified column\n            // Found a non-whitespace character before the specified position\n            if !ch.is_whitespace() { return false; }\n            col += 1;\n        }\n        true\n    }\n\n    pub fn count_tabs(&self, line_index:usize, stop_index: usize) -> Option<usize> {\n        match self.text.get_line(line_index) {\n            Some(line) => {\n                let mut count = 0;\n                for ch in line.chars().take(stop_index) {\n                    if ch == '\\t' {\n                        count += 1;\n                    }\n                }\n                Some(count)\n            },\n            None => None,\n        }\n    }\n\n    /// calculates color ranges from line number `from` to `to`\n    /// returns colors vectors of (start_byte, end_byte, color): (usize, usize, Color)\n    pub fn colors(\n        &self,\n        from: usize,\n        to: usize,\n        theme: &HashMap<String, String>,\n    ) -> Vec<(usize, usize, usize, usize, Color)> {\n\n        let query = match self.query.as_ref() {\n            Some(q) => q, None => return Vec::new(),\n        };\n\n        let mut query_cursor = QueryCursor::new();\n        let start_index = self.text.line_to_byte(from);\n        let max_index = self.text.len_lines();\n        let end_index = self.text.line_to_byte(min(to, max_index));\n\n        query_cursor.set_byte_range(start_index..end_index); //superfast\n\n        let root = self.tree.as_ref().unwrap().root_node();\n\n        let mut query_matches = query_cursor.matches(&query, root, RopeProvider(self.text.slice(..)));\n        \n        let mut result = Vec::new();\n\n        while let Some(m) = query_matches.next() {\n            for capture in m.captures {\n                let capture_index = capture.index as usize;\n                let capture_name = &query.capture_names()[capture_index];\n                let name = capture_name.split('.').next().unwrap_or(capture_name);\n                let theme_colors = theme.get(name);\n                let color = theme_colors\n                    .map(|s| hex_to_color(s))\n                    .unwrap_or(Color::Reset);\n                \n                if color == Color::Reset { continue }\n\n                result.push((\n                    capture.node.start_byte(), \n                    capture.node.end_byte(), \n                    capture.node.start_position().row, \n                    capture.node.end_position().row, \n                    color\n                ));\n            }\n        }\n        \n        result\n\n    }\n\n    fn update_runnables(&mut self) {\n        if self.lang_conf.is_none() {return; }\n\n        let lang = self.lang_conf.as_ref().unwrap();\n\n        self.line2runneble.clear();\n\n        match (lang.executable.as_ref(), lang.exec.as_ref()) {\n            (Some(true), Some(template)) => {\n\n                let mut vars = std::collections::HashMap::new();\n                vars.insert(\"file\".to_string(), self.abs_path.clone());\n\n                let res = strfmt(&template, &vars);\n                if res.is_ok() {\n                    let cmd = res.unwrap();\n                    let runnable = Runnable { cmd, row: 0 };\n                    self.line2runneble.insert(0, runnable);\n                }\n            }\n            _ => {},\n        }\n\n        match (lang.executable.as_ref(), lang.exectest.as_ref()) {\n            (Some(true), Some(template)) => {\n                if self.query_test.is_none() { return; }\n\n                let query = self.query_test.as_ref().expect(\"cant get query\");\n                let mut query_cursor = QueryCursor::new();\n\n                let root = self.tree.as_ref().unwrap().root_node();\n                let mut matches = query_cursor.matches(&query, root, RopeProvider(self.text.slice(..)));\n\n                while let Some(m) = matches.next() {\n                    for capture in m.captures {\n                        let capture_index = capture.index as usize;\n                        let capture_name = &query.capture_names()[capture_index];\n                        let name = capture_name.split('.').next().unwrap_or(capture_name);\n                        let text = self.text.byte_slice(capture.node.start_byte()..capture.node.end_byte()).to_string();\n                        let row = capture.node.start_position().row;\n                        let mut vars = std::collections::HashMap::new();\n                        vars.insert(\"test\".to_string(), text);\n                        vars.insert(\"file\".to_string(), self.abs_path.clone());\n\n                        let res = strfmt(&template, &vars);\n                        if res.is_ok() {\n                            let cmd = res.unwrap();\n                            let runnable = Runnable { cmd, row };\n                            self.line2runneble.insert(row, runnable);\n                        }\n                    }\n                }\n\n            }\n            _ => {},\n        }\n    }\n\n    pub fn is_runnable(&self, line: usize) -> bool {\n        self.line2runneble.contains_key(&line)\n    }\n    pub fn get_runnable(&self, line: usize) -> Option<&Runnable> {\n        self.line2runneble.get(&line)\n    }\n\n    \n    pub fn get_node_path(\n        &self, row: usize, column: usize\n    ) -> Option<NodePath> {\n\n        // return node path at row column position\n        let root = self.tree.as_ref()?.root_node();\n        let mut node = root.named_descendant_for_point_range(\n            Point { row, column }, Point { row, column }\n        );\n        \n        let mut path = NodePath { row, column, nodes: vec![], current:0 };\n\n        // traverse tree to up\n        while node.is_some() {\n            match node {\n                Some(n) => {\n                    path.nodes.push((n.start_position(), n.end_position()));\n                    node = n.parent();\n                },\n                None => { break },\n            }\n        }\n        Some(path)\n    }\n\n}\n\npub struct NodePath {\n    pub row: usize,\n    pub column: usize,\n    pub nodes: Vec<(Point,Point)>,\n    current: usize\n}\n\nimpl NodePath {\n    pub fn current_node(&self) -> Option<&(Point, Point)>{\n        self.nodes.get(self.current)\n    }\n    pub fn next_node(&mut self) -> Option<&(Point, Point)>{\n        self.current += 1;\n        if self.current >= self.nodes.len() { self.current = self.nodes.len() -1 } \n        self.nodes.get(self.current)\n    }\n    pub fn prev_node(&mut self) -> Option<&(Point, Point)>{\n        if self.current == 0 { return None } \n        if self.current > 0 { self.current -= 1 } \n        self.nodes.get(self.current)\n    }\n}\n\npub struct Runnable {\n    pub cmd: String,\n    pub row: usize,\n}\n\npub struct ChunksBytes<'a> {\n    chunks: ropey::iter::Chunks<'a>,\n}\n\nimpl<'a> Iterator for ChunksBytes<'a> {\n    type Item = &'a [u8];\n    \n    #[inline]\n    fn next(&mut self) -> Option<Self::Item> {\n        self.chunks.next().map(str::as_bytes)\n    }\n}\n\npub struct RopeProvider<'a>(pub RopeSlice<'a>);\nimpl<'a> TextProvider<&'a [u8]> for RopeProvider<'a> {\n    type I = ChunksBytes<'a>;\n\n    #[inline]\n    fn text(&mut self, node: Node) -> Self::I {\n        let fragment = self.0.byte_slice(node.start_byte()..node.end_byte());\n        ChunksBytes {\n            chunks: fragment.chunks(),\n        }\n    }\n}\n\nstruct SearchIter<'a> {\n    char_iter: ropey::iter::Chars<'a>,\n    search_pattern: &'a str,\n    search_pattern_char_len: usize,\n\n    // The current char index of the search head.\n    cur_index: usize,\n\n    // Tracks where we are in the search pattern for the current possible matches.\n    possible_matches: Vec<std::str::Chars<'a>>,\n}\n\nimpl<'a> SearchIter<'a> {\n    fn from_rope_slice<'b>(slice: &'b RopeSlice, search_pattern: &'b str) -> SearchIter<'b> {\n        assert!(\n            !search_pattern.is_empty(),\n            \"Can't search using an empty search pattern.\"\n        );\n        SearchIter {\n            char_iter: slice.chars(),\n            search_pattern,\n            search_pattern_char_len: search_pattern.chars().count(),\n            cur_index: 0,\n            possible_matches: Vec::new(),\n        }\n    }\n}\n\nimpl<'a> Iterator for SearchIter<'a> {\n    type Item = (usize, usize);\n\n    // Return the start/end char indices of the next match.\n    fn next(&mut self) -> Option<(usize, usize)> {\n        #[allow(clippy::while_let_on_iterator)]\n        while let Some(next_char) = self.char_iter.next() {\n            self.cur_index += 1;\n\n            // Push new potential match, for a possible match starting at the\n            // current char.\n            self.possible_matches.push(self.search_pattern.chars());\n\n            // Check the rope's char against the next character in each of\n            // the potential matches, removing the potential matches that\n            // don't match.  We're using indexing instead of iteration here\n            // so that we can remove the possible matches as we go.\n            let mut i = 0;\n            while i < self.possible_matches.len() {\n                let pattern_char = self.possible_matches[i].next().unwrap();\n                if next_char == pattern_char {\n                    if self.possible_matches[i].clone().next() == None {\n                        // We have a match!  Reset possible matches and\n                        // return the successful match's char indices.\n                        let char_match_range = (\n                            self.cur_index - self.search_pattern_char_len,\n                            self.cur_index,\n                        );\n                        self.possible_matches.clear();\n                        return Some(char_match_range);\n                    } else {\n                        // Match isn't complete yet, move on to the next.\n                        i += 1;\n                    }\n                } else {\n                    // Doesn't match, remove it.\n                    let _ = self.possible_matches.swap_remove(i);\n                }\n            }\n        }\n\n        None\n    }\n}\n\n#[cfg(test)]\nmod code_rope_search_iterator_simple_tests {\n    use super::SearchIter;\n\n    #[test]\n    fn test_search_iterator() {\n        let rope = ropey::Rope::from_str(\"// This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let search_iter = SearchIter::from_rope_slice(slice, substring);\n        search_iter.for_each(|r| println!(\"search {:?}\", r))\n    }\n}\n\nstruct EarlyTerminationSearch<'a> {\n    char_iter: ropey::iter::Chars<'a>,\n    search_pattern: &'a str,\n    search_pattern_chars: Vec<char>,\n    cur_index: usize, // The current char index of the search head.\n    possible_match: Vec<char>, // Tracks where we are in the search pattern for the current possible match.\n    match_start_index: usize, // The starting index of the current possible match.\n    found_match: bool, // Flag indicating whether a match has been found.\n}\n\nimpl<'a> EarlyTerminationSearch<'a> {\n    fn from_rope_slice(slice: &'a RopeSlice, search_pattern: &'a str) -> EarlyTerminationSearch<'a> {\n        assert!(\n            !search_pattern.is_empty(),\n            \"Can't search using an empty search pattern.\"\n        );\n        let search_pattern_chars: Vec<char> = search_pattern.chars().collect();\n        EarlyTerminationSearch {\n            char_iter: slice.chars(),\n            search_pattern,\n            search_pattern_chars,\n            cur_index: 0,\n            possible_match: Vec::new(),\n            match_start_index: 0,\n            found_match: false,\n        }\n    }\n}\n\nimpl<'a> Iterator for EarlyTerminationSearch<'a> {\n    type Item = (usize, usize);\n\n    fn next(&mut self) -> Option<(usize, usize)> {\n        while let Some(next_char) = self.char_iter.next() {\n            self.cur_index += 1;\n            if self.found_match {\n                // If a match has been found, terminate early.\n                return None;\n            }\n            if next_char == self.search_pattern_chars[self.possible_match.len()] {\n                self.possible_match.push(next_char);\n                if self.possible_match.len() == self.search_pattern_chars.len() {\n                    // Complete match found.\n                    self.found_match = true;\n                    return Some((self.cur_index - self.search_pattern_chars.len(), self.cur_index));\n                }\n                if self.possible_match.len() == 1 {\n                    // Start of a potential match.\n                    self.match_start_index = self.cur_index - 1;\n                }\n            } else {\n                // Mismatch, reset possible match.\n                self.possible_match.clear();\n            }\n        }\n        None\n    }\n}\n#[cfg(test)]\nmod code_rope_search_iterator_tests {\n    use crate::code::{EarlyTerminationSearch, SearchIter};\n\n    #[test]\n    fn test_early_termination_search() {\n        let rope = ropey::Rope::from_str(\"// This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let search_iter = EarlyTerminationSearch::from_rope_slice(slice, substring);\n        let result: Vec<(usize, usize)> = search_iter.collect();\n        assert_eq!(result.len(), 1);\n        assert_eq!(result.get(0).unwrap().0, 0);\n        assert_eq!(result.get(0).unwrap().1, 2);\n    }\n\n\n    #[test]\n    fn test_full_search_bench() {\n        use std::time::{Instant};\n\n        let n = 10000000;\n\n        let start_time = Instant::now();\n\n        let rope = ropey::Rope::from_str(\"// This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        for _ in 0..n {\n            let search_iter = SearchIter::from_rope_slice(slice, substring);\n            let result: Vec<(usize, usize)> = search_iter.collect();\n        }\n\n        let elapsed_time = Instant::now().duration_since(start_time).as_secs_f64();\n        let ops_per_sec = (n as f64) / elapsed_time;\n        println!(\"ops: {:.2}\", ops_per_sec);\n        // ops: 204967.29\n    }\n\n\n    #[test]\n    fn test_early_termination_search_bench() {\n        use std::time::{Instant};\n\n        let rope = ropey::Rope::from_str(\"This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let operation = || {\n            let search_iter = EarlyTerminationSearch::from_rope_slice(slice, substring);\n            let result: Vec<(usize, usize)> = search_iter.collect();\n        };\n\n        let n = 10_000;\n        let start_time = Instant::now();\n        for _ in 0..n { operation(); }\n\n        let elapsed_time = Instant::now().duration_since(start_time).as_secs_f64();\n        let ops_per_sec = (n as f64) / elapsed_time;\n        println!(\"ops: {:.2}\", ops_per_sec);\n        // ops: 211009.97\n    }\n}\n\n#[cfg(test)]\nmod code_rope_search_tests {\n    use ropey::RopeSlice;\n\n    fn rope_search(rope: &RopeSlice, substring: &str) -> Option<usize> {\n        let sub_len = substring.len();\n\n        for i in 0..=rope.len_chars() - sub_len {\n            let sb = rope.slice(i..i + sub_len).as_str();\n            if sb.is_some() && sb.unwrap() == substring {\n                return Some(i);\n            }\n        }\n        None\n    }\n\n    #[test]\n    fn test_search() {\n        let rope = ropey::Rope::from_str(\"This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let result = rope_search(slice, substring);\n        match result {\n            Some(r) => println!(\"result {}\", r),\n            None => println!(\"not found\"),\n        }\n    }\n\n\n    #[test]\n    fn test_rope_search_bench() {\n        use std::time::{Instant};\n\n        let rope = ropey::Rope::from_str(\"This is a sample string with some occurrences of '//'.\");\n        let substring = \"//\";\n        let slice = &rope.slice(0..);\n\n        let operation = || {\n            let result = rope_search(slice, substring);\n        };\n\n        let n = 10_000;\n        let start_time = Instant::now();\n        for _ in 0..n { operation(); }\n\n        let elapsed_time = Instant::now().duration_since(start_time).as_secs_f64();\n        let ops_per_sec = (n as f64) / elapsed_time;\n        println!(\"ops: {:.2}\", ops_per_sec);\n        // ops: 25167.75\n        // slow\n    }\n}\n\n// Enum to represent different types of operations\n#[derive(Debug)]\npub enum Operation {\n    Insert,\n    Remove,\n    Start,\n    End\n}\n\n// Change struct to represent a single change operation\n#[derive(Debug)]\npub struct Change {\n    pub start: usize,\n    pub operation: Operation,\n    pub text: String,\n    pub row: usize,\n    pub column: usize\n}\n\n#[derive(Debug, Default)]\npub struct MultipleChange {\n    pub changes: Vec<Change>,\n}\n\nimpl Code {\n    pub fn undo(&mut self) -> Option<MultipleChange> {\n        let mut multiple_change = MultipleChange::default();\n        let mut end = false;\n        let mut multiple = false;\n\n        while !end {\n            match self.history.pop() {\n                None => return None,\n                Some(change) => {\n                    match change.operation {\n                        Operation::Insert => {\n                            let from = change.start;\n                            let to = from + change.text.chars().count();\n                            self.remove(from, to);\n                            multiple_change.changes.push(change);\n                            if !multiple { return Some(multiple_change) }\n                        },\n                        Operation::Remove => {\n                            self.insert(&change.text, change.start);\n                            multiple_change.changes.push(change);\n                            if !multiple { return Some(multiple_change) }\n                        }\n                        Operation::End => multiple = true,\n                        Operation::Start => end = true,\n                    }\n                }\n            }\n\n        }\n\n        Some(multiple_change)\n    }\n}\n\n\n#[cfg(test)]\nmod code_undo_tests {\n    use crate::code::Code;\n\n    #[test]\n    fn test_code_undo() {\n        let mut buffer = Code::new();\n\n        buffer.insert_text(\"hello\", 0, 0);\n        buffer.insert_text(\" world\", 0, 5);\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        buffer.undo();\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n    }\n}\n\n\nimpl Code {\n    pub fn move_line_down(&mut self, line_idx: usize) -> bool {\n        let len_lines = self.text.len_lines();\n        if len_lines <= 2 { return false; }\n\n        let line1_start = match self.text.try_line_to_char(line_idx).ok(){\n            Some(idx) => idx, None => return false,\n        };\n        let line1_end = match self.text.try_line_to_char(line_idx + 1).ok(){\n            Some(idx) => idx-1, None => return false,\n        };\n        let line2_start = match self.text.try_line_to_char(line_idx + 1).ok(){\n            Some(idx) => idx, None => return false,\n        };\n        let line2_end = match self.text.try_line_to_char(line_idx + 2).ok(){\n            Some(idx) if idx == self.text.len_chars() => idx,\n            Some(idx) => idx-1,\n            None => return false,\n        };\n\n        // if line1_end == self.text.len_chars() { return false; } // skip last line\n\n        let line_1 = self.text.slice(line1_start..line1_end).to_string();\n        let line_2 = self.text.slice(line2_start..line2_end).to_string();\n        // let text = self.get_text(line_idx, 0, line_idx+1, 0);\n\n        self.history.push(Change {\n            start: 0, operation: Operation::Start,\n            text: \"\".to_string(), row:0, column:0\n        });\n\n        self.remove_text(line_idx, 0, line_idx, line_1.chars().count());\n        self.insert_text(&line_2, line_idx, 0);\n        self.remove_text(line_idx+1, 0, line_idx+1, line_2.chars().count());\n        self.insert_text(&line_1, line_idx+1, 0);\n\n        self.history.push(Change {\n            start: 0, operation: Operation::End,\n            text: \"\".to_string(), row:0, column:0\n        });\n\n        return true;\n    }\n\n    pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n        self.move_line_down(line_idx-1)\n    }\n}\n\n#[cfg(test)]\nmod code_move_line_test {\n    use crate::code::Code;\n\n    #[test]\n    fn test_code_move_line_down() {\n        let mut buffer = Code::from_str(\"hello\\nworld\\na\");\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        buffer.move_line_down(0);\n\n        println!(\"\\n-------move hello to world-------------\");\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        assert_eq!(buffer.text.to_string(), \"world\\nhello\\na\");\n\n        buffer.undo();\n\n        println!(\"\\n--------------------\\n{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n        assert_eq!(buffer.text.to_string(), \"hello\\nworld\\na\");\n    }\n\n    #[test]\n    fn test_code_move_line_up() {\n        let mut buffer = Code::new();\n        buffer.insert_text(\"hello\\nworld\\na\", 0, 0);\n\n        println!(\"{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        buffer.move_line_up(1);\n\n        println!(\"\\n--------------------\\n{}\", buffer.text.to_string());\n        println!(\"{:?}\", buffer.history);\n\n        assert_eq!(buffer.text.to_string(), \"world\\nhello\\na\");\n    }\n\n    #[test]\n    fn test_code_move_line_down_last_line() {\n        let mut buffer = Code::from_str(\"1\\n2\\n3\\n4\");\n        println!(\"{}\", buffer.text.to_string());\n\n        buffer.move_line_down(2);\n        println!(\"\\n-------move 3 to 4-------------\");\n\n        println!(\"{}\", buffer.text.to_string());\n\n        assert_eq!(buffer.text.to_string(), \"1\\n2\\n4\\n3\");\n    }\n}\n\n#[cfg(test)]\nmod code_indentation_tests {\n    use crate::code::Code;\n\n    #[test]\n    fn test_code_indentation_level() {\n        let config = crate::config::get();\n        let mut code = Code::from_str(\"    print('hello')\");\n        code.set_lang(\"python\".to_string(), &config);\n\n        println!(\"{}\", code.text.to_string());\n\n        let il = code.indentation_level(0);\n        println!(\"indentation_level on line is {il}\");\n\n        assert_eq!(il, 1);\n    }\n\n    #[test]\n    fn test_code_indentation_level_2() {\n        let config = crate::config::get();\n        let mut code = Code::from_str(\"        print('hello')\");\n        code.set_lang(\"python\".to_string(), &config);\n\n        println!(\"{}\", code.text.to_string());\n\n        let il = code.indentation_level(0);\n        println!(\"indentation_level on line is {il}\");\n\n        assert_eq!(il, 2);\n    }\n\n    #[test]\n    fn test_code_indentation_only() {\n        let config = crate::config::get();\n        let mut code = Code::from_str(\"        print('hello')\");\n        code.set_lang(\"python\".to_string(), &config);\n\n        println!(\"{}\", code.text.to_string());\n\n        let il = code.is_only_indentation_before(0,8);\n        println!(\"indentation_level on line is {il}\");\n\n        assert_eq!(il, true);\n    }\n}\n","uri":"file://./src/code.rs","version":0}}}
[2024-11-18 20:15:55.525] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]}],"version":0}}
[2024-11-18 20:16:05.761] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"use serde::{Deserialize, Serialize};\nuse std::path::Path;\n\n#[derive(Debug, Deserialize, Clone)]\npub struct Config {\n    pub theme: String,\n    pub left_panel_width: Option<usize>,\n    pub language: Vec<Language>,\n}\n\n#[derive(Debug, Deserialize, Clone)]\npub struct Language {\n    pub name:       String,\n    pub types:      Vec<String>,\n    pub comment:    String,\n    pub lsp:        Option<Vec<String>>, \n    pub indent:     IndentConfig, \n    pub executable: Option<bool>,\n    pub exec:       Option<String>,\n    pub exectest:   Option<String>,\n}\n\n#[derive(Debug, Deserialize, Clone)]\npub struct IndentConfig {\n    pub width: i32,\n    pub unit:  String,\n}\n\npub fn get() -> Config {\n    let red_home = std::env::var(\"RED_HOME\").expect(\"RED_HOME must be set\");\n    let config_path = Path::new(&red_home).join(\"config.toml\");\n    let toml_str = std::fs::read_to_string(config_path).expect(\"Unable to read config.toml file\");\n    let config: Config = toml::from_str(&toml_str).expect(\"Unable to parse TOML\");\n    config\n}\n\n#[cfg(test)]\nmod congif_tests {\n    #[test]\n    fn test_read_config() {\n        let config = crate::config::get();\n\n        println!(\"Theme: {}\", config.theme);\n        println!();\n\n        for language in config.language {\n            println!(\"Language: {}\", language.name);\n            println!(\"File Types: {:?}\", language.types);\n            println!(\"Comment Token: {}\", language.comment);\n            println!(\"LSP: {:?}\", language.lsp);\n            println!(\"Indent: {:?}\", language.indent);\n            println!();\n        }\n    }\n}","uri":"file://./src/config.rs","version":0}}}
[2024-11-18 20:16:07.640] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"use std::fs;\nuse std::fs::File;\nuse std::path::{Path, PathBuf};\nuse std::io::{self, Write};\nuse crossterm::{cursor, queue, QueueableCommand, style::Print};\nuse log2::debug;\nuse serde::de;\nuse tokio::sync::watch::error;\n\nuse crate::utils;\nuse crate::utils::{IGNORE_DIRS, IGNORE_FILES};\nuse crossterm::style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor};\n\n#[derive(Debug)]\npub struct TreeNode {\n    name: String,\n    fullpath: String,\n    is_file: bool,\n    children: Option<Vec<TreeNode>>,\n}\n\nimpl TreeNode {\n    pub fn new(name:String, fullpath:String, is_file: bool) -> Self {\n        Self { name, fullpath, is_file, children: None }\n    }\n    pub fn print(&self) { println!(\"node {:?}\", self); }\n    pub fn is_file(&mut self) -> bool { self.is_file }\n    pub fn fullpath(&mut self) -> String { self.fullpath.clone() }\n    pub fn collapse(&mut self) { self.children = None; }\n\n    pub fn expand(&mut self) -> io::Result<()> {\n        if !Path::new(&self.fullpath).is_dir() { return Ok(()); }\n\n        let mut children = Vec::new();\n       \n        let mut directories = Vec::new();\n        let mut files = Vec::new();\n\n        for entry in fs::read_dir(&self.fullpath)? {\n            let entry = entry?;\n            let name = entry.file_name().into_string().unwrap();\n            let is_file = entry.file_type().unwrap().is_file();\n            let abs_path = match entry.path().canonicalize() {\n                Ok(abs) => abs,\n                Err(e) => { debug!(\"cant get abs_path for {}\", name); continue;},\n            };\n            let fullpath = abs_path.to_string_lossy().to_string();\n\n            if !is_file && IGNORE_DIRS.contains(&name.as_str()) { continue; }\n            if is_file && IGNORE_FILES.contains(&name.as_str()) { continue; }\n\n            if is_file { files.push(TreeNode::new(name, fullpath, is_file)); }\n            else { directories.push(TreeNode::new(name, fullpath, is_file)); }\n        }\n\n        directories.sort_by(|a, b| a.name.cmp(&b.name));\n        files.sort_by(|a, b| a.name.cmp(&b.name));\n\n        children.extend(directories);\n        children.extend(files);\n\n        self.children = Some(children);\n        Ok(())\n    }\n\n    pub fn toggle(&mut self) -> io::Result<()> {\n        if self.children.is_none() {\n            self.expand()?;\n        } else {\n            self.collapse();\n        }\n        Ok(())\n    }\n\n    pub fn len(&self) -> usize {\n        match &self.children {\n            Some(children) => {\n                let mut count = children.len();\n                for child in children {\n                    count += child.len();\n                }\n                count\n            }\n            None => 0,\n        }\n    }\n\n    fn filter_files_mutate(&mut self, pattern: &str) -> bool {\n        let mut found = false;\n        if let Some(children) = &mut self.children {\n            let mut filtered_children = Vec::new();\n            for mut child in children.drain(..) {\n                if child.is_file && child.name.contains(pattern) {\n                    found = true;\n                    filtered_children.push(child);\n                } else if !child.is_file {\n                    child.expand();\n                    // Recursive call for directories\n                    let is_any_found = child.filter_files_mutate(pattern);\n                    if is_any_found {\n                        filtered_children.push(child);\n                        found = true;\n                    }\n                }\n            }\n            self.children = Some(filtered_children);\n        }\n        found\n    }\n}\n\npub struct TreeNodeIterator<'a> {\n    stack: Vec<(&'a TreeNode, usize)>, // Tuple of node reference and depth\n}\n\nimpl<'a> TreeNodeIterator<'a> {\n    pub fn new(root: &'a TreeNode) -> Self {\n        let mut stack = Vec::new();\n        stack.push((root, 0)); // Start with depth 0 for the root node\n        Self { stack }\n    }\n}\n\nimpl<'a> Iterator for TreeNodeIterator<'a> {\n    type Item = (&'a TreeNode, usize); // Tuple of node reference and depth\n\n    fn next(&mut self) -> Option<Self::Item> {\n        // Pop the last node-depth tuple from the stack\n        let (node, depth) = self.stack.pop()?;\n\n        // Push children onto the stack with incremented depth\n        if let Some(children) = &node.children {\n            let new_depth = depth + 1;\n            for child in children.iter().rev() {\n                self.stack.push((child, new_depth));\n            }\n        }\n\n        Some((node, depth))\n    }\n}\n\npub struct TreeView {\n    width: usize,\n    height: usize,\n    dir: String,\n    pub upd: bool,\n    root: TreeNode,\n\n    selected: usize,\n    x: usize,\n    moving: bool,\n    /// Color for tree dir.\n    dir_color: Color,\n    /// Color for tree dir.\n    file_color: Color,\n\n    active_file: String,\n    /// Color for active file.\n    active_file_color: Color,\n\n    search: FileSearch,\n}\n\nimpl TreeView {\n    pub fn new(dir:String) -> Self {\n        let name = if dir == \".\"  || dir == \"./\" {\n            utils::current_directory_name().unwrap() \n        } else { dir.to_string() };\n\n        let mut root = TreeNode {\n            name,\n            fullpath: utils::abs_file(&dir), \n            is_file: false,\n            children: None,\n\n        };\n\n        root.expand();\n\n        Self { width: 25, height: 30, dir, upd: true, root, selected:0, x: 0,\n            moving: false, dir_color: Color::Reset, file_color: Color::Reset,\n            active_file: String::new(), active_file_color: Color::Reset,\n            search: FileSearch::new(),\n        }\n    }\n\n    pub fn set_width(&mut self, width: usize) { self.width = width; self.upd = true; }\n    pub fn set_height(&mut self, height: usize) { self.height = height; self.upd = true; }\n    pub fn set_dir_color(&mut self, c: Color) { self.dir_color = c; self.upd = true; }\n    pub fn set_file_color(&mut self, c: Color) { self.file_color = c; self.upd = true; }\n    pub fn set_active_file_color(&mut self, c: Color) { self.active_file_color = c; self.upd = true; }\n    pub fn set_moving(&mut self, m: bool) { self.moving = m; self.upd = true; }\n    pub fn set_selected(&mut self, i: usize) { self.selected = i + self.x; self.upd = true; }\n    pub fn is_moving(&mut self) -> bool { self.moving }\n    pub fn is_search(&mut self) -> bool { self.search.active }\n\n    pub(crate) fn handle_up(&mut self) {\n        if self.selected == 0 { return; }\n        self.selected -= 1;\n        self.upd = true;\n    }\n    pub(crate) fn handle_down(&mut self) {\n        if self.selected >= self.root.len() { \n            return; \n        }\n        self.selected += 1;\n        self.upd = true;\n    }\n\n    pub fn scroll_down(&mut self) {\n        if self.x + self.height > self.root.len() { \n            return; \n        }\n\n        self.x += 1;\n        self.upd = true;\n    }\n    pub fn scroll_up(&mut self) {\n        if self.x == 0 { return; }\n\n        self.x -= 1;\n        self.upd = true;\n    }\n\n    pub fn expand_root(&mut self) {\n        let root = &mut self.root;\n        root.expand();\n\n    }\n\n    pub fn filter_files_by_pattern(&mut self, pattern: &str) {\n        let root = &mut self.root;\n        root.expand();\n        root.filter_files_mutate(pattern);\n\n        let mut index = 0;\n        Self::find_first_file_index(root, &mut index);\n        self.selected = index;\n    }\n\n\n    pub fn draw(&mut self) {\n        if !self.upd { return; }\n        if self.width == 0 { return; }\n\n        let mut stdout = std::io::stdout();\n\n        let padding_left = 1;\n\n        let iter = TreeNodeIterator::new(&self.root);\n        let iter = iter.skip(self.x).take(self.height);\n        let mut count = 0;\n\n        queue!(stdout, cursor::Hide);\n\n        for (i, (node, depth)) in iter.enumerate() {\n            // if i > self.height { break; }\n\n            queue!(stdout, cursor::MoveTo(0, i as u16));\n\n            let mut col = 0; \n\n            let mut color = if node.is_file { \n                if node.fullpath.eq(&self.active_file) { self.active_file_color } \n                else { self.file_color }\n            } else { self.dir_color };\n\n            if self.selected == i+ self.x { color = self.active_file_color }\n\n            for i in 0..padding_left {\n                if col >= self.width-1 { break; }\n                queue!(stdout, Print(' '));\n                col += 1;\n            }\n            for i in 0..depth {\n                if col >= self.width-1 { break; }\n                queue!(stdout, Print(' '));\n                col += 1;\n            }\n            for ch in node.name.chars().take(self.width-padding_left-depth-1) {\n                if col >= self.width-1 { break; }\n                queue!(stdout, FColor(color), Print(ch));\n                col += 1;\n            }\n            \n            if col < self.width {\n                for i in 0..self.width-col-1 {\n                    queue!(stdout, Print(' '));\n                }\n            }\n            queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n\n            count += 1;\n        }\n\n        while count < self.height { // fill empty space\n            queue!(stdout, cursor::MoveTo(0, count as u16));\n            queue!(stdout, Print(\" \".repeat(self.width-1)));\n            queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n            count += 1;\n        }\n\n        self.draw_search();\n\n        self.upd = false;\n    }\n\n    pub fn draw_search(&self) {\n        if !self.search.active || self.width == 0 { return }\n\n        let mut stdout = std::io::stdout();\n        let prefix = \" search: \";\n        let search = format!(\"{}{}\", prefix, self.search.pattern.to_string());\n        if search.len() >= self.width { return; } // not enought space\n        queue!(stdout,cursor::Show, cursor::MoveTo(0, (self.height -1) as u16));\n        queue!(stdout, Print(&search));\n        queue!(stdout, Print(\" \".repeat(self.width-search.len()-1)));\n        queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n        queue!(stdout, cursor::MoveTo((prefix.len() + self.search.index) as u16, (self.height -1) as u16));\n        // stdout.flush();\n    }\n    pub fn print(&self) {\n        self.print_node(&self.root, 0, &mut 0);\n    }\n\n    fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n        println!(\"{}{}: {}\", \" \".repeat(depth), count, node.name);\n\n        // Recursively print children\n        if let Some(children) = &node.children {\n            for child in children {\n                *count += 1;\n                self.print_node(child, depth + 1, count);\n            }\n        }\n    }\n\n\n    pub fn find<'a>(&'a mut self, index: usize) -> Option<&'a mut TreeNode> {\n        let mut count = 0;\n        let root = &mut self.root;\n        let maybe_node = Self::find_by_index(root, index + self.x, &mut count);\n        maybe_node\n    }\n    \n    pub fn get_selected<'a>(&'a mut self) -> Option<&'a mut TreeNode> {\n        let mut count = 0;\n        let root = &mut self.root;\n        let maybe_node = Self::find_by_index(root, self.selected, &mut count);\n        maybe_node\n    }\n\n    pub fn find_and_expand(&mut self, index: usize) {\n        let mut count = 0;\n        let root = &mut self.root;\n        let maybe_node = Self::find_by_index(root, index, &mut count);\n        maybe_node.map(|node| node.expand());\n    }\n\n    pub fn find_expand_by_fullpath(&mut self, fullpath: &str) {\n        let root = &mut self.root;\n        Self::find_by_fullpath_and_expand(root, fullpath);\n    }\n\n    pub fn find_and_toggle(&mut self, index: usize) {\n        let mut count = 0;\n        let root = &mut self.root;\n        let maybe_node = Self::find_by_index(root, index, &mut count);\n        maybe_node.map(|node| node.toggle());\n    }\n\n    fn find_by_index<'a>(node: &'a mut TreeNode, index: usize, count: &mut usize) -> Option<&'a mut TreeNode>{\n        if *count == index {\n            // println!(\"Found {}: {}\", index, node.name);\n            // node.expand();\n            return Some(node);\n        }\n\n        // Recursively search children\n        if let Some(children) = &mut node.children {\n            for child in children {\n                *count += 1;\n                let found_child = Self::find_by_index(child, index, count);\n                if found_child.is_some() { return found_child;}\n            }\n        }\n        None\n    }\n    \n    fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n        if *count == index {\n            // println!(\"Found {}: {}\", index, node.name);\n            node.expand();\n            return true;\n        }\n\n        // Recursively search children\n        if let Some(children) = &mut node.children {\n            for child in children {\n                *count += 1;\n                let found = Self::find_by_index_expand(child, index, count);\n                if found { return true; }\n            }\n        }\n        return false;\n    }\n\n    fn find_first_file_index(node: &mut TreeNode, index: &mut usize) -> bool {\n        if node.is_file {\n            // println!(\"Found {}: {}\", node.name, index);\n            node.expand();\n            return true;\n        }\n\n        // Recursively search children\n        if let Some(children) = &mut node.children {\n            for child in children {\n                *index += 1;\n                let found = Self::find_first_file_index(child, index);\n                if found { return true; }\n            }\n        }\n        return false;\n    }\n\n    pub fn find_by_fullpath_and_expand(node: &mut TreeNode, fullpath: &str) -> bool {\n        if fullpath.starts_with(&node.fullpath) {\n            node.expand();\n        }\n        // Recursively search children\n        if let Some(children) = &mut node.children {\n            for child in children {\n                if fullpath.starts_with(&child.fullpath) {\n                    child.expand();\n                    // return true;\n                }\n                let found = Self::find_by_fullpath_and_expand(child, fullpath);\n                if found {\n                    // node.expand();\n                    return true;\n                }\n            }\n        }\n        false\n    }\n\n    pub fn set_active(&mut self, fullpath: String) {\n        self.active_file = fullpath;\n        // todo: expand all nodes\n    }\n    \n    pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n       match e {\n            crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n                match kind {\n                    crossterm::event::MouseEventKind::ScrollUp => self.scroll_up(),\n                    crossterm::event::MouseEventKind::ScrollDown => self.scroll_down(),\n                    crossterm::event::MouseEventKind::Down(button) => {}\n                    _ => {}\n                        \n                }\n            }\n            _ => {}\n       }\n    }\n\n    pub fn insert_filter_char(&mut self, c: char) {\n        self.search.active = true;\n        self.search.pattern.insert_char(self.search.index, c);\n        self.search.index += 1;\n\n        self.filter_files_by_pattern(&self.search.pattern.to_string());\n        self.upd = true;\n    }\n\n    pub fn remove_filter_char(&mut self) {\n        if self.search.index > 0 {\n            self.search.index -= 1;\n            let x = self.search.index;\n            self.search.active = true;\n            self.search.pattern.remove(x..x+1);\n\n            let pattern = self.search.pattern.to_string();\n            if pattern.is_empty() {\n                self.expand_root();\n            } else {\n                self.filter_files_by_pattern(&pattern);\n            }\n\n            self.upd = true;\n        }\n    }\n\n    pub fn handle_left(&mut self) {\n        if self.search.index > 0 {\n            self.search.index -= 1;\n            self.upd = true;\n        };\n    }\n\n    pub fn handle_right(&mut self) {\n        if self.search.index < self.search.pattern.len_chars() {\n            self.search.index += 1;\n            self.upd = true;\n        };\n    }\n    pub fn clear_search(&mut self) {\n        self.search = FileSearch::new();\n        self.upd = true;\n        self.expand_root();\n    }\n}\n\nfn list_files_and_directories(path: &str) -> io::Result<Vec<String>> {\n    let entries = fs::read_dir(path)?;\n    let mut names = Vec::new();\n\n    for entry in entries {\n        let file_name = entry?.file_name().into_string().unwrap();\n        names.push(file_name);\n    }\n\n    Ok(names)\n}\n\n#[cfg(test)]\nmod tree_tests {\n    use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    use crate::tree::TreeView;\n\n    #[test]\n    fn test_list_files_and_directories() {\n        match list_files_and_directories(\".\") {\n            Ok(names) => {\n                for name in names {\n                    println!(\"{}\", name);\n                }\n            }\n            Err(err) => eprintln!(\"Error: {}\", err),\n        }\n    }\n\n    #[test]\n    fn test_load() {\n        let root = \".\".to_string();\n        let mut tree = TreeView::new(root);\n\n        tree.expand_root();\n        tree.print();\n\n        println!(\"find 5\");\n        let maybe_node = tree.find(5);\n        maybe_node.map(|node| node.print());\n        \n        println!(\"expanding 5\");\n        tree.find_and_expand(5);\n    \n        tree.print();\n    }\n\n    #[test]\n    fn test_expand_search() {\n        let root = \".\".to_string();\n        let mut tree = TreeView::new(root);\n\n        // tree.load_root();\n        // tree.print();\n\n        println!(\"find rs\");\n\n        tree.filter_files_by_pattern(\"rs\");\n    \n        tree.print();\n\n        // println!(\"find 16\");\n        // let maybe_node = tree.find(16);\n        // maybe_node.map(|node| node.print());\n    }\n\n\n\n    #[test]\n    fn test_iter() {\n        // let root_node = TreeNode {\n        //     name: \"Root\".to_string(),\n        //     fullpath: \"/path/to/root\".to_string(),\n        //     is_file: false,\n        //     children: Some(vec![\n        //         TreeNode {\n        //             name: \"Child1\".to_string(),\n        //             fullpath: \"/path/to/root/child1\".to_string(),\n        //             is_file: true,\n        //             children: None,\n        //         },\n        //         TreeNode {\n        //             name: \"Child2\".to_string(),\n        //             fullpath: \"/path/to/root/child2\".to_string(),\n        //             is_file: false,\n        //             children: Some(vec![\n        //                 TreeNode {\n        //                     name: \"Grandchild1\".to_string(),\n        //                     fullpath: \"/path/to/root/child2/grandchild1\".to_string(),\n        //                     is_file: true,\n        //                     children: None,\n        //                 },\n        //             ]),\n        //         },\n        //     ]),\n        //     file_search: FileSearch {},\n        // };\n        //\n        //\n        // for (node, depth) in TreeNodeIterator::new(&root_node).take(2) {\n        //     println!(\"take depth: {}, Name: {}, Fullpath: {}, Is File: {}\", depth, node.name, node.fullpath, node.is_file);\n        // }\n        //\n        // for (node, depth) in TreeNodeIterator::new(&root_node).skip(2) {\n        //     println!(\"skip depth: {}, Name: {}, Fullpath: {}, Is File: {}\", depth, node.name, node.fullpath, node.is_file);\n        // }\n    }\n}\n\n\n#[derive(Debug)]\npub struct FileSearch {\n    pub active: bool,\n    pub pattern: ropey::Rope,\n    pub index:usize,\n}\n\nimpl FileSearch {\n    pub fn new() -> Self {\n        Self {\n            active: false,\n            pattern: ropey::Rope::new(),\n            index: 0,\n        }\n    }\n}","uri":"file://./src/tree.rs","version":0}}}
[2024-11-18 20:16:08.648] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"use std::cmp::Ordering;\nuse std::collections::{HashMap, HashSet};\nuse std::io::{stdout, Write};\nuse std::path::Path;\nuse std::time::Instant;\nuse std::{fs, time};\nuse log2::debug;\n\nuse crossterm::event::{\n    DisableMouseCapture, EnableMouseCapture, Event, EventStream, KeyCode, KeyEvent, KeyModifiers,\n    MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n};\nuse crossterm::style::Print;\nuse crossterm::terminal::{\n    disable_raw_mode, enable_raw_mode, ClearType, EnterAlternateScreen, LeaveAlternateScreen,\n};\nuse crossterm::{\n    cursor,\n    cursor::position,\n    event, execute, queue,\n    style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor},\n    terminal,\n};\n\nuse futures::{future::FutureExt, select, StreamExt};\n\nuse crate::code::{Code, NodePath, Runnable};\nuse crate::config::Config;\nuse crate::search::search::FileSearchResult;\nuse crate::search::{Search, SearchResult};\nuse crate::lsp::{self, Lsp};\nuse crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n\nuse crate::process::Process;\nuse crate::selection::Selection;\nuse crate::utils::{CursorHistory, CursorPosition};\nuse crate::{search, utils};\nuse crate::tree;\n\nuse tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\nuse tokio::process::{Child, Command};\nuse tokio::sync::mpsc::Receiver;\nuse tokio::sync::Mutex;\n\nuse std::sync::Arc;\n\nuse copypasta::{ClipboardContext, ClipboardProvider};\n\n/// Represents a text editor.\npub struct Editor {\n    /// Config from config.toml.\n    config: Config,\n    /// Text buffer to display.\n    code: Code,\n    /// Terminal height.\n    height: usize,\n    /// Terminal width.\n    width: usize,\n\n    /// Cursor row.\n    r: usize,\n    /// Cursor column.\n    c: usize,\n    /// Cursor row offset.\n    x: usize,\n    /// Cursor column offset.\n    y: usize,\n\n    /// Left panel width\n    lp_width: usize,\n    /// Line number width.\n    ln_width: usize,\n    /// Line number to text space.\n    lns_width: usize,\n\n    /// Update screen flag.\n    upd: bool,\n    upd_next: bool,\n\n    /// Theme for syntax highlighting and etc\n    theme: HashMap<String, String>,\n\n    /// Color for line number.\n    lncolor: Color,\n    /// Color for status line.\n    scolor: Color,\n    /// Color for selection.\n    selcolor: Color,\n    /// Color for errors.\n    ecolor: Color,\n\n    /// Mouse selection range.\n    selection: Selection,\n\n    /// process\n    process: Process,\n\n    /// lsp servers for a language\n    lang2lsp: HashMap<String,Arc<Mutex<Lsp>>>,\n    lsp_status: Arc<Mutex<String>>,\n\n    /// diagnostics or errors to inline display\n    diagnostics: Arc<Mutex<HashMap<String, DiagnosticParams>>>,\n    diagnostics_sender: Option<tokio::sync::mpsc::Sender<DiagnosticParams>>,\n\n    /// tree view\n    tree_view: tree::TreeView,\n\n    /// opened text buffers\n    codes: HashMap<String, Code>,\n\n    /// search\n    search: Search,\n\n    overlay_lines: HashSet<usize>,\n\n    /// cursor position between files switches and mouse clicks\n    cursor_history: CursorHistory,\n    cursor_history_undo: CursorHistory,\n\n    is_lp_focused: bool,\n\n    node_path: Option<NodePath>,\n}\n\nimpl Editor {\n    pub fn new(dir: String, config: Config) -> Self {\n        Editor {\n            config,\n            code: Code::new(),\n            height: 0,\n            width: 0,\n            ln_width: 5,\n            lns_width: 5,\n            r: 0, c: 0, x: 0, y: 0,\n            lncolor: Color::Reset,\n            scolor: Color::Reset,\n            selcolor: Color::Reset,\n            ecolor: Color::Reset,\n            upd: true,\n            upd_next: false,\n            theme: HashMap::new(),\n            selection: Selection::new(),\n            process: Process::new(),\n            lang2lsp: HashMap::new(),\n            lsp_status: Arc::new(Mutex::new(String::new())),\n            diagnostics: Arc::new(Mutex::new(HashMap::new())),\n            diagnostics_sender: None,\n            tree_view: tree::TreeView::new(\".\".to_string()),\n            lp_width: 0,\n            codes: HashMap::new(),\n            search:Search::new(),\n            overlay_lines: HashSet::new(),\n            cursor_history: CursorHistory::new(),\n            cursor_history_undo: CursorHistory::new(),\n            is_lp_focused: false,\n            node_path: None,\n        }\n    }\n\n    pub fn load_file(&mut self, fname: &str) {\n        let buf = Code::from_file(&fname, &self.config);\n\n        match buf {\n            Ok(code) => {\n                self.code = code;\n                self.r = 0; self.c = 0; self.y = 0; self.x = 0;\n                self.selection.clean();\n            }\n            Err(e) => {},\n        }\n    }\n\n    pub fn open_left_panel(&mut self) {\n        self.lp_width = self.config.left_panel_width.unwrap_or(25);\n        self.is_lp_focused = true;\n    }\n    pub fn close_left_panel(&mut self) {\n        self.lp_width = 0;\n    }\n    pub fn left_panel_toggle(&mut self) {\n        if self.lp_width > 0 { self.lp_width = 0; }\n        else { self.lp_width = self.config.left_panel_width.unwrap_or(25); }\n\n        self.tree_view.set_width(self.lp_width);\n    }\n\n    pub fn init(&mut self) {\n        execute!(stdout(), EnterAlternateScreen).expect(\"Could not EnterAlternateScreen\");\n        execute!(stdout(), EnableMouseCapture).expect(\"Could not EnableMouseCapture\");\n        enable_raw_mode().expect(\"Could not turn on Raw mode\");\n        execute!(stdout(), cursor::Hide).expect(\"Could not hide cursor\");\n        stdout().flush().expect(\"Could not flush\");\n        let (w, h) = terminal::size().expect(\"Could not get screen size\");\n        self.resize(w as usize, h as usize);\n        self.tree_view.set_width(self.lp_width);\n\n        self.configure_theme();\n    }\n\n    pub fn deinit() {\n        disable_raw_mode().expect(\"Unable to disable_raw_mode\");\n        execute!(stdout(), LeaveAlternateScreen).expect(\"Unable to LeaveAlternateScreen\");\n        execute!(stdout(), DisableMouseCapture).expect(\"Unable DisableMouseCapture\");\n        queue!(stdout(), cursor::Show).expect(\"Unable to show cursor\");\n    }\n\n    pub fn handle_panic(&self) {\n        let default_panic = std::panic::take_hook();\n        std::panic::set_hook(Box::new(move |info| {\n            Self::deinit();\n            default_panic(info);\n            std::process::exit(1);\n        }));\n\n        ctrlc::set_handler(move || {\n            Self::deinit();\n        })\n        .expect(\"Error setting Ctrl-C handler\");\n    }\n\n    fn configure_theme(&mut self) {\n        let theme_path = &self.config.theme;\n        let path = Path::new(theme_path);\n\n        let theme_path = if path.is_absolute() {\n           path.to_string_lossy().to_string()\n        } else {\n            let red_home = std::env::var(\"RED_HOME\").unwrap_or(\"./\".to_string());\n            Path::new(&red_home).join(theme_path).to_string_lossy().to_string()\n        };\n\n        let theme_content = fs::read_to_string(theme_path).expect(\"Failed to read theme path file\");\n        let theme_yaml = serde_yaml::from_str(&theme_content).expect(\"Failed to parse theme yaml file \");\n        self.theme = utils::yaml_to_map(theme_yaml);\n\n        self.lncolor = self.theme.get(\"lncolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::AnsiValue(247));\n        self.scolor = self.theme.get(\"scolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::AnsiValue(247));\n        self.selcolor = self.theme.get(\"selcolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::AnsiValue(247));\n        self.ecolor = self.theme.get(\"ecolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::AnsiValue(247));\n\n        let dircolor = self.theme.get(\"dircolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::Reset);\n        self.tree_view.set_dir_color(dircolor);\n        let filecolor = self.theme.get(\"filecolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::Reset);\n        self.tree_view.set_file_color(filecolor);\n        let activefilecolor = self.theme.get(\"activefilecolor\").map(|c| utils::hex_to_color(c)).unwrap_or(Color::Reset);\n        self.tree_view.set_active_file_color(activefilecolor);\n    }\n\n    pub async fn start(&mut self) {\n        self.init();\n\n        self.draw().await;\n\n        let (diagnostic_send, mut diagnostic_recv) = tokio::sync::mpsc::channel::<DiagnosticParams>(1);\n        self.diagnostics_sender = Some(diagnostic_send.clone());\n\n        self.init_new_lsp();\n\n        let mut reader = EventStream::new();\n\n        loop {\n            let event = reader.next().fuse();\n\n            tokio::select! {\n                Some(upd) = diagnostic_recv.recv() => {\n                    let filename = upd.uri.clone();\n                    self.diagnostics.lock().await.insert(filename, upd);\n                    self.upd = true;\n                    self.draw().await;\n                }\n\n                maybe_event = event => {\n                    match maybe_event {\n                        Some(Ok(event)) => {\n                            // println!(\"Event::{:?}\\r\", event);\n\n                            match event {\n                                Event::Resize(w, h) => {\n                                    self.resize(w as usize, h as usize);\n                                    self.draw().await;\n                                }\n                                Event::Mouse(e) => {\n                                    self.handle_mouse(e).await;\n                                    self.draw().await;\n                                }\n                                Event::Key(e) => {\n                                    if self.is_quit(e) { break }\n\n                                    #[cfg(target_os = \"windows\")] { // skip press event on windows\n                                        if e.kind == KeyEventKind::Press { continue; }\n                                    };\n                                    self.handle_keyboard(e).await;\n\n                                    self.draw().await;\n                                    if self.upd_next {\n                                        self.upd = true;\n                                        self.upd_next = false;\n                                    }\n                                }\n                                Event::FocusGained => {}\n                                Event::FocusLost => {}\n                                Event::Paste(_) => {}\n                            }\n                        }\n                        Some(Err(e)) => { /* println!(\"Error: {:?}\\r\", e) */ } ,\n                        None => break,\n                    }\n                }\n            };\n        }\n    }\n\n    fn is_quit(&self, e: KeyEvent) -> bool {\n        e.modifiers == KeyModifiers::CONTROL && e.code == KeyCode::Char('q')\n    }\n\n    fn resize(&mut self, w: usize, h: usize) {\n        if w != self.width {\n            self.width = w;\n        }\n        if h != self.height {\n            self.height = h;\n        }\n        self.upd = true;\n        self.process.update_true();\n\n        self.tree_view.set_height(self.height);\n    }\n\n    async fn handle_keyboard(&mut self, event: KeyEvent) {\n\n        if self.is_lp_focused {\n            self.handle_left_panel(event).await;\n            return;\n        }\n\n        if event.modifiers.contains(KeyModifiers::CONTROL | KeyModifiers::SHIFT) {\n            if event.code == KeyCode::Up {\n                self.move_line_up().await;\n            }\n            if event.code == KeyCode::Down {\n                self.move_line_down().await;\n            }\n            \n            return;\n        }\n\n        match event.modifiers {\n            KeyModifiers::ALT => {\n                let code = event.code;\n                match code {\n                    KeyCode::Up => {\n                        self.select_more();\n                    }\n                    KeyCode::Down => {\n                        self.select_less();\n                    }\n                    // option + arrow left\n                    KeyCode::Left =>  {\n                        // scroll horizontal\n                        // if self.x > 0 { self.x -= 1 }\n                        let line = self.code.line_at(self.r);\n                        if line.is_none() { return; }\n                        let line = line.unwrap();\n                        let next = utils::find_prev_word(line, self.c-1);\n                        self.c = next;\n                    },\n                    // option + arrow right\n                    KeyCode::Right => {\n                        // scroll horizontal\n                        // self.x += 1\n\n                        let line = self.code.line_at(self.r);\n                        if line.is_none() { return; }\n                        let line = line.unwrap();\n                        let next = utils::find_next_word(line, self.c+1);\n                        self.c = next;\n                    },\n                    KeyCode::Backspace => self.handle_cut_line().await,\n\n                    _ => debug!(\"event.code {:?}\", event.code),\n                }\n                self.upd = true;\n                return;\n            }\n\n            KeyModifiers::CONTROL => {\n                match event.code {\n                    KeyCode::Char('s') => self.save(),\n                    KeyCode::Char('c') => self.copy_to_clipboard(),\n                    KeyCode::Char('v') => self.paste_from_clipboard().await,\n                    KeyCode::Char('d') => self.handle_duplicate().await,\n                    KeyCode::Char('f') => self.local_search().await,\n                    KeyCode::Char('r') => self.references().await,\n                    KeyCode::Char('g') => self.definition().await,\n                    KeyCode::Char('z') => self.undo().await,\n                    KeyCode::Char('o') => self.undo_cursor().await,\n                    KeyCode::Char('p') => self.redo_cursor().await,\n                    KeyCode::Char('g') => {\n                        self.global_search().await;\n                        self.overlay_lines.clear();\n                    },\n                    KeyCode::Char('e') => self.handle_errors().await,\n                    KeyCode::Char('h') => self.hover().await,\n                    KeyCode::Char('t') => {\n                        if self.lp_width == 0 { self.is_lp_focused = true; self.left_panel_toggle(); }\n                        else {\n                            if !self.is_lp_focused {\n                                self.is_lp_focused = true;\n                            } else {\n                                self.is_lp_focused = false;\n                                self.left_panel_toggle();\n                            }\n                        }\n\n\n                        self.tree_view.upd = true;\n                        self.upd = true;\n                    }\n                    KeyCode::Char('x') => {\n                        self.copy_to_clipboard();\n                        self.handle_cut().await;\n                    }\n                    KeyCode::Char(' ') => {\n                        self.lsp_completion().await;\n                    }\n                    _ => {}\n                }\n\n                return;\n            }\n\n            KeyModifiers::SHIFT => match event.code {\n                KeyCode::Char(_) => {}\n                _ => {\n                    if !self.selection.active && !self.selection.keep_once {\n                        self.selection.set_start(self.r, self.c);\n                    }\n\n                    match event.code {\n                        KeyCode::Up => self.handle_up(),\n                        KeyCode::Down => self.handle_down(),\n                        KeyCode::Left => self.handle_left(),\n                        KeyCode::Right => self.handle_right(),\n                        _ => {}\n                    }\n\n                    self.selection.set_end(self.r, self.c);\n                    self.selection.active = true;\n                    self.upd = true;\n                    return;\n                }\n            },\n\n            _ => {}\n        }\n\n\n        match event.code {\n            KeyCode::Up => self.handle_up(),\n            KeyCode::Down => self.handle_down(),\n            KeyCode::Left => self.handle_left(),\n            KeyCode::Right => self.handle_right(),\n            KeyCode::Enter => self.handle_enter().await,\n            KeyCode::Backspace => self.handle_delete().await,\n            KeyCode::Char('÷') => self.comment_line().await,\n            KeyCode::Char(c) => self.insert_char(c).await,\n            KeyCode::Tab => self.insert_tab().await,\n            _ => {\n                debug!(\"event.code {:?}\", event.code);\n            }\n        }\n\n\n        if self.selection.active || self.selection.keep_once  {\n            self.selection.clean();\n            self.selection.keep_once = false;\n            self.upd = true;\n        }\n    }\n\n\n    async fn handle_left_panel(&mut self, event: KeyEvent) {\n        match event.modifiers {\n            KeyModifiers::CONTROL => {\n                if event.code == KeyCode::Char('t') {\n                    // close left panel \n                    self.is_lp_focused = false;\n                    self.left_panel_toggle();\n                    self.tree_view.upd = true;\n                    self.upd = true;\n                }\n                return;\n            }\n            KeyModifiers::NONE => {\n\n            },\n            _ => {\n                return;\n            },\n        }\n\n\n        match event.code {\n            KeyCode::Up => self.tree_view.handle_up(),\n            KeyCode::Down => self.tree_view.handle_down(),\n            KeyCode::Left => self.tree_view.handle_left(),\n            KeyCode::Right => self.tree_view.handle_right(),\n            KeyCode::Esc => {\n                self.tree_view.clear_search();\n            }\n            KeyCode::Backspace => {\n                self.tree_view.remove_filter_char();\n            },\n            KeyCode::Char(c) => {\n                self.tree_view.insert_filter_char(c);\n            }\n            KeyCode::Enter => {\n                match self.tree_view.get_selected() {\n                    None => {}, Some(node) => {\n                        if node.is_file() {\n                            let path = node.fullpath();\n                            self.cursor_history.push(CursorPosition{\n                                filename: self.code.abs_path.clone(),\n                                row: self.r, col: self.c, y: self.y, x: self.x,\n                            });\n                            self.tree_view.set_active(path.clone());\n                            self.tree_view.clear_search();\n                            self.tree_view.find_expand_by_fullpath(&path);\n                            self.open_file(&path).await;\n                            self.is_lp_focused = false;\n                        }\n                        else {\n                            node.toggle();\n                        }\n\n                        self.upd = true;\n                        self.tree_view.upd = true;\n                    }\n                }\n            },\n            _ => {\n                debug!(\"event.code {:?}\", event.code);\n            }\n        }\n    }\n    \n    async fn open_file(&mut self, path: &String) {\n        if !self.codes.contains_key(path) { // move self.code code to codes buffer\n\n            self.code.set_cursor_position(\n                self.r.clone(), self.c.clone(), self.y.clone(), self.x.clone()\n            );\n\n            let current_code = std::mem::replace(&mut self.code, Code::new());\n\n            self.codes.insert(current_code.abs_path.clone(), current_code);\n            self.load_file(path);\n\n            let lang = self.code.lang.clone();\n            let lsp = self.lang2lsp.get(&lang);\n            match lsp {\n                Some(lsp) => {\n                    let mut lsp = lsp.lock().await;\n                    let file_content = self.code.text.to_string();\n                    lsp.did_open(&self.code.lang, &path, &file_content);\n                },\n                None => {\n                    self.init_new_lsp();\n                },\n            }\n\n        } else {  // move from codes buffer to self.code\n\n            let mut code = self.codes.remove(path).unwrap();\n            let (r,c,y,x) = code.get_cursor_position();\n\n            self.code.set_cursor_position(\n                self.r.clone(), self.c.clone(), self.y.clone(), self.x.clone()\n            );\n\n            let oldcode = std::mem::replace(&mut self.code, code);\n            self.codes.insert(oldcode.abs_path.clone(), oldcode);\n            self.r = r; self.c = c; self.y = y; self.x = x;\n        }\n    }\n\n    async fn handle_mouse(&mut self, e: MouseEvent) {\n        match e {\n            MouseEvent { row, column, kind, modifiers } => {\n                self.is_lp_focused = (column as usize) < self.lp_width;\n\n                match (modifiers, kind) {\n                    (KeyModifiers::CONTROL, MouseEventKind::Up(_)) => {\n                        self.handle_mouse_click(row as usize, column as usize);\n                        self.definition().await;\n                        return;\n                    },\n                    (KeyModifiers::ALT, MouseEventKind::Up(_)) => {\n                        self.handle_mouse_click(row as usize, column as usize);\n                        self.references().await;\n                        return;\n                    },\n                    _ => {}\n                }\n\n                match kind {\n                    MouseEventKind::Down(button) => match button {\n                        MouseButton::Left => {\n                            let rrow = row as usize;\n                            let ccol = column as usize;\n\n                            if rrow == self.height-1 && (\n                                (ccol == self.width - 9) ||\n                                (ccol == self.width - 7) ||\n                                (ccol == self.width - 5) ||\n                                (ccol == self.width - 3) ||\n                                (ccol == self.width - 1) \n                            ) { \n                                // button clicked\n                                return; \n                            }\n\n                            if self.lp_width + self.ln_width < ccol &&\n                                ccol < self.lp_width + self.ln_width + self.lns_width - 1 {\n                                // clicked on run button column\n\n                                return;\n                            }\n\n                            if (column as usize) + 1 == self.lp_width {\n                                self.tree_view.set_moving(true);\n                                self.upd = true;\n                                return;\n                            }\n\n                            if self.is_lp_focused {\n                                let maybe_node = self.tree_view.find(row as usize);\n\n                                match maybe_node {\n                                    Some(node) => {\n                                        if node.is_file() {\n                                            let path = node.fullpath();\n                                            self.cursor_history.push(CursorPosition{\n                                                filename: self.code.abs_path.clone(),\n                                                row: self.r, col: self.c, y: self.y, x: self.x,\n                                            });\n                                            self.tree_view.set_active(path.clone());\n                                            self.open_file(&path).await\n                                        }\n                                        else {\n                                            node.toggle();\n                                        }\n\n                                        self.tree_view.set_selected(row as usize);\n                                        self.upd = true;\n                                        self.tree_view.upd = true;\n                                    },\n                                    None => {},\n                                }\n                                return;\n                            }\n\n                            if self.code.file_name.is_empty() { return }\n\n                            let (prev_r, prev_c) = (self.r.clone(), self.c.clone());\n\n                            self.handle_mouse_click(row as usize, column as usize);\n\n                            if !self.selection.empty() {\n                                self.selection.clean();\n                                self.selection.set_start(self.r, self.c);\n                                self.upd = true;\n                            } else {\n                                self.selection.set_start(self.r, self.c);\n                                self.selection.active = true;\n                                self.selection.keep_once = true;\n                            }\n\n                            if prev_r == self.r && prev_c == self.c && self.selection.empty() {\n                                // double click\n                                let line = self.code.line_at(self.r);\n                                if line.is_none() { return; }\n                                let line = line.unwrap();\n\n                                let prev = utils::find_prev_word(line, self.c);\n                                let next = utils::find_next_word(line, self.c);\n\n                                if prev < self.c && self.c < next { // not first and last symbol\n                                    self.selection.set_start(self.r, prev);\n                                    self.selection.set_end(self.r, next);\n                                    self.selection.active = true;\n                                    self.selection.keep_once = true;\n                                    self.upd = true;\n                                }\n                            }\n                        }\n                        MouseButton::Right => {}\n                        MouseButton::Middle => {}\n                    },\n                    MouseEventKind::ScrollDown => {\n                        if (column as usize) < self.lp_width {\n                            self.tree_view.scroll_down();\n                        } else {\n                            self.scroll_down()\n                        }\n                    },\n                    MouseEventKind::ScrollUp => {\n                        if (column as usize) < self.lp_width {\n                            self.tree_view.scroll_up();\n                        } else {\n                            self.scroll_up()\n                        }\n                    },\n                    MouseEventKind::Up(_) => {\n                        let rrow = row as usize;\n                        let ccol = column as usize;\n\n                        if rrow == self.height-1 && ccol == self.width - 9 {\n                            // left panel button clicked\n                            self.left_panel_toggle();\n                            self.tree_view.upd = true;\n                            self.upd = true;\n                            return;\n                        }\n                        if rrow == self.height-1 && ccol == self.width - 7 {\n                            // search button clicked\n                            self.local_search().await;\n                            return;\n                        }\n                        if rrow == self.height-1 && ccol == self.width - 3 {\n                            // last run button clicked\n                            self.process.run_last_tmux();\n                            return;\n                        }\n\n                        let is_runnable_button_clicked = self.lp_width + self.ln_width < ccol &&\n                            ccol < self.lp_width + self.ln_width + self.lns_width - 1;\n\n                        if is_runnable_button_clicked {\n                            match self.code.get_runnable(row as usize + self.y) {\n                                Some(runnable) => self.process.run_tmux(&runnable.cmd),\n                                None => {},\n                            }\n                            return;\n                        }\n\n                        self.cursor_history.push(CursorPosition{\n                            filename: self.code.abs_path.clone(),\n                            row: self.r, col: self.c, y: self.y, x: self.x,\n                        });\n                        self.cursor_history_undo.clear();\n\n\n                        self.tree_view.set_moving(false);\n\n                        if self.selection.active {\n                            self.handle_mouse_click(row as usize, column as usize);\n\n                            if self.selection.empty() {\n                                self.selection.clean();\n                                self.handle_movement();\n                            } else {\n                                self.selection.active = false;\n                                self.selection.keep_once = true;\n                                self.upd = true;\n                            }\n                        }\n                    }\n                    MouseEventKind::Drag(_) => {\n                        if self.tree_view.is_moving() {\n                            if column as usize > self.width - self.ln_width - self.lns_width {\n                                return;\n                            }\n                            self.lp_width = column as usize;\n                            self.tree_view.set_width(column as usize);\n                            self.upd = true;\n                            return;\n                        }\n\n                        self.handle_mouse_click(row as usize, column as usize);\n\n                        self.selection.set_end(self.r, self.c);\n                        self.selection.active = true;\n                        self.selection.keep_once = true;\n                        self.upd = true;\n                    }\n                    _ => {}\n                }\n            }\n        }\n    }\n\n    fn handle_mouse_click(&mut self, row_click: usize, column_click: usize) {\n        self.r = row_click + self.y;\n\n        if self.r > self.code.len_lines() - 1 {  // fit to content\n            self.r = self.code.len_lines() - 1;\n        }\n\n        if column_click < self.lp_width + self.ln_width + self.lns_width + self.x {\n            self.c = 0; // outside of view\n        } else {\n            self.c = self.find_cursor_x_position(column_click - (self.lp_width + self.ln_width + self.lns_width));\n            // self.c -= self.lp_width + self.ln_width + self.lns_width\n            // self.c = column_click - self.lp_width -self.ln_width - self.lns_width + self.x;\n        }\n\n        if self.c > self.code.line_len(self.r) { // fit to content\n            self.c = self.code.line_len(self.r);\n        }\n    }\n\n    fn status_line(&self) -> String {\n        if self.code.file_name.is_empty() {\n            format!(\"  {} {} {} {} {}\",\n                '☰','☌', '', '▶', '⛭'\n            )\n        } else {\n            let changed = if self.code.changed { \"*\" } else { \" \" };\n            format!(\"  {}:{} {} {}{} {} {} {} {} {}\",\n                self.r + 1, self.c + 1, self.code.lang, self.code.file_name, changed,\n                '☰','☌', '', '▶', '⛭'\n            )\n        }\n    }\n\n    fn clear_all(&mut self) {\n        let mut stdout = stdout();\n        queue!(stdout, terminal::Clear(ClearType::All)).unwrap();\n        stdout.flush().expect(\"flush\");\n    }\n\n    /*\n       1. Get colors byte ranges from tree-sitter only for visible text\n       2. Iterate over characters and increment bytes_counter\n       3. Find color range that matches bytes_counter\n       4. Draw each char\n\n       According scrolling performance test:\n       Colorization gives +5% cpu, 10 vs 15 % compared to no colors\n       idea: adding colors to cache will improve performance of colored scrolling\n\n       Filtering by row improves performance a bit, -2%\n    */\n    async fn draw(&mut self) {\n        let start = time::Instant::now();\n\n        if self.code.file_name.is_empty() {\n            queue!(stdout(), cursor::Hide);\n            if self.tree_view.is_search(){ queue!(stdout(), cursor::Show); }\n            self.tree_view.draw();\n            // self.draw_logo();\n            self.draw_status();\n            self.tree_view.draw_search();\n            stdout().flush().expect(\"flush\");\n            return;\n        }\n\n        self.tree_view.draw();\n        self.draw_cursor();\n        self.tree_view.draw_search();\n\n\n        if !self.upd || self.height < 1 { return; } // it will do nothing if upd not marked\n\n\n        let mut stdout = stdout();\n        queue!(stdout, cursor::Hide).unwrap();\n\n\n        let status = self.status_line();\n\n        if self.width < self.lp_width + self.ln_width + self.lns_width + status.chars().count() { return; } // too small\n\n        let colors = self.code.colors(self.y, self.y + self.height, &self.theme);\n\n        let lines = self.code\n            .slice(self.y, self.y + self.height)\n            .lines()\n            .take(self.height);\n\n        let lines_count = lines.len();\n\n        let mut bytes_counter = self.code.line_to_byte(self.y);\n\n        let uri = format!(\"file://{}\", self.code.abs_path.clone());\n\n        let diagnostics = self.diagnostics.clone();\n        let maybe_diagnostics = diagnostics.try_lock().unwrap();\n        let maybe_diagnostics = maybe_diagnostics.get(&uri);\n\n        let start_row = self.y.clone();\n        let end_row = start_row + self.height;\n\n        let line2error = match maybe_diagnostics {\n            Some(d) =>  {\n                d.diagnostics.iter()\n                .filter(|d| d.severity == 1) // errors only\n                .filter(|d| start_row <= d.range.start.line as usize  && d.range.start.line as usize <= end_row)\n                .map(|d| (d.range.start.line as usize, &d.message))\n                .collect::<HashMap<usize, &String>>()\n            },\n            None => HashMap::new(),\n        };\n\n\n        for (row, line) in lines.enumerate() {\n            let rrow = row + self.y;\n\n            queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16)).unwrap();\n\n            let line_number = format!(\"{:width$}\", rrow + 1, width = self.ln_width);\n            let lncolor = if line2error.contains_key(&rrow) { self.ecolor } else { self.lncolor };\n            queue!(stdout, BColor(Color::Reset), FColor(lncolor), Print(line_number));\n\n            let (run_or_empty, run_or_empty_color) = match self.code.is_runnable(rrow) {\n                false => (\" \".repeat(self.lns_width), Color::Reset),\n                true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n            };\n\n            // let (run_or_empty, run_or_empty_color) = (\" \".repeat(self.lns_width), Color::Reset)\n\n            queue!(stdout, BColor(Color::Reset), FColor(run_or_empty_color), Print(run_or_empty));\n            queue!(stdout, BColor(Color::Reset), FColor(Color::Reset));\n\n\n            let filtered_colors: Vec<_> = colors.iter()\n                .filter(|(_, _, start, end, _)| *start <= rrow && rrow <= *end)\n                .collect(); // todo:: add sort by range start and renge len\n\n            let chars = line.chars();\n            let chars_len = line.chars().len();\n            let mut last_fg_color = Color::Reset;\n            let mut last_bg_color = Color::Reset;\n            let mut tabs_offset = 0;\n\n            let is_overlayed = self.overlay_lines.contains(&row);\n\n            for (col, ch) in chars.enumerate() {\n                let outside_left = self.x > col;\n                let outside_right = col >= self.width - self.lp_width - self.ln_width - self.lns_width  + self.x - 1 - tabs_offset;\n\n                if outside_right || ch == '\\n' || outside_left || is_overlayed {\n                    bytes_counter += ch.len_utf8();\n                    continue;\n                }\n\n                let color_range = filtered_colors.iter()\n                    .find(|(start_byte, end_byte, _, _, _)| {\n                        *start_byte <= bytes_counter && bytes_counter < *end_byte\n                    });\n\n                let fg_color = match color_range {\n                    Some((_, _, _, _, color)) => *color,\n                    None => Color::Reset,\n                };\n\n                let bg_color = match self.selection.is_selected(row + self.y, col) {\n                    true => self.selcolor,\n                    false => Color::Reset,\n                };\n\n                let chr = if ch == '\\t' {\n                    let tab_width = self.code.indent_width().unwrap_or(2);\n                    if self.x == 0 { tabs_offset += tab_width; \" \".repeat(tab_width) }\n                    else { \" \".to_string() }\n                } else { ch.to_string() };\n\n                if last_fg_color == fg_color && last_bg_color == bg_color {\n                    queue!(stdout, Print(chr)).unwrap();\n                } else {\n                    queue!(stdout, BColor(bg_color), FColor(fg_color), Print(chr)).unwrap();\n                    last_fg_color = fg_color;\n                    last_bg_color = bg_color;\n                }\n\n                bytes_counter += ch.len_utf8();\n            }\n\n\n            if line2error.contains_key(&rrow) {\n                let error_message = &line2error.get(&rrow).unwrap();\n                self.draw_error(error_message, rrow, row)\n            };\n\n            // if row < self.height -1{\n                queue!(stdout, BColor(Color::Reset), terminal::Clear(ClearType::UntilNewLine)).unwrap();\n                // for some reason status line flickering effect\n            // }\n\n            if is_overlayed { continue; }\n\n            // if row == self.height -1 && status.chars().count() < self.width {\n            //     let x = self.lp_width + self.ln_width + self.lns_width +\n            //          chars_len + line2error.get(&rrow).map(|e|e.len() +3).unwrap_or(0);\n\n            //     let x1 = self.width -1 - status.chars().count();\n            //     for c in x..=x1+1 { // for last line filling empty space manually until statusline\n            //         queue!(stdout, BColor(Color::Reset), Print(' ')).unwrap();\n            //     }\n            // } else {\n            //     queue!(stdout, BColor(Color::Reset), terminal::Clear(ClearType::UntilNewLine)).unwrap();\n            // }\n        }\n\n\n        if lines_count < self.height && status.chars().count() < self.width {\n            // queue!(stdout, terminal::Clear(ClearType::FromCursorDown)).unwrap(); // flickering???\n            // fill empty space\n            for row in lines_count..self.height {\n                queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16));\n                queue!(stdout, BColor(Color::Reset), terminal::Clear(ClearType::UntilNewLine)).unwrap();\n            }\n\n            queue!(stdout, cursor::MoveTo(self.lp_width as u16, self.height as u16));\n            for c in self.lp_width..self.width-status.chars().count()-1 {\n                queue!(stdout, Print(' ')).unwrap();\n            }\n        }\n\n        self.draw_status();\n        self.draw_cursor();\n\n        self.tree_view.draw_search();\n\n        stdout.flush().expect(\"flush\");\n\n        // let elapsed = time::Instant::now() - start;\n        // let ttr = format!(\"{:?} ns\", elapsed.as_nanos()); // time to render\n\n        // queue!(\n        //     stdout,\n        //     cursor::MoveTo((self.width - 40) as u16, (self.height) as u16),\n        //     FColor(self.lncolor),\n        //     Print(ttr),\n        // )\n        // .expect(\"Can not draw time to render\");\n        // self.draw_cursor();\n\n        // stdout.flush().expect(\"flush\");\n\n        self.upd = false;\n    }\n\n    fn draw_error(&self, error_message: &String, rrow:usize, row:usize) {\n        let space = 3;\n        let max_x = self.lp_width + self.ln_width + self.lns_width + self.code.line_len(rrow) + space;\n\n        if max_x > self.width { return; }\n\n        queue!(stdout(), Print(\" \".repeat(space)));\n\n        let limit = self.width - max_x;\n\n        let m: String = error_message.chars()\n            .map(|ch| if ch == '\\n' { ' ' } else { ch })\n            .take(limit).collect();\n\n        queue!(stdout(),\n            cursor::MoveTo(max_x as u16, row as u16),\n            BColor(Color::Reset),\n            FColor(self.ecolor), Print(m)\n        ).unwrap();\n    }\n\n    fn draw_cursor(&mut self) {\n        if !self.cursor_is_focused() { return; }\n        if self.code.file_name.is_empty() { return; }\n\n        let out_left = self.c < self.x;\n        let out_right = self.lp_width + self.ln_width + self.lns_width + self.c - self.x >= self.width;\n        if out_left || out_right {\n            queue!(stdout(), cursor::Hide).expect(\"Can not hide cursor\");\n            return;\n        }\n\n        let cursor_x_pos = if self.x != 0 { // if horizontal scroll, ignore indentation\n            self.c + self.lp_width + self.ln_width + self.lns_width - self.x\n        } else {\n            let tabs_count = self.code.count_tabs(self.r, self.c).unwrap_or(0);\n            let ident_width = self.code.indent_width().unwrap_or(2);\n            let tabs_correction = tabs_count * (ident_width-1);\n            self.c + self.lp_width + self.ln_width + self.lns_width - self.x + tabs_correction\n        };\n\n        let cursor_y_pos = self.r - self.y;\n\n        queue!(\n            stdout(),\n            cursor::MoveTo(cursor_x_pos as u16, cursor_y_pos as u16),\n            FColor(Color::Reset),\n            cursor::Show\n        )\n        .expect(\"Can not show cursor\");\n\n        stdout().flush().expect(\"flush\");\n    }\n\n    fn draw_status(&mut self) {\n        let status = self.status_line();\n        let x = self.width - status.chars().count();\n        let y = self.height - 1;\n\n        queue!(\n            stdout(),\n            cursor::Hide,\n            cursor::MoveTo(x as u16, y as u16),\n            FColor(self.scolor),\n            Print(status)\n        )\n        .expect(\"Can not print status\");\n\n        stdout().flush().expect(\"flush\");\n    }\n\n    fn draw_logo(&mut self) {\n        let logo = r#\"🅡 🅔 🅓\"#;\n        // let logo = \"RED\";\n\n        let lines:Vec<&str> = logo.split(\"\\n\").collect();\n        let logo_width = lines.get(0).unwrap().len();\n\n        let fromy = self.height / 2 - lines.len() / 2;\n        let fromx = self.lp_width + (self.width - self.lp_width)/ 2;\n\n        let mut stdout = stdout();\n\n        for r in 0..self.height{\n            queue!(stdout,\n                cursor::MoveTo(self.lp_width as u16, r as u16),\n                terminal::Clear(ClearType::UntilNewLine)\n            );\n        }\n\n        for (i,line) in lines.iter().enumerate() {\n            queue!(stdout,\n                cursor::MoveTo((fromx) as u16, (fromy + i) as u16),\n                FColor(Color::Reset), Print(line)\n            ).unwrap();\n        }\n    }\n\n    fn find_cursor_x_position(&self, mx: usize) -> usize {\n        let mut count = 0;\n        let mut real_count = 0; // searching x position\n\n        let line = self.code.get_line_at(self.r);\n        if line.is_none() { return 0; }\n        let line = line.unwrap();\n\n        for ch in line.chars() {\n            if count >= mx + self.x { break; }\n            if ch == '\\t' && self.x == 0 {\n                count += self.code.indent_width().unwrap_or(2);\n                real_count += 1;\n            } else {\n                count += 1;\n                real_count += 1;\n            }\n        }\n\n        real_count\n    }\n\n\n    fn cursor_is_focused(&mut self) -> bool {\n        (self.r >= self.y) && (self.r - self.y) < self.height\n    }\n    fn cursor_is_invisible_at_bottom(&mut self) -> bool {\n        self.r >= self.y && !self.cursor_is_focused()\n    }\n    fn cursor_is_invisible_at_top(&mut self) -> bool {\n        self.y >= self.r && !self.cursor_is_focused()\n    }\n    fn cursor_is_invisible_at_left(&mut self) -> bool {\n        self.c < self.x\n    }\n    fn cursor_is_invisible_at_right(&mut self) -> bool {\n        self.lp_width + self.ln_width + self.lns_width + self.c - self.x >= self.width\n    }\n\n    fn focus_to_down(&mut self) {\n        self.y = self.r - self.height + 1\n    }\n    fn focus_to_up(&mut self) {\n        self.y = self.r\n    }\n    fn focus_to_right(&mut self) {\n        self.x = self.c - self.width + 1 + self.ln_width + self.lns_width + self.lp_width;\n    }\n    fn focus_to_left(&mut self) {\n        self.x = self.c;\n    }\n    fn focus_to_center(&mut self) {\n        if self.r > self.height / 2 {\n            self.y = self.r - (self.height / 2)\n        }\n    }\n    fn fit_cursor(&mut self) {\n        if self.c > self.code.line_len(self.r) {\n            self.c = self.code.line_len(self.r)\n        }\n    }\n\n    fn handle_up(&mut self) {\n        if self.r > 0 {\n            self.r -= 1;\n            self.fit_cursor();\n            self.handle_movement();\n        }\n    }\n\n    fn handle_down(&mut self) {\n        if self.r < self.code.len_lines() - 1 {\n            self.r += 1;\n            self.fit_cursor();\n            self.handle_movement();\n        }\n    }\n\n    fn handle_left(&mut self) {\n        if self.c > 0 {\n            self.c -= 1;\n            if self.x > 0 && self.cursor_is_invisible_at_left() {\n                self.focus_to_left();\n                self.upd = true\n            }\n            if self.cursor_is_invisible_at_right() {\n                self.focus_to_right();\n                self.upd = true\n            }\n        } else if self.r > 0 {\n            self.r -= 1;\n            self.c = self.code.line_len(self.r);\n        }\n\n        self.handle_movement();\n    }\n\n    fn handle_right(&mut self) {\n        if self.c < self.code.line_len(self.r) {\n            self.c += 1;\n            if self.x > 0 && self.cursor_is_invisible_at_left() {\n                self.focus_to_left();\n                self.upd = true\n            }\n            if self.cursor_is_invisible_at_right() {\n                self.focus_to_right();\n                self.upd = true\n            }\n        } else if self.r < self.code.len_lines() - 1 {\n            self.r += 1;\n            self.c = 0;\n        }\n\n        self.handle_movement();\n    }\n\n    async fn handle_enter(&mut self) {\n        let ic = self.code.indentation_level(self.r);\n\n        self.insert_char('\\n').await;\n\n        self.upd = true;\n        self.r += 1;\n        self.c = 0;\n\n        match self.code.indent_string() {\n            Some(indent_string) => {\n                let indentation = indent_string.repeat(ic);\n                self.code.insert_text(&indentation, self.r, self.c);\n\n                if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n                    lsp.lock().await.did_change(\n                        self.r, self.c, self.r, self.c,\n                        &self.code.abs_path, &indentation\n                    ).await;\n                }\n\n                self.clean_diagnostics();\n\n                self.c = indentation.chars().count();\n            },\n            None => {},\n        }\n        self.handle_movement();\n    }\n\n    async fn handle_delete(&mut self) {\n        if self.selection.non_empty_and_active() {\n            // remove selected text\n            self.handle_cut().await;\n            return;\n        }\n\n        if self.code.indent_unit().is_some() && self.c != 0\n            && self.code.is_only_indentation_before(self.r, self.c)\n            && self.code.indentation_level(self.r) > 0 {\n            // remove indentations only\n\n            let remove_all_indents = true;\n\n            let il = self.code.indentation_level(self.r);\n            let mut indent_from = match self.code.indent_unit() { // vscode like removal\n                Some(unit) if unit == \"\\t\" =>  il-1,\n                Some(unit) if unit == \" \" => {\n                    let w = self.code.indent_width().unwrap_or(2);\n                    w * (il-1)\n                },\n                _ => self.c - 1,\n            };\n\n            if remove_all_indents { indent_from = 0 }  // idea like removal\n\n            self.code.remove_text(self.r, indent_from, self.r, self.c);\n\n            if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n                lsp.lock().await.did_change(\n                    self.r, indent_from, self.r, self.c,\n                    &self.code.abs_path, \"\"\n                ).await;\n            }\n\n            self.c = indent_from;\n            self.upd = true;\n            self.clean_diagnostics();\n\n            if remove_all_indents == false { return }\n        }\n\n        if self.c > 0 {\n            // remove single char\n            self.code.remove_char(self.r, self.c);\n\n            if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n                lsp.lock().await.did_change(self.r, self.c-1, self.r, self.c, &self.code.abs_path, \"\").await;\n            }\n\n            self.c -= 1;\n            self.upd = true;\n            self.clean_diagnostics();\n\n        } else if self.r != 0 {\n            // remove enter char\n            let prev_line_len = self.code.line_len(self.r - 1);\n            // self.code.remove_char(self.r, self.c);\n            self.code.remove_text(self.r - 1, prev_line_len, self.r, self.c);\n\n            if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n                lsp.lock().await.did_change(self.r - 1, prev_line_len, self.r, self.c, &self.code.abs_path, \"\").await;\n            }\n\n            self.r -= 1;\n            self.c = prev_line_len;\n            self.upd = true;\n\n            self.clean_diagnostics();\n        }\n\n        self.handle_movement();\n    }\n\n    fn copy_to_clipboard(&mut self) {\n        if self.selection.empty() { return; }\n\n        let (y, x) = self.selection.from();\n        let (yto, xto) = self.selection.to();\n        let text = self.code.get_text(y, x, yto, xto);\n\n        let mut ctx = ClipboardContext::new().unwrap();\n        ctx.set_contents(text).unwrap();\n        // let mut clipboard = arboard::Clipboard::new().unwrap();\n        // clipboard.set_text(text).unwrap();\n    }\n\n    async fn paste_from_clipboard(&mut self) {\n        if self.selection.non_empty_and_active() {\n            self.handle_cut().await;\n        }\n\n        let mut ctx = ClipboardContext::new().unwrap();\n        let text = ctx.get_contents().unwrap();\n        self.code.insert_text(&text, self.r, self.c);\n\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        if let Some(lsp) = self.lang2lsp.get(lang) {\n            lsp.lock().await.did_change(self.r, self.c, self.r, self.c, &path, &text).await;\n        }\n\n        self.clean_diagnostics();\n\n        for ch in text.chars() {\n            match ch {\n                '\\n' => {\n                    self.r += 1;\n                    self.c = 0;\n                }\n                _ => self.c += 1,\n            }\n        }\n\n        self.upd = true;\n    }\n\n    fn selected_text(&mut self) -> String {\n        let (y, x) = self.selection.from();\n        let (yto, xto) = self.selection.to();\n        let text = self.code.get_text(y, x, yto, xto);\n        return text;\n    }\n\n    async fn handle_duplicate(&mut self) {\n        if self.selection.non_empty_and_active() {\n            let text = self.selected_text();\n            self.code.insert_text(&text, self.r, self.c);\n\n            let path = &self.code.abs_path;\n            let lang = &self.code.lang;\n\n            if let Some(lsp) = self.lang2lsp.get(lang) {\n                lsp.lock().await.did_change(self.r, self.c, self.r, self.c, &path, &text).await;\n            }\n\n            for ch in text.chars() {\n                match ch { // calculate cursor position\n                    '\\n' => { self.r += 1; self.c = 0; }\n                    _ => self.c += 1,\n                }\n            }\n\n            self.selection.clean();\n            self.selection.keep_once = false;\n            self.upd = true;\n            self.clean_diagnostics();\n\n        } else if self.r < self.code.len_lines() - 1 {\n            let text = self.code.get_text(self.r, 0, self.r + 1, 0);\n            self.r += 1;\n            self.code.insert_text(&text, self.r, 0);\n\n            let path = &self.code.abs_path;\n            let lang = &self.code.lang;\n\n            if let Some(lsp) = self.lang2lsp.get(lang) {\n                let change_text = format!(\"\\n{}\", &text);\n                lsp.lock().await\n                    .did_change(self.r-1, text.len(), self.r-1, text.len(), path, &change_text)\n                    .await;\n            }\n\n            self.upd = true;\n            self.clean_diagnostics();\n        }\n    }\n\n    async fn handle_cut(&mut self) {\n        if self.selection.empty() { return; }\n\n        let (y, x) = self.selection.from();\n        let (yto, xto) = self.selection.to();\n        self.code.remove_text(y, x, yto, xto);\n\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        if let Some(lsp) = self.lang2lsp.get(lang) {\n            lsp.lock().await.did_change(y, x, yto, xto, path, \"\").await;\n        }\n\n        self.r = y;\n        self.c = x;\n        self.selection.clean();\n        self.selection.keep_once = false;\n        self.upd = true;\n        self.clean_diagnostics();\n    }\n\n    async fn handle_cut_line(&mut self) {\n        self.code.remove_text(self.r, 0, self.r + 1, 0);\n\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        if let Some(lsp) = self.lang2lsp.get(lang) {\n            lsp.lock().await.did_change(self.r, 0, self.r + 1, 0,  path, \"\").await;\n        }\n\n        if self.c > self.code.line_len(self.r) { // fit to line\n            self.c = self.code.line_len(self.r);\n        }\n\n        self.selection.clean();\n        self.selection.keep_once = false;\n        self.upd = true;\n        self.clean_diagnostics();\n    }\n\n    fn handle_movement(&mut self) {\n        if self.cursor_is_focused() {\n            // optimization\n            self.draw_status(); // no need full update\n            self.draw_cursor();\n            return;\n        }\n        if self.cursor_is_invisible_at_bottom() {\n            self.upd = true; // needs full update\n            self.focus_to_down();\n            return;\n        }\n        if self.cursor_is_invisible_at_top() {\n            self.upd = true; // needs full update\n            self.focus_to_up();\n            return;\n        }\n    }\n\n    fn scroll_down(&mut self) {\n        if self.y + self.height >= self.code.len_lines() {\n            return;\n        }\n        self.y += 1;\n        self.upd = true;\n    }\n    fn scroll_up(&mut self) {\n        if self.y == 0 {\n            return;\n        }\n        self.y -= 1;\n        self.upd = true;\n    }\n\n    async fn insert_char(&mut self, c: char) {\n        if self.selection.non_empty_and_active() { self.handle_cut().await;}\n\n        self.code.insert_char(c, self.r, self.c);\n\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        if let Some(lsp) = self.lang2lsp.get(lang) {\n            lsp.lock().await.did_change(self.r, self.c, self.r, self.c, path, &c.to_string()).await;\n        }\n\n        self.c += 1;\n        self.upd = true;\n        self.clean_diagnostics();\n    }\n\n    async fn insert_tab(&mut self) {\n        let (r,c) = (self.r, self.c);\n        let inserted = self.code.insert_tab(r,c);\n\n        self.c += inserted.chars().count();\n\n        if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n            lsp.lock().await.did_change(r,c, r,c, &self.code.abs_path, &inserted).await;\n        }\n        self.upd = true;\n        self.clean_diagnostics();\n    }\n\n    async fn comment_line(&mut self) {\n        let comment = self.code.get_lang_comment();\n        if comment.is_none() { return; }\n        let comment = comment.unwrap();\n\n        match self.code.find_comment(self.r) {\n            Some(comment_index) => {  // uncomment line\n                let comment_len = comment.len();\n                self.code.remove_text(self.r, comment_index, self.r, comment_index + comment_len);\n\n                let path = &self.code.abs_path; let lang = &self.code.lang;\n\n                if let Some(lsp) = self.lang2lsp.get(lang) {\n                    lsp.lock().await.did_change(\n                        self.r, comment_index,\n                        self.r, comment_index + comment_len,\n                        path, \"\"\n                    ).await;\n                }\n\n            },\n            None => {  // comment line\n                let first_non_whitespace = self.code\n                    .find_first_non_whitespace(self.r, self.c)\n                    .unwrap_or(0);\n\n                self.code.insert_text(&comment, self.r, first_non_whitespace);\n\n                let path = &self.code.abs_path; let lang = &self.code.lang;\n\n                if let Some(lsp) = self.lang2lsp.get(lang) {\n                    lsp.lock().await.did_change(\n                        self.r, first_non_whitespace,\n                        self.r, first_non_whitespace,\n                        &path, &comment\n                    ).await;\n                }\n            },\n        }\n\n        self.upd = true;\n        self.handle_down();\n    }\n\n    fn save(&mut self) {\n        self.code.save_file().expect(\"Can not save file\");\n        self.upd = true;\n    }\n\n    async fn undo(&mut self) {\n        let maybe_change = self.code.undo();\n        match maybe_change {\n            Some(changes) => {\n\n                for change in changes.changes {\n\n                    self.r = change.row;\n                    self.c = change.column;\n                    let text = &change.text;\n\n                    match change.operation {\n                        crate::code::Operation::Insert => {\n                            let r = change.row;\n                            let c = change.column;\n                            let mut r_end = r;\n                            let mut c_end = c;\n\n                            for ch in text.chars() { match ch {\n                                '\\n' => { r_end += 1; c_end = 0;}\n                                _ => c_end += 1,\n                            }}\n\n                            if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n                                lsp.lock().await.did_change(\n                                    r, c, r_end, c_end, &self.code.abs_path, \"\"\n                                ).await;\n                            }\n                        },\n                        crate::code::Operation::Remove => {\n                            let mut r = change.row;\n                            let mut c = change.column;\n\n                            for ch in text.chars() { match ch {\n                                '\\n' => { r -= 1; c = 0;}\n                                _ => c -= 1,\n                            }}\n                            if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n                                lsp.lock().await.did_change(\n                                    r, c,  r, c, &self.code.abs_path, &change.text\n                                ).await;\n                            }\n                        }\n                        crate::code::Operation::Start => {},\n                        crate::code::Operation::End => {},\n                    }\n\n                }\n            },\n            None => {},\n        }\n        self.upd = true;\n    }\n    async fn local_search(&mut self) {\n        let mut end = false;\n        let mut changed = false;\n\n        self.search.active = true;\n\n        if self.selection.non_empty_and_active() {\n            let (y, x) = self.selection.from();\n            let (yto, xto) = self.selection.to();\n            let selected_text = self.code.get_text(y, x, yto, xto);\n            self.search.pattern = ropey::Rope::from_str(&selected_text);\n            changed = true;\n        }\n        if self.search.pattern.len_chars() > 0 {\n            let search_results = self.code.search(&self.search.pattern.to_string());\n            let search_results: Vec<SearchResult> = search_results.iter()\n                .map(|(line, position)| SearchResult{ line:*line, position:*position })\n                .collect();\n            self.search.results = search_results;\n            self.search.index = 0;\n            changed = true;\n        }\n\n        let mut x = self.search.pattern.len_chars();\n\n        while !end {\n\n            self.draw_search_line(x, self.height-1);\n\n            if changed && self.search.pattern.len_chars() > 0 &&\n                !self.search.results.is_empty() {\n\n                let search_result = &self.search.results[self.search.index];\n                let sy = search_result.line;\n                let sx = search_result.position;\n                self.r = sy;\n                self.c = sx + self.search.pattern.chars().count();\n                self.handle_movement();\n                if self.r - self.y == self.height-1 { self.y += 1; }  // if last line, scroll down\n                self.selection.active = true;\n                self.selection.set_start(sy, sx);\n                self.selection.set_end(sy, sx + self.search.pattern.chars().count());\n\n                self.upd = true;\n                self.draw().await;\n                self.draw_search_line(x, self.height-1);\n\n                changed = false;\n            }\n\n            let mut reader = EventStream::new();\n            let mut event = reader.next().fuse();\n\n            select! {\n                maybe_event = event => {\n                    match maybe_event {\n                        Some(Ok(event)) => {\n                            changed = false;\n\n                            match event {\n                                Event::Key(event) => {\n                                    match (event.modifiers, event.code) {\n                                        (KeyModifiers::CONTROL, KeyCode::Char('g')) => {\n                                            self.global_search().await;\n                                            self.overlay_lines.clear();\n                                            return;\n                                        }\n                                        _ => {}\n                                    }\n\n                                    match event.code {\n                                        KeyCode::Up => {\n                                            if self.search.index > 0 {\n                                                self.search.index -= 1;\n                                            } else {\n                                                self.search.index = self.search.results.len() - 1\n                                            }\n                                            changed = true;\n                                        },\n                                        KeyCode::Down => {\n                                            self.search.index += 1;\n                                            if self.search.index >= self.search.results.len() {\n                                                self.search.index = 0;\n                                            }\n                                            changed = true;\n                                        },\n                                        KeyCode::Left if x > 0 => x -= 1,\n                                        KeyCode::Right if x < self.search.pattern.len_chars() => x += 1,\n                                        KeyCode::Enter => { end = true; },\n                                        KeyCode::Esc => { end = true; },\n                                        KeyCode::Backspace if x > 0 => {\n                                            x -= 1;\n                                            self.clean_search_line();\n                                            self.search.pattern.remove(x..x+1);\n\n                                            if self.search.pattern.len_chars() > 0 {\n\n                                                let search_results = self.code.search(&self.search.pattern.to_string());\n                                                let search_results: Vec<SearchResult> = search_results.iter()\n                                                    .map(|(line, position)| SearchResult{ line:*line, position:*position })\n                                                    .collect();\n\n                                                self.search.results = search_results;\n                                                self.search.index = 0;\n                                                changed = true;\n                                            }\n                                        },\n                                        KeyCode::Char(c) => {\n                                            self.clean_search_line();\n                                            self.search.pattern.insert_char(x, c);\n                                            x += 1;\n                                            let search_results = self.code.search(&self.search.pattern.to_string());\n                                            let search_results: Vec<SearchResult> = search_results.iter()\n                                                .map(|(line, position)| SearchResult{ line:*line, position:*position })\n                                                .collect();\n\n                                            self.search.results = search_results;\n                                            self.search.index = 0;\n                                            changed = true;\n                                            // debug!(\"search_results {:?}\", search_results);\n                                        },\n                                        _ => {\n                                            debug!(\"event.code {:?}\", event.code);\n                                        }\n                                    }\n                                }\n                                _ => {}\n                            }\n\n                        }\n\n                        Some(Err(e)) => {\n                            debug!(\"Error: {:?}\\r\", e);\n                            end = true;\n                        },\n                        None => { end = true; },\n                    }\n                }\n            };\n        }\n        self.upd = true;\n        self.search.active = false;\n    }\n    pub fn draw_search_line(&mut self, x:usize, y:usize) {\n        let prefix = \"search: \";\n        let line = if !self.search.results.is_empty() && self.search.pattern.len_chars() > 0 {\n            let postfix = format!(\"{}/{}\", self.search.index+1, self.search.results.len());\n            format!(\"{}{} {}\", prefix, &self.search.pattern, postfix)\n        } else {\n            format!(\"{}{} \", prefix, &self.search.pattern)\n        };\n\n        queue!(stdout(),\n            cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n            BColor(Color::Reset), FColor(Color::Reset), Print(line),\n        );\n        queue!(stdout(),\n            cursor::MoveTo((self.lp_width + 1 + prefix.len() + x) as u16, y as u16),\n        );\n\n        stdout().flush();\n    }\n    pub fn clean_search_line(&mut self) {\n        let prefix = \"search: \";\n        let line = if !self.search.results.is_empty() && self.search.pattern.len_chars() > 0 {\n            let postfix = format!(\"{}/{}\", self.search.index+1, self.search.results.len());\n            format!(\"{}{} {}\", prefix, &self.search.pattern, postfix)\n        } else {\n            format!(\"{}{}\", prefix, &self.search.pattern)\n        };\n\n        queue!(stdout(),\n            cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n            BColor(Color::Reset), FColor(Color::Reset), Print(\" \".repeat(line.chars().count())),\n        );\n\n        stdout().flush();\n    }\n\n    pub fn init_new_lsp(&mut self) {\n        let lang = self.code.lang.clone();\n        if self.lang2lsp.contains_key(&lang) { return; }\n\n        let lsp = Arc::new(Mutex::new(lsp::Lsp::new()));\n        let lsp_clone = lsp.clone();\n\n        let abs_file = self.code.abs_path.clone();\n        let file_content = self.code.text.to_string();\n\n        self.lang2lsp.insert(lang.clone(), lsp_clone);\n        let diagnostic_send = self.diagnostics_sender.as_mut().map(|s|s.clone()).unwrap();\n\n        let lsp_cmd = self.code.get_lang_conf()\n            .map(|c| c.lsp.clone())\n            .flatten()\n            .map(|l| l.join(\" \"));\n\n        if lsp_cmd.is_none() { return; }\n\n        let lsp_cmd = lsp_cmd.unwrap();\n\n        tokio::task::spawn(async move {\n            // lsp start, initialization\n            let mut lsp = lsp.lock().await;\n\n            let result = lsp.start(&lang, &lsp_cmd, Some(diagnostic_send));\n\n            match result {\n                Ok(_) => {},\n                Err(e) => {\n                    debug!(\"error starting lsp process {}\", e.to_string());\n                    return;\n                },\n            }\n\n            let dir = utils::current_dir();\n            lsp.init(&dir).await;\n\n            lsp.did_open(&lang, &abs_file, &file_content);\n        });\n    }\n\n    pub fn clean_diagnostics(&mut self) {\n        let uri = format!(\"file://{}\", self.code.abs_path);\n        self.diagnostics.clone().try_lock().unwrap().remove(&uri);\n    }\n\n    pub async fn set_lsp_status(&mut self, status: &str) {\n        let lsp_status = self.lsp_status.clone();\n        let mut lsp_status = lsp_status.lock().await;\n        *lsp_status = status.to_string();\n    }\n\n\n    fn score_matches(src: &str, match_str: &str) -> i32 {\n        let mut score = 0;\n\n        // If the match is at the beginning, we give it a high score.\n        if src.starts_with(match_str) {\n            score += 1000;\n        }\n\n        // Each occurrence of match_str in src adds a smaller score.\n        score += (src.matches(match_str).count() as i32) * 10;\n\n        // If match is close to the start of the string but not at the beginning, add some score.\n        if let Some(initial_index) = src.find(match_str) {\n            if initial_index > 0 && initial_index < 5 {\n                score += 500;\n            }\n        }\n\n        score\n    }\n\n    fn sort_completion_items(&self, items: &mut Vec<CompletionItem>, prev_word: &str) {\n        items.sort_by(|a, b| {\n            let sa = Self::score_matches(&a.label, prev_word);\n            let sb = Self::score_matches(&b.label, prev_word);\n            let r = sb.cmp(&sa);\n            if r == Ordering::Equal {\n                a.label.len().cmp(&b.label.len())\n            } else {\n                r\n            }\n        });\n    }\n    \n    pub async fn lsp_completion(&mut self) {\n        let mut end = false;\n\n        while !end {\n            let mut changed = false;\n\n            let path = &self.code.abs_path;\n            let lang = &self.code.lang;\n\n            let completion_result = match self.lang2lsp.get(lang) {\n                Some(lsp) => lsp.lock().await.completion(&path, self.r, self.c).await,\n                None => return,\n            };\n\n            let mut completion_result = match completion_result {\n                Some(c) => c, None => return,\n            };\n\n            if completion_result.items.is_empty() { return; }\n\n            self.set_lsp_status(\"lsp completion\").await;\n\n            let (mut selected, mut selected_offset) = (0, 0);\n            let (height, mut width) = (5, 30);\n\n            let line = match self.code.line_at(self.r) {\n                Some(line) => line, None => return,\n            };\n\n            let prev = utils::find_prev_word(line, self.c);\n            let prev_word = line.chars().skip(prev).take(self.c - prev).collect::<String>();\n\n            // Sort completion items\n            self.sort_completion_items(&mut completion_result.items, &prev_word);\n\n            let mut options = &completion_result.items;\n\n            while !changed {\n\n                let mut reader = EventStream::new();\n\n\n                // calculate scrolling offsets\n                if selected < selected_offset { selected_offset = selected }\n                if selected >= selected_offset + height { selected_offset = selected - height + 1 }\n\n                self.lsp_completion_draw(height, width, options, selected, selected_offset);\n                self.upd_next = true;\n\n                let mut event = reader.next().fuse();\n\n                select! {\n                    maybe_event = event => {\n                        changed = false;\n                        match maybe_event {\n                            Some(Ok(event)) => {\n                                if event == Event::Key(KeyCode::Esc.into()) { self.upd = true; return ;}\n                                if event == Event::Key(KeyCode::Down.into()) && selected < options.len() - 1 { selected += 1;}\n                                if event == Event::Key(KeyCode::Up.into()) && selected > 0 { selected -= 1; }\n                                if event == Event::Key(KeyCode::Enter.into())\n                                    || event == Event::Key(KeyCode::Tab.into())\n                                {\n                                    let item = completion_result.items.get(selected).unwrap();\n                                    self.lsp_completion_apply(item).await;\n                                    return;\n                                }\n\n\n                                if event == Event::Key(KeyCode::Left.into()) {\n                                    changed = true;\n                                    self.handle_left();\n                                    self.upd = true;\n                                    self.draw().await;\n                                }\n                                if event == Event::Key(KeyCode::Right.into()) {\n                                    changed = true;\n                                    self.handle_right();\n                                    self.upd = true;\n                                    self.draw().await;\n                                }\n                                if event == Event::Key(KeyCode::Backspace.into()) {\n                                    changed = true;\n                                    self.handle_delete().await;\n                                    self.upd = true;\n                                    self.draw().await;\n                                }\n                                match event {\n                                    Event::Key(event) => {\n                                        match event.code {\n                                            KeyCode::Char(' ') => { self.upd = true; return ;}\n                                            KeyCode::Char(c) => {\n                                                changed = true;\n                                                self.insert_char(c).await;\n                                                self.upd = true;\n                                                self.draw().await;\n                                            },\n                                            _ => {},\n                                        }\n                                    },\n                                    _ => {},\n                                }\n                                // KeyCode::Backspace => self.handle_delete().await,\n                                // KeyCode::Char('÷') => self.comment_line().await,\n                                // KeyCode::Char(c) => self.insert_char(c).await,\n\n                            }\n                            Some(Err(e)) => {debug!(\"Error: {:?}\\r\", e) },\n                            None => break,\n                        }\n                    }\n                };\n            }\n        }\n\n    }\n\n    pub fn lsp_completion_draw(&mut self,\n        height: usize, width:usize,\n        options: &Vec<CompletionItem>,\n        selected:usize, offset:usize\n    ) {\n        let width = options.iter().map(|o| o.label.len()).max().unwrap_or(width);\n\n        for row in 0..height {\n            if row >= options.len() || row >= height { break; }\n            let option = &options[row + offset];\n\n            let is_selected = selected == row + offset;\n            let bgcolor = if is_selected { Color::Grey } else { Color::Reset };\n\n            let label = format!(\" {:width$} \", option.label, width = width);\n\n            queue!(stdout(),\n                cursor::MoveTo(\n                    (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n                    (self.r - self.y + row + 1) as u16\n                ),\n                BColor(bgcolor), FColor(self.lncolor),\n                Print(label),\n                BColor(Color::Reset), FColor(Color::Reset),\n            );\n        }\n\n        stdout().flush().expect(\"cant flush\");\n        self.draw_cursor();\n        stdout().flush().expect(\"cant flush\");\n    }\n\n    pub async fn lsp_completion_apply(&mut self, item: &lsp::lsp_messages::CompletionItem) {\n        if item.textEdit.is_none() && item.label.is_empty() { return; }\n\n        let line = match self.code.line_at(self.r) {\n            Some(line) => line, None => return,\n        };\n\n        let prev = utils::find_prev_word(line, self.c);\n        let next = utils::find_next_word(line, self.c);\n\n        let insert_text = match item.textEdit.as_ref() {\n            Some(t) => &t.newText, None => &item.label,\n        };\n\n        self.code.remove_text(self.r, prev, self.r, next);\n        self.code.insert_text(insert_text, self.r, prev);\n\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        if let Some(lsp) = self.lang2lsp.get(lang) {\n            lsp.lock().await.did_change(self.r, prev, self.r, next,  &path, \"\").await;\n            lsp.lock().await.did_change(self.r, prev, self.r, prev, &path, insert_text).await;\n        }\n\n        self.c = prev + insert_text.len();\n        self.upd = true;\n        self.clean_diagnostics();\n    }\n\n    async fn definition(&mut self) {\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        let definition_result = match self.lang2lsp.get(lang) {\n            Some(lsp) => lsp.lock().await.definition(&path, self.r, self.c).await,\n            None => { return; },\n        };\n\n        let definition = match &definition_result {\n            Some(def) if def.len() == 1 => &def[0],\n            _ => return,\n        };\n\n        if definition.uri != format!(\"file://{}\", self.code.abs_path) {\n            let path = definition.uri.split(\"file://\").nth(1).unwrap().to_string();\n            self.open_file(&path).await;\n        }\n\n        if definition.range.start.line as usize > self.code.len_lines() ||\n            definition.range.start.character as usize >\n                self.code.line_len(definition.range.start.line as usize) {\n            return;\n        }\n\n        self.r = definition.range.start.line as usize;\n        self.c = definition.range.start.character as usize;\n        self.handle_movement();\n\n        self.cursor_history.push(CursorPosition{\n            filename: self.code.abs_path.clone(),\n            row: self.r, col: self.c, y: self.y, x: self.x,\n        });\n        self.cursor_history_undo.clear();\n\n        self.upd = true;\n        self.tree_view.upd = true;\n    }\n\n    pub async fn references(&mut self) {\n        let (r, c, initial_abs_path) = (self.r.clone(), self.c.clone(), self.code.abs_path.clone());\n\n        loop {\n            let start = Instant::now();\n\n            let references_result = match self.lang2lsp.get(&self.code.lang) {\n                Some(lsp) => lsp.lock().await.references(&self.code.abs_path, self.r, self.c).await,\n                None => return,\n            };\n\n            let elapsed = start.elapsed().as_millis();\n\n            let references = match references_result {\n                Some(refr) if !refr.is_empty() => refr,\n                _ => return,\n            };\n\n            if references.len() == 0 { return; }\n            if references.len() == 1 { self.apply_reference(&references[0]).await; return; }\n\n            let max_visible = 3;\n            let (mut selected, mut selected_offset) = (0, 0);\n            let (height, mut width) = (max_visible, 30);\n            self.upd = true; self.tree_view.upd = true;\n\n            self.overlay_lines.clear();\n\n            let mut reader = EventStream::new();\n\n            loop {\n\n                if selected < selected_offset { selected_offset = selected } // calculate scrolling offsets\n                if selected >= selected_offset + height { selected_offset = selected - height + 1 }\n\n                let reference = references.get(selected).unwrap();\n\n                if reference.uri != format!(\"file://{}\", &self.code.abs_path) {\n                    let path = reference.uri.split(\"file://\").nth(1).unwrap().to_string();\n                    self.open_file(&path).await;\n                }\n\n                self.r = reference.range.start.line as usize;\n                self.c = reference.range.start.character as usize;\n                self.handle_movement();\n                self.selection.set_start(reference.range.start.line as usize, reference.range.start.character as usize);\n                self.selection.set_end(reference.range.end.line as usize, reference.range.end.character as usize);\n                self.selection.activate();\n\n                let count = std::cmp::min(max_visible, references.len());\n                let fromy = self.height - count - 1;\n                for i in fromy..=self.height { self.overlay_lines.insert(i); }\n\n                self.draw().await;\n                self.references_draw(height, width, fromy, &references, selected, selected_offset, elapsed);\n                self.draw_cursor();\n\n                let mut event = reader.next().fuse();\n\n                select! {\n                    maybe_event = event => {\n                        match maybe_event {\n                            Some(Ok(event)) => {\n                                if event == Event::Key(KeyCode::Esc.into()) {\n                                    if self.code.abs_path != initial_abs_path {\n                                        self.open_file(&initial_abs_path).await;\n                                    }\n                                    self.r = r; self.c = c;\n                                    self.handle_movement();\n                                    self.selection.clean();\n\n                                    self.upd = true; self.tree_view.upd = true;\n                                    self.overlay_lines.clear();\n                                    return;\n                                }\n                                if event == Event::Key(KeyCode::Down.into()) && selected < references.len() - 1 {\n                                    selected += 1;\n                                    self.upd = true;\n                                    self.tree_view.upd = true;\n                                }\n                                if event == Event::Key(KeyCode::Up.into()) && selected > 0 {\n                                    selected -= 1;\n                                    self.upd = true; self.tree_view.upd = true;\n                                }\n                                if event == Event::Key(KeyCode::Enter.into())\n                                || event == Event::Key(KeyCode::Tab.into()) {\n                                    self.apply_reference(reference).await;\n                                    self.overlay_lines.clear();\n                                    return;\n                                }\n                            }\n                            Some(Err(e)) => { debug!(\"Error: {:?}\\r\", e); self.overlay_lines.clear(); return; },\n                            None => break,\n                        }\n                    }\n                };\n            }\n        }\n    }\n\n    async fn apply_reference(&mut self, reference: &ReferencesResult) {\n        if reference.uri != format!(\"file://{}\", self.code.abs_path) {\n            let path = reference.uri.split(\"file://\").nth(1).unwrap().to_string();\n            self.open_file(&path).await;\n        }\n\n        self.r = reference.range.start.line as usize;\n        self.c = reference.range.start.character as usize;\n        self.handle_movement();\n\n        self.cursor_history.push(CursorPosition{\n            filename: self.code.abs_path.clone(),\n            row: self.r, col: self.c, y: self.y, x: self.x,\n        });\n        self.cursor_history_undo.clear();\n\n        self.upd = true;\n        self.tree_view.upd = true;\n    }\n\n    pub fn references_draw(&mut self,\n        height: usize, width:usize, fromy:usize,\n        options: &Vec<ReferencesResult>,\n        selected: usize, offset: usize, elapsed:u128\n    ) {\n        let options: Vec<String> = options.iter().enumerate().map(|(i, reff)| {\n            format!(\n                \"{}/{} {}:{} {}\", i+1, options.len(), reff.uri.strip_prefix(\"file://\").unwrap(),\n                    reff.range.start.line, reff.range.start.character,\n                )\n        }).collect();\n\n        let width = options.iter().map(|o| o.len()).max().unwrap_or(width);\n\n        for row in 0..options.len() {\n            if row >= options.len() || row >= height { break; }\n            let option = &options[row + offset];\n\n            let is_selected = selected == row + offset;\n            let bgcolor = if is_selected { Color::Grey } else { Color::Reset };\n\n            let label = format!(\" {:width$} \", option, width = width);\n\n            queue!(stdout(),\n                cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (row + fromy) as u16),\n                BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n            );\n        }\n\n        let status = format!(\"lsp references, elapsed {} ms\", elapsed);\n\n        queue!(stdout(),\n            cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (self.height-1) as u16),\n            BColor(Color::Reset), FColor(Color::Reset), Print(status),\n        );\n\n        stdout().flush().expect(\"cant flush\");\n    }\n\n    pub async fn hover(&mut self) {\n        let path = &self.code.abs_path;\n        let lang = &self.code.lang;\n\n        let maybe_hover_result = match self.lang2lsp.get(lang) {\n            Some(lsp) => lsp.lock().await.hover(&path, self.r, self.c).await,\n            None => return,\n        };\n\n        let hover_result = match maybe_hover_result {\n            Some(hr) => hr,\n            None => return,\n        };\n\n        self.set_lsp_status(\"lsp completion\").await;\n\n        let (mut end, mut selected, mut selected_offset) = (false, 0, 0);\n        let (height, mut width) = (10, 30);\n\n        let mut reader = EventStream::new();\n\n        while !end {\n            // calculate scrolling offsets\n            if selected < selected_offset { selected_offset = selected }\n            if selected >= selected_offset + height { selected_offset = selected - height + 1 }\n\n            let options:Vec<String> = hover_result.contents.value.split(\"\\n\").map(|s| s.to_string()).collect();\n\n            if options.is_empty() { return; }\n\n            self.hover_draw(height, width, &options, selected, selected_offset);\n            self.upd_next = true;\n\n            let mut event = reader.next().fuse();\n\n            select! {\n                maybe_event = event => {\n                    match maybe_event {\n                        Some(Ok(event)) => {\n                            if event == Event::Key(KeyCode::Esc.into()) { self.upd = true; break; }\n                            if event == Event::Key(KeyCode::Down.into()) && selected < options.len() - 1 { selected += 1;}\n                            if event == Event::Key(KeyCode::Up.into()) && selected > 0 { selected -= 1; }\n                            if event == Event::Key(KeyCode::Enter.into())\n                                || event == Event::Key(KeyCode::Tab.into())\n                            {\n                                break\n                            }\n                        }\n                        Some(Err(e)) => {\n                            debug!(\"Error: {:?}\\r\", e)\n                        },\n                        None => break,\n                    }\n                }\n            }\n        }\n\n    }\n\n    pub fn hover_draw(&mut self,\n        height: usize, width:usize,\n        options: &Vec<String>,\n        selected: usize, offset: usize\n    ) {\n        let width = options.iter().map(|o| o.len()).max().unwrap_or(width);\n\n        for row in 0..height {\n            if row >= options.len() || row >= height { break; }\n            let option = &options[row + offset];\n\n            let bgcolor = if selected == row + offset { Color::Grey } else { Color::Reset };\n\n            let label = format!(\" {:width$} \", option, width = width);\n\n            queue!(stdout(),\n                cursor::MoveTo(\n                    (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n                    (self.r - self.y + row + 1) as u16\n                ),\n                BColor(bgcolor), FColor(self.lncolor), Print(label),\n            );\n        }\n\n        self.draw_cursor();\n        stdout().flush().expect(\"cant flush\");\n    }\n\n    pub async fn handle_errors(&mut self) {\n        let (r, c, initial_abs_path) = (self.r.clone(), self.c.clone(), self.code.abs_path.clone());\n\n        let (mut selected, mut selected_offset) = (0, 0);\n        let (height, mut width) = (5, 30);\n        self.upd = true; self.tree_view.upd = true;\n\n        let uri = format!(\"file://{}\", self.code.abs_path);\n\n        let diagnostics:Vec<Diagnostic> = {\n            let diagnostics = self.diagnostics.clone();\n            let maybe_diagnostics = diagnostics.lock().await;\n            let maybe_diagnostics = maybe_diagnostics.get(&uri);\n\n            let diagnostics:Vec<Diagnostic> = match maybe_diagnostics {\n                Some(d) => d.diagnostics.iter().filter(|d| d.severity == 1).map(|d|d.clone()).collect(),\n                None => return,\n            };\n\n            if diagnostics.is_empty() { return }\n\n            diagnostics\n        };\n\n        let mut reader = EventStream::new();\n\n        loop {\n\n            if selected < selected_offset { selected_offset = selected } // calculate scrolling offsets\n            if selected >= selected_offset + height { selected_offset = selected - height + 1 }\n\n            let diagnostic = match diagnostics.get(selected) {\n                Some(d) => d, None => { break },\n            };\n\n            // if diagnostic.uri != format!(\"file://{}\", &self.code.abs_path) {\n            //     let path = diagnostic.uri.split(\"file://\").nth(1).unwrap().to_string();\n            //     self.open_file(&path).await;\n            // }\n\n            self.r = diagnostic.range.start.line as usize;\n            self.c = diagnostic.range.start.character as usize;\n            self.handle_movement();\n            self.selection.set_start(diagnostic.range.start.line as usize, diagnostic.range.start.character as usize);\n            self.selection.set_end(diagnostic.range.end.line as usize, diagnostic.range.end.character as usize);\n            self.selection.activate();\n\n            // self.draw().await;\n            self.diagnostic_draw(height, width, &diagnostics, selected, selected_offset);\n            self.draw_cursor();\n\n            let mut event = reader.next().fuse();\n\n            select! {\n                maybe_event = event => {\n                    match maybe_event {\n                        Some(Ok(event)) => {\n                            if event == Event::Key(KeyCode::Esc.into()) {\n                                if self.code.abs_path != initial_abs_path {\n                                    self.open_file(&initial_abs_path).await;\n                                }\n                                self.r = r; self.c = c;\n                                self.handle_movement();\n                                self.selection.clean();\n\n                                self.upd = true; self.tree_view.upd = true;\n                                return;\n                            }\n                            if event == Event::Key(KeyCode::Down.into()) && selected < diagnostics.len() - 1 {\n                                selected += 1;\n                                self.upd = true;\n                                self.tree_view.upd = true;\n                            }\n                            if event == Event::Key(KeyCode::Up.into()) && selected > 0 {\n                                selected -= 1;\n                                self.upd = true; self.tree_view.upd = true;\n                            }\n\n                            if let Event::Resize(w, h) = event {\n                                self.upd = true;\n                                self.tree_view.upd = true;\n                                self.resize(w as usize, h as usize);\n                                self.draw().await;\n                            }\n\n                            if event == Event::Key(KeyCode::Enter.into())\n                            || event == Event::Key(KeyCode::Tab.into()) {\n                                // self.apply_reference(diagnostic).await;\n                                return;\n                            }\n                        }\n                        Some(Err(e)) => { debug!(\"Error: {:?}\\r\", e); return; },\n                        None => break,\n                    }\n                }\n            };\n        }\n    }\n\n    pub fn diagnostic_draw(&mut self,\n        height: usize, width:usize,\n        options: &Vec<Diagnostic>,\n        selected: usize, offset: usize\n    ) {\n\n        let limit = self.width - self.lp_width - self.ln_width - self.lns_width - 1;\n\n        let options: Vec<String> = options.iter().enumerate().map(|(i, diagnostic)| {\n            let prefix = format!(\"{}/{} {}:{} \", i+1, options.len(),\n                diagnostic.range.start.line,\n                diagnostic.range.start.character,\n            );\n            let message = diagnostic.message.chars().take(limit-prefix.len()).collect::<String>();\n            format!(\"{}{}\", prefix, message)\n        }).collect();\n\n        let width = options.iter().map(|o| o.len()).max().unwrap_or(width);\n\n        for row in 0..options.len() {\n            if row >= options.len() || row >= height { break; }\n            let option = &options[row + offset];\n\n            let is_selected = selected == row + offset;\n            let bgcolor = if is_selected { Color::Grey } else { Color::Reset };\n\n            let label = format!(\" {:width$} \", option, width = width);\n\n            queue!(stdout(),\n                cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, row  as u16),\n                BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n            );\n        }\n\n        stdout().flush().expect(\"cant flush\");\n    }\n\n    pub async fn global_search(&mut self) {\n        if self.search.pattern.len_chars() == 0 { return; }\n\n        let (r, c, initial_abs_path) = (self.r.clone(), self.c.clone(), self.code.abs_path.clone());\n        let max_visible = 3;\n        let mut changed = true;\n        let (mut selected, mut selected_offset) = (0, 0);\n        let (mut height, mut width) = (max_visible, 30);\n        self.upd = true; self.tree_view.upd = true;\n\n        self.overlay_lines.clear();\n\n        let path = Path::new(\"./\");\n        let mut search_results:Vec<(String, search::search::SearchResult)> = Vec::new();\n\n        let start = Instant::now();\n        let search_resilts = search::search::search_in_directory(&path, &self.search.pattern.to_string());\n\n        let elapsed = start.elapsed().as_millis();\n\n        match search_resilts {\n            Ok(srs) => {\n                for sr in srs {\n                    for r in sr.search_results {\n                        search_results.push((sr.file_path.clone(), r));\n                    }\n                }\n            },\n            Err(_) => return,\n        }\n\n        if search_results.is_empty() { return; }\n\n        if search_results.len() < height { height = search_results.len() }\n\n        let mut reader = EventStream::new();\n\n        loop {\n\n            if selected < selected_offset { selected_offset = selected } // calculate scrolling offsets\n            if selected >= selected_offset + height { selected_offset = selected - height + 1 }\n\n            if changed {\n                let search_result = search_results.get(selected).unwrap();\n\n                if search_result.0 != self.code.abs_path {\n                    self.open_file(&search_result.0).await;\n                }\n\n                self.r = search_result.1.line-1;\n                self.c = search_result.1.column;\n                self.handle_movement();\n                self.focus_to_center();\n                self.selection.set_start(search_result.1.line-1, search_result.1.column);\n                self.selection.set_end(search_result.1.line-1, search_result.1.column + self.search.pattern.chars().count());\n                self.selection.activate();\n\n                let fromy = self.height - std::cmp::min(max_visible, search_results.len());\n                for i in fromy-1..=self.height { self.overlay_lines.insert(i); }\n\n                self.draw().await;\n                self.draw_search_result(height, width, fromy-1, &search_results, selected, selected_offset, elapsed);\n                self.draw_cursor();\n                changed = false;\n            }\n\n            let mut event = reader.next().fuse();\n\n            select! {\n                maybe_event = event => {\n                    match maybe_event {\n                        Some(Ok(event)) => {\n                            if event == Event::Key(KeyCode::Esc.into()) {\n                                if self.code.abs_path != initial_abs_path {\n                                    self.open_file(&initial_abs_path).await;\n                                }\n                                self.r = r; self.c = c;\n                                self.handle_movement();\n                                self.selection.clean();\n\n                                self.upd = true;\n                                self.tree_view.upd = true;\n                                return;\n                            }\n                            if event == Event::Key(KeyCode::Down.into()) && selected < search_results.len() - 1 {\n                                changed = true;\n                                selected += 1;\n                                self.upd = true;\n                                // self.tree_view.upd = true;\n                            }\n\n                            if event == Event::Key(KeyCode::Up.into()) && selected > 0 {\n                                changed = true;\n                                selected -= 1;\n                                self.upd = true;\n                                // self.tree_view.upd = true;\n                            }\n\n                            if let Event::Resize(w, h) = event {\n                                self.upd = true;\n                                self.tree_view.upd = true;\n                                self.resize(w as usize, h as usize);\n                                changed = true;\n                            }\n\n                            if event == Event::Key(KeyCode::Enter.into())\n                            || event == Event::Key(KeyCode::Tab.into()) {\n                                self.upd = true;\n                                self.tree_view.upd = true;\n                                return;\n                            }\n                        }\n                        Some(Err(e)) => { debug!(\"Error: {:?}\\r\", e); return; },\n                        None => break,\n                    }\n                }\n            };\n        }\n    }\n\n    pub fn draw_search_result(&mut self,\n        height: usize, width:usize, fromy: usize,\n        options: &Vec<(String, search::search::SearchResult)>,\n        selected: usize, offset: usize, elapsed: u128\n    ) {\n        let limit = self.width - self.lp_width - self.ln_width - self.lns_width - 1;\n\n        let options: Vec<String> = options.iter().enumerate().map(|(i, (path, sr))| {\n            let prefix = format!(\"{}/{} {}:{} \", i+1, options.len(), sr.line,  sr.column);\n            let path = path.chars().take(limit-prefix.len()).collect::<String>();\n            format!(\"{} {}\", prefix, path)\n        }).collect();\n\n        let width = options.iter().map(|o| o.len()).max().unwrap_or(width);\n\n        for row in 0..options.len() {\n            if row >= options.len() || row >= height { break; }\n            let option = &options[row + offset];\n\n            let is_selected = selected == row + offset;\n            let bgcolor = if is_selected { Color::Grey } else { Color::Reset };\n\n            let label = format!(\" {:width$} \", option, width = width);\n\n            queue!(stdout(),\n                cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, (row + fromy) as u16),\n                BColor(bgcolor), FColor(self.lncolor), Print(label),\n                terminal::Clear(ClearType::UntilNewLine), BColor(Color::Reset), FColor(Color::Reset),\n            );\n        }\n\n        let status = format!(\n            \"global search on '{}', elapsed {} ms\",\n            &self.search.pattern,  elapsed\n        );\n\n        queue!(stdout(),\n            cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n            BColor(Color::Reset), FColor(Color::Reset), Print(status),\n        );\n\n\n        stdout().flush().expect(\"cant flush\");\n\n\n        // draw inside left panel\n        // if self.lp_width == 0 { return; }\n        // let mut stdout = stdout();\n        // let limit = self.lp_width;\n\n        // let options: Vec<String> = options.iter().enumerate().map(|(i, (path, sr))| {\n        //     let prefix = format!(\"{}/{} {}:{} \", i+1, options.len(), sr.line,  sr.column);\n        //     let path = path.chars().take(limit-prefix.len()).collect::<String>();\n        //     format!(\"{} {}\", prefix, path)\n        // }).collect();\n\n        // let mut count = 0;\n        // let mut row = 0;\n        // loop {\n        //     if row >= options.len() || row >= height { break; }\n        //     let option = &options[row + offset];\n\n        //     let isRowSelected = selected == row + offset;\n        //     let bgcolor = if isRowSelected { Color::Grey } else { Color::Reset };\n\n        //     let label = format!(\" {:width$}\", option, width = self.lp_width-3);\n\n        //     queue!(stdout,\n        //         cursor::MoveTo(1, row  as u16),\n        //         BColor(bgcolor), FColor(self.lncolor), Print(label),\n        //         BColor(Color::Reset), FColor(Color::Reset),\n        //     );\n\n        //     queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n        //     count += 1;\n        //     row += 1;\n        // }\n\n        // while count < self.height { // fill empty space\n        //     queue!(stdout, cursor::MoveTo(0, count as u16));\n        //     queue!(stdout, Print(\" \".repeat(self.lp_width-1)));\n        //     queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n        //     count += 1;\n        // }\n        // stdout.flush().expect(\"cant flush\");\n    }\n\n    async fn undo_cursor(&mut self) {\n        match self.cursor_history.pop() {\n            Some(cursor_position) => {\n                self.cursor_history_undo.push(CursorPosition{\n                    filename: self.code.abs_path.clone(),\n                    row: self.r, col: self.c,\n                    y: self.y, x: self.x,\n                });\n\n                if cursor_position.filename != self.code.abs_path {\n                    self.open_file(&cursor_position.filename).await;\n                }\n                self.r = cursor_position.row;\n                self.c = cursor_position.col;\n                self.y = cursor_position.y;\n                self.x = cursor_position.x;\n                self.upd = true;\n                self.handle_movement();\n            },\n            None => {},\n        }\n    }\n    async fn redo_cursor(&mut self) {\n        match self.cursor_history_undo.pop() {\n            Some(cursor_position) => {\n                self.cursor_history.push(CursorPosition{\n                    filename: self.code.abs_path.clone(),\n                    row: self.r, col: self.c,\n                    y: self.y, x: self.x,\n                });\n\n                if cursor_position.filename != self.code.abs_path {\n                    self.open_file(&cursor_position.filename).await;\n                }\n                self.r = cursor_position.row;\n                self.c = cursor_position.col;\n                self.y = cursor_position.y;\n                self.x = cursor_position.x;\n                self.upd = true;\n                self.handle_movement();\n            },\n            None => {},\n        }\n    }\n\n    async fn move_line_down(&mut self) {\n        if self.r >= self.code.len_lines()-1 { return }\n\n        let line1len = self.code.line_len(self.r);\n        let line2len = self.code.line_len(self.r+1);\n        let line1 = self.code.get_text(self.r,0, self.r, line1len);\n        let line2 = self.code.get_text(self.r+1,0, self.r+1, line2len);\n\n        let success = self.code.move_line_down(self.r);\n        if !success { return }\n\n        if let Some(lsp) = self.lang2lsp.get(&self.code.lang) {\n            let mut lsp = lsp.lock().await;\n            lsp.did_change(self.r, 0, self.r, line1len, &self.code.abs_path, \"\").await;\n            lsp.did_change(self.r, 0, self.r, 0, &self.code.abs_path, &line2).await;\n            lsp.did_change(self.r+1, 0, self.r+1, line2len, &self.code.abs_path, \"\").await;\n            lsp.did_change(self.r+1, 0, self.r+1, 0, &self.code.abs_path, &line1).await;\n        }\n\n        self.r += 1;\n\n        self.selection.clean();\n        self.selection.keep_once = false;\n        self.upd = true;\n        self.clean_diagnostics();\n    }\n\n    async fn move_line_up(&mut self)  {\n        if self.r == 0 { return }\n        if self.r >= self.code.len_lines() { return }\n\n        self.r -= 1;\n        self.move_line_down().await;\n        self.r -= 1;\n    }\n\n    fn select_more(&mut self) {\n        let next = match self.node_path.as_mut() {\n            Some(node_path) => {\n                if node_path.row == self.r && node_path.column == self.c {\n                    true\n                } else {\n                    self.node_path = self.code.get_node_path(self.r, self.c);\n                    false\n                }\n            },\n            None => {\n                self.node_path = self.code.get_node_path(self.r, self.c);\n                false\n            },\n        };\n\n\n        let node = if next && self.node_path.is_some() {\n            self.node_path.as_mut().unwrap().next_node()\n        } else {\n            self.node_path.as_mut().unwrap().current_node()\n        };\n\n        if let Some(next_node) = node {\n            self.selection.set_start(next_node.0.row, next_node.0.column);\n            self.selection.set_end(next_node.1.row, next_node.1.column);\n            self.selection.active = true;\n            self.upd = true;\n        }\n    }\n\n    fn select_less(&mut self) {\n        let prev = match self.node_path.as_mut() {\n            Some(node_path) => {\n                if node_path.row == self.r && node_path.column == self.c {\n                    true\n                } else {\n                    self.node_path = self.code.get_node_path(self.r, self.c);\n                    false\n                }\n            },\n            None => {\n                self.node_path = self.code.get_node_path(self.r, self.c);\n                false\n            },\n        };\n\n\n        let node = if prev && self.node_path.is_some() {\n            self.node_path.as_mut().unwrap().prev_node()\n        } else {\n            self.node_path.as_mut().unwrap().current_node()\n        };\n\n\n        if let Some(next_node) = node {\n            self.selection.set_start(next_node.0.row, next_node.0.column);\n            self.selection.set_end(next_node.1.row, next_node.1.column);\n            self.selection.active = true;\n            self.upd = true;\n        } else {\n            self.selection.clean();\n            self.upd = true;\n        }\n    }\n\n}\n\nimpl Drop for Editor {\n    fn drop(&mut self) {\n        Self::deinit()\n    }\n}\n","uri":"file://./src/editor.rs","version":0}}}
[2024-11-18 20:16:14.453] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:920:67\n    |\n920 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n920 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n920 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":919,"character":69},"end":{"line":919,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:920:67\n    |\n920 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n920 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n920 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}}]}}
[2024-11-18 20:16:14.454] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"if this is intentional, prefix it with an underscore: `_name`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `name`\n   --> src/code.rs:579:29\n    |\n579 |                         let name = capture_name.split('.').next().unwrap_or(capture_name);\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n"}},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":11},"end":{"line":168,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":361,"character":11},"end":{"line":361,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}},"severity":2,"code":"dead_code","source":"rustc","message":"field `row` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `row` is never read\n   --> src/code.rs:660:9\n    |\n658 | pub struct Runnable {\n    |            -------- field in this struct\n659 |     pub cmd: String,\n660 |     pub row: usize,\n    |         ^^^\n\n"}},{"range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}}},"message":"original diagnostic"}]},{"range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"field `search_pattern` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `search_pattern` is never read\n   --> src/code.rs:779:5\n    |\n777 | struct EarlyTerminationSearch<'a> {\n    |        ---------------------- field in this struct\n778 |     char_iter: ropey::iter::Chars<'a>,\n779 |     search_pattern: &'a str,\n    |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"method `move_line_up` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `move_line_up` is never used\n    --> src/code.rs:1082:12\n     |\n1038 | impl Code {\n     | --------- method in this implementation\n...\n1082 |     pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n     |            ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:867:17\n    |\n867 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:887:17\n    |\n887 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:940:17\n    |\n940 |             let result = rope_search(slice, substring);\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}}],"version":0}}
[2024-11-18 20:16:14.456] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Serialize`\n --> src/config.rs:1:26\n  |\n1 | use serde::{Deserialize, Serialize};\n  |                          ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:14.456] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::fs::File`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::fs::File`\n --> src/tree.rs:2:5\n  |\n2 | use std::fs::File;\n  |     ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `PathBuf`\n --> src/tree.rs:3:23\n  |\n3 | use std::path::{Path, PathBuf};\n  |                       ^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueueableCommand`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueueableCommand`\n --> src/tree.rs:5:32\n  |\n5 | use crossterm::{cursor, queue, QueueableCommand, style::Print};\n  |                                ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde::de`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde::de`\n --> src/tree.rs:7:5\n  |\n7 | use serde::de;\n  |     ^^^^^^^^^\n\n"}},{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::watch::error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::watch::error`\n --> src/tree.rs:8:5\n  |\n8 | use tokio::sync::watch::error;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `SetBackgroundColor as BColor`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `SetBackgroundColor as BColor`\n  --> src/tree.rs:12:31\n   |\n12 | use crossterm::style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor};\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}}},"message":"original diagnostic"}]},{"range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\nunreachable pattern","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}}},"message":"matches any value"}],"data":{"rendered":"warning: unreachable pattern\n   --> src/tree.rs:464:13\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |             ------------------------------------------------------------- matches any value\n...\n464 |             _ => {}\n    |             ^ unreachable pattern\n\n"}},{"range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}},"severity":4,"code":"unreachable_patterns","source":"rustc","message":"matches any value","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `row`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"try ignoring the field: `row: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `row`\n   --> src/tree.rs:455:44\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                            ^^^ help: try ignoring the field: `row: _`\n\n"}},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `row: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `column`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"try ignoring the field: `column: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `column`\n   --> src/tree.rs:455:49\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                 ^^^^^^ help: try ignoring the field: `column: _`\n\n"}},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `column: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `modifiers`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"try ignoring the field: `modifiers: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `modifiers`\n   --> src/tree.rs:455:63\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                               ^^^^^^^^^ help: try ignoring the field: `modifiers: _`\n\n"}},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `modifiers: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"original diagnostic"}]},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"if this is intentional, prefix it with an underscore: `_button`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `button`\n   --> src/tree.rs:459:60\n    |\n459 |                     crossterm::event::MouseEventKind::Down(button) => {}\n    |                                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_button`\n\n"}},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Write`","tags":[1],"data":{"rendered":"warning: unused import: `Write`\n --> src/tree.rs:4:21\n  |\n4 | use std::io::{self, Write};\n  |                     ^^^^^\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n  --> src/tree.rs:45:21\n   |\n45 |                 Err(e) => { debug!(\"cant get abs_path for {}\", name); continue;},\n   |                     ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:271:17\n    |\n271 |             for i in 0..padding_left {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:276:17\n    |\n276 |             for i in 0..depth {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:288:21\n    |\n288 |                 for i in 0..self.width-col-1 {\n    |                     ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"method `print` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `print` is never used\n  --> src/tree.rs:26:12\n   |\n22 | impl TreeNode {\n   | ------------- method in this implementation\n...\n26 |     pub fn print(&self) { println!(\"node {:?}\", self); }\n   |            ^^^^^\n\n"}},{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}},"severity":2,"code":"dead_code","source":"rustc","message":"field `dir` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `dir` is never read\n   --> src/tree.rs:146:5\n    |\n143 | pub struct TreeView {\n    |            -------- field in this struct\n...\n146 |     dir: String,\n    |     ^^^\n\n"}},{"range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}}},"message":"original diagnostic"}]},{"range":{"start":{"line":322,"character":11},"end":{"line":322,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":322,"character":11},"end":{"line":322,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":326,"character":7},"end":{"line":326,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":353,"character":11},"end":{"line":353,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":514,"character":3},"end":{"line":514,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"function `list_files_and_directories` is never used","tags":[1],"data":{"rendered":"warning: function `list_files_and_directories` is never used\n   --> src/tree.rs:515:4\n    |\n515 | fn list_files_and_directories(path: &str) -> io::Result<Vec<String>> {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/tree.rs:97:21\n   |\n97 |                     child.expand();\n   |                     ^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n97 |                     let _ = child.expand();\n   |                     +++++++\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:179:9\n    |\n179 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n179 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:228:9\n    |\n228 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n228 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:234:9\n    |\n234 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n234 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":254,"character":8},"end":{"line":254,"character":36}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:255:9\n    |\n255 |         queue!(stdout, cursor::Hide);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":259,"character":12},"end":{"line":259,"character":55}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:260:13\n    |\n260 |             queue!(stdout, cursor::MoveTo(0, i as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":272,"character":16},"end":{"line":272,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:273:17\n    |\n273 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":277,"character":16},"end":{"line":277,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:278:17\n    |\n278 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":282,"character":16},"end":{"line":282,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:283:17\n    |\n283 |                 queue!(stdout, FColor(color), Print(ch));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":288,"character":20},"end":{"line":288,"character":46}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:289:21\n    |\n289 |                     queue!(stdout, Print(' '));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":291,"character":12},"end":{"line":291,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:292:13\n    |\n292 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":297,"character":12},"end":{"line":297,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:298:13\n    |\n298 |             queue!(stdout, cursor::MoveTo(0, count as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":298,"character":12},"end":{"line":298,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:299:13\n    |\n299 |             queue!(stdout, Print(\" \".repeat(self.width-1)));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":299,"character":12},"end":{"line":299,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:300:13\n    |\n300 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":315,"character":8},"end":{"line":315,"character":79}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:316:9\n    |\n316 |         queue!(stdout,cursor::Show, cursor::MoveTo(0, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":316,"character":8},"end":{"line":316,"character":38}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:317:9\n    |\n317 |         queue!(stdout, Print(&search));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":317,"character":8},"end":{"line":317,"character":68}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:318:9\n    |\n318 |         queue!(stdout, Print(\" \".repeat(self.width-search.len()-1)));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":318,"character":8},"end":{"line":318,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:319:9\n    |\n319 |         queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":319,"character":8},"end":{"line":319,"character":106}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:320:9\n    |\n320 |         queue!(stdout, cursor::MoveTo((prefix.len() + self.search.index) as u16, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:394:13\n    |\n394 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n394 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:412:13\n    |\n412 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n412 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:429:13\n    |\n429 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n429 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:435:21\n    |\n435 |                     child.expand();\n    |                     ^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n435 |                     let _ = child.expand();\n    |                     +++++++\n\n"}},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":54},"end":{"line":528,"character":70}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:14.462] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:920:67\n    |\n920 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n920 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n920 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":919,"character":69},"end":{"line":919,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:920:67\n    |\n920 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n920 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n920 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`\n`#[warn(unused_variables)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:306:34\n    |\n306 |                         Some(Err(e)) => { /* println!(\"Error: {:?}\\r\", e) */ } ,\n    |                                  ^ help: if this is intentional, prefix it with an underscore: `_e`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_start`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `start`\n   --> src/editor.rs:848:13\n    |\n848 |         let start = time::Instant::now();\n    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\n"}},{"range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_chars_len`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `chars_len`\n   --> src/editor.rs:934:17\n    |\n934 |             let chars_len = line.chars().len();\n    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chars_len`\n\n"}},{"range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_c`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `c`\n    --> src/editor.rs:1018:17\n     |\n1018 |             for c in self.lp_width..self.width-status.chars().count()-1 {\n     |                 ^ help: if this is intentional, prefix it with an underscore: `_c`\n\n"}},{"range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable\n`#[warn(unused_mut)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2176:26\n     |\n2176 |             let (height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n     |\n     = note: `#[warn(unused_mut)]` on by default\n\n"}},{"range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2542:26\n     |\n2542 |         let (mut height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":399,"character":20},"end":{"line":399,"character":38}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\n`#[warn(unreachable_patterns)]` on by default","data":{"rendered":"warning: unreachable pattern\n   --> src/editor.rs:400:21\n    |\n400 |                     KeyCode::Char('g') => {\n    |                     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\n"}},{"range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2403:22\n     |\n2403 |         let (height, mut width) = (5, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":20}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":17}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2328:14\n     |\n2328 |         let (mut end, mut selected, mut selected_offset) = (false, 0, 0);\n     |              ----^^^\n     |              |\n     |              help: remove this `mut`\n\n"}},{"range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":17}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2329:22\n     |\n2329 |         let (height, mut width) = (10, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":19}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1937:13\n     |\n1937 |         let mut end = false;\n     |             ----^^^\n     |             |\n     |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1959:26\n     |\n1959 |             let (height, mut width) = (5, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":27}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":20}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1971:17\n     |\n1971 |             let mut options = &completion_result.items;\n     |                 ----^^^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\n"}},{"range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":20}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":33},"end":{"line":39,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n  --> src/editor.rs:40:34\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncBufReadExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncBufReadExt`\n  --> src/editor.rs:40:17\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                 ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_dir`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `dir`\n   --> src/editor.rs:127:16\n    |\n127 |     pub fn new(dir: String, config: Config) -> Self {\n    |                ^^^ help: if this is intentional, prefix it with an underscore: `_dir`\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:170:17\n    |\n170 |             Err(e) => {},\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_logo_width`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logo_width`\n    --> src/editor.rs:1123:13\n     |\n1123 |         let logo_width = lines.get(0).unwrap().len();\n     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_logo_width`\n\n"}},{"range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":828,"character":7},"end":{"line":828,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:829:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n829  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1118 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":828,"character":7},"end":{"line":828,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1117,"character":7},"end":{"line":1117,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:829:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n829  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1118 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled\n`#[warn(unused_must_use)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:535:29\n    |\n535 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n535 |                             let _ = node.toggle();\n    |                             +++++++\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}}},"message":"original diagnostic"}]},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:653:45\n    |\n653 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n653 |                                             let _ = node.toggle();\n    |                                             +++++++\n\n"}},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":850,"character":12},"end":{"line":850,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:851:13\n    |\n851 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":851,"character":43},"end":{"line":851,"character":73}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:852:44\n    |\n852 |             if self.tree_view.is_search(){ queue!(stdout(), cursor::Show); }\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":915,"character":12},"end":{"line":915,"character":85}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:916:13\n    |\n916 |             queue!(stdout, BColor(Color::Reset), FColor(lncolor), Print(line_number));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":924,"character":12},"end":{"line":924,"character":97}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:925:13\n    |\n925 |             queue!(stdout, BColor(Color::Reset), FColor(run_or_empty_color), Print(run_or_empty));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":925,"character":12},"end":{"line":925,"character":70}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:926:13\n    |\n926 |             queue!(stdout, BColor(Color::Reset), FColor(Color::Reset));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1012,"character":16},"end":{"line":1012,"character":80}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1013:17\n     |\n1013 |                 queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16));\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1016,"character":12},"end":{"line":1016,"character":84}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1017:13\n     |\n1017 |             queue!(stdout, cursor::MoveTo(self.lp_width as u16, self.height as u16));\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1052,"character":8},"end":{"line":1052,"character":50}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1053:9\n     |\n1053 |         queue!(stdout(), Print(\" \".repeat(space)));\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1130,"character":12},"end":{"line":1133,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1131:13\n     |\n1131 | /             queue!(stdout,\n1132 | |                 cursor::MoveTo(self.lp_width as u16, r as u16),\n1133 | |                 terminal::Clear(ClearType::UntilNewLine)\n1134 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1819,"character":8},"end":{"line":1822,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1820:9\n     |\n1820 | /         queue!(stdout(),\n1821 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1822 | |             BColor(Color::Reset), FColor(Color::Reset), Print(line),\n1823 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1823,"character":8},"end":{"line":1825,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1824:9\n     |\n1824 | /         queue!(stdout(),\n1825 | |             cursor::MoveTo((self.lp_width + 1 + prefix.len() + x) as u16, y as u16),\n1826 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1828:9\n     |\n1828 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1828 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1838,"character":8},"end":{"line":1841,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1839:9\n     |\n1839 | /         queue!(stdout(),\n1840 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1841 | |             BColor(Color::Reset), FColor(Color::Reset), Print(\" \".repeat(line.chars().count())),\n1842 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1844:9\n     |\n1844 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1844 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2067,"character":12},"end":{"line":2075,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2068:13\n     |\n2068 | /             queue!(stdout(),\n2069 | |                 cursor::MoveTo(\n2070 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2071 | |                     (self.r - self.y + row + 1) as u16\n...    |\n2075 | |                 BColor(Color::Reset), FColor(Color::Reset),\n2076 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2295,"character":12},"end":{"line":2298,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2296:13\n     |\n2296 | /             queue!(stdout(),\n2297 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (row + fromy) as u16),\n2298 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2299 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2303,"character":8},"end":{"line":2306,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2304:9\n     |\n2304 | /         queue!(stdout(),\n2305 | |             cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (self.height-1) as u16),\n2306 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2307 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2385,"character":12},"end":{"line":2391,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2386:13\n     |\n2386 | /             queue!(stdout(),\n2387 | |                 cursor::MoveTo(\n2388 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2389 | |                     (self.r - self.y + row + 1) as u16\n2390 | |                 ),\n2391 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2392 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2525,"character":12},"end":{"line":2528,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2526:13\n     |\n2526 | /             queue!(stdout(),\n2527 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, row  as u16),\n2528 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2529 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2678,"character":12},"end":{"line":2682,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2679:13\n     |\n2679 | /             queue!(stdout(),\n2680 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, (row + fromy) as u16),\n2681 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2682 | |                 terminal::Clear(ClearType::UntilNewLine), BColor(Color::Reset), FColor(Color::Reset),\n2683 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2690,"character":8},"end":{"line":2693,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2691:9\n     |\n2691 | /         queue!(stdout(),\n2692 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n2693 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2694 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:16:14.467] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[{"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"method `swap` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `swap` is never used\n   --> src/selection.rs:109:12\n    |\n38  | impl Selection {\n    | -------------- method in this implementation\n...\n109 |     pub fn swap(&mut self) {\n    |            ^^^^\n\n"}},{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:14.467] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"if this is intentional, prefix it with an underscore: `_logger`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logger`\n  --> src/main.rs:20:9\n   |\n20 |     let logger = match std::env::var(\"RED_LOG\") {\n   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_logger`\n\n"}},{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:14.467] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[{"range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}},"severity":4,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":850,"character":12},"end":{"line":850,"character":42}}},"message":"Exact error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:851:13\n    |\n851 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:16:14.468] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[{"range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n --> src/process.rs:3:34\n  |\n3 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n  |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/process.rs:168:9\n    |\n168 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::Mutex`\n   --> src/process.rs:169:9\n    |\n169 |     use tokio::sync::Mutex;\n    |         ^^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `super::Process`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `super::Process`\n   --> src/process.rs:171:9\n    |\n171 |     use super::Process;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n  --> src/process.rs:62:14\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |              ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `child_stdout_receiver`\n  --> src/process.rs:62:24\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                        ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_child_stdout_receiver`\n\n"}},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"if this is intentional, prefix it with an underscore: `_m`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `m`\n  --> src/process.rs:98:26\n   |\n98 |                     Some(m) = kill.recv() => { // killing manually\n   |                          ^ help: if this is intentional, prefix it with an underscore: `_m`\n\n"}},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/process.rs:62:20\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                    ----^^^^^^^^^^^^^^^^^^^^^\n   |                    |\n   |                    help: remove this `mut`\n\n"}},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":48,"character":11},"end":{"line":48,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":155,"character":7},"end":{"line":155,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}}]}}
[2024-11-18 20:16:14.469] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `time`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `time`\n  --> src/search.rs:29:19\n   |\n29 |     use std::{fs, time};\n   |                   ^^^^\n\n"}},{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/search.rs:90:9\n   |\n90 |     use std::sync::Arc;\n   |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::time::Instant`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::time::Instant`\n  --> src/search.rs:91:9\n   |\n91 |     use std::time::Instant;\n   |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::task`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::task`\n   --> src/search.rs:169:9\n    |\n169 |     use tokio::task;\n    |         ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":29},"end":{"line":255,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `self`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `self`\n   --> src/search.rs:258:21\n    |\n258 |     use tokio::io::{self, AsyncBufReadExt, BufReader};\n    |                     ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::path::PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::path::PathBuf`\n   --> src/search.rs:324:9\n    |\n324 |     use std::path::PathBuf;\n    |         ^^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::fs`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::fs`\n   --> src/search.rs:325:9\n    |\n325 |     use tokio::fs;\n    |         ^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search`\n   --> src/search.rs:380:9\n    |\n380 |     use crate::search;\n    |         ^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc`\n   --> src/search.rs:381:9\n    |\n381 |     use tokio::sync::mpsc;\n    |         ^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/search.rs:405:9\n    |\n405 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:404:1\n    |\n404 | mod mpsc_test {\n    | ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Mutex`\n   --> src/search.rs:407:29\n    |\n407 |     use tokio::sync::{mpsc, Mutex};\n    |                             ^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:404:1\n    |\n404 | mod mpsc_test {\n    | ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"field `preview` is never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `preview` is never read\n  --> src/search.rs:97:9\n   |\n94 |     pub struct SearchResult {\n   |                ------------ field in this struct\n...\n97 |         preview: String,\n   |         ^^^^^^^\n   |\n   = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:269:16\n    |\n269 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":274,"character":17},"end":{"line":274,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:275:18\n    |\n275 |     pub async fn search(path: &str, term: &str) -> tokio::io::Result<Vec<SearchResult>> {\n    |                  ^^^^^^\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:410:16\n    |\n410 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":415,"character":17},"end":{"line":415,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:416:18\n    |\n416 |     pub async fn search(\n    |                  ^^^^^^\n\n"}},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Display`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Display`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^\n\n"}},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `futures::future::ready`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `futures::future::ready`\n   --> src/search.rs:301:13\n    |\n301 |         use futures::future::ready;\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/search.rs:361:21\n    |\n361 |                 let mut thread_name = thread.id();\n    |                     ----^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n\n"}},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_sender`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `sender`\n   --> src/search.rs:458:17\n    |\n458 |             let sender = sender.clone();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`\n\n"}},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":8},"end":{"line":270,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":271,"character":8},"end":{"line":271,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":8},"end":{"line":411,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":412,"character":8},"end":{"line":412,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":2,"code":"non_snake_case","source":"rustc","message":"function `test_async_listFiles` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"convert the identifier to snake case: `test_async_list_files`"}],"data":{"rendered":"warning: function `test_async_listFiles` should have a snake case name\n   --> src/search.rs:328:14\n    |\n328 |     async fn test_async_listFiles() -> io::Result<()> {\n    |              ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `test_async_list_files`\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `test_async_list_files`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:389:13\n    |\n389 |             tx.send(\"sending from first handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n389 |             let _ = tx.send(\"sending from first handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:393:13\n    |\n393 |             tx2.send(\"sending from second handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n393 |             let _ = tx2.send(\"sending from second handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:460:17\n    |\n460 |                 t.await;\n    |                 ^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n460 |                 let _ = t.await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:14.471] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"mod code;\nmod editor;\nmod lsp;\nmod process;\nmod search;\nmod selection;\nmod tree;\nmod tests;\nmod utils;\nmod config;\n\nuse editor::Editor;\n\nuse log2::*;\n\n#[tokio::main]\nasync fn main() {\n    let current_dir = utils::current_directory_name().unwrap();\n\n    let logger = match std::env::var(\"RED_LOG\") {\n        Ok(p) => Some(log2::open(&p).start()),\n        Err(_) => None,\n    };\n\n    debug!(\"starting red\");\n\n    let mut editor = Editor::new(current_dir, config::get());\n\n    editor.handle_panic();\n\n    match std::env::args().nth(1) {\n        None => editor.open_left_panel(),\n        Some(path) if path == \".\" || path == \"./\" =>\n            editor.open_left_panel(),\n        Some(path) => {\n            editor.close_left_panel();\n            editor.load_file(&path);\n        }\n    }\n\n    editor.start().await;\n\n    debug!(\"stopping red\");\n}\n","uri":"file://./src/main.rs","version":0}}}
[2024-11-18 20:16:14.471] [DEBUG] lsp: -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"rust","text":"#[cfg(test)]\nmod tests_tree_sitter {\n    use std::time;\n    use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n\n    fn walk_tree(cursor: &mut TreeCursor, source_code: &str) {\n        let node = cursor.node();\n        println!(\"Node kind: {:?}\", node.kind());\n\n        let start_byte = node.start_byte();\n        let end_byte = node.end_byte();\n        let node_text = &source_code[start_byte..end_byte];\n        println!(\"Node text: {:?}\", node_text);\n\n        if cursor.goto_first_child() {\n            walk_tree(cursor, source_code);\n            cursor.goto_parent();\n        }\n\n        while cursor.goto_next_sibling() {\n            walk_tree(cursor, source_code);\n        }\n    }\n\n    // #[test]\n    // fn test_tree_sitter_walk() {\n    //     let mut parser = Parser::new();\n\n    //     let language = tree_sitter_rust::language();\n    //     parser\n    //         .set_language(language)\n    //         .expect(\"Error loading Rust grammar\");\n\n    //     let source_code = r\"\n    //     fn test() {\n    //         let a = 5;\n    //     }\n    //     \";\n\n    //     let start = time::Instant::now();\n    //     let tree = parser.parse(source_code, None).unwrap();\n    //     let elapsed = time::Instant::now() - start;\n\n    //     println!(\"Elapsed time: {:?} ms\", elapsed.as_millis());\n\n    //     let mut cursor = tree.walk();\n    //     walk_tree(&mut cursor, source_code);\n    // }\n\n    use tree_sitter::{Node, QueryMatch};\n    use streaming_iterator::StreamingIterator;\n\n    #[test]\n    fn test_tree_sitter_query() {\n        let mut parser = Parser::new();\n\n        let language = tree_sitter_rust::LANGUAGE.into();\n        parser\n            .set_language(&language)\n            .expect(\"Error loading Rust grammar\");\n\n        let source_code = r#\"\n            fn foo() {\n                let x = 42;\n                println!(\"Hello, world!\");\n            }\n        \"#;\n\n        let start = time::Instant::now();\n        let tree = parser.parse(source_code, None).unwrap();\n        let elapsed = time::Instant::now() - start;\n\n        println!(\"Elapsed time: {:?} ms\", elapsed.as_millis());\n\n        let query_pattern = r#\"\n        [\n          (string_literal)\n          (raw_string_literal)\n        ] @string\n\n        (function_item\n            name: (identifier) @function)\n\n        \"fn\" @keyword.function\n        \"#;\n\n        let query = Query::new(&language, query_pattern).unwrap();\n        let mut query_cursor = QueryCursor::new();\n        // query_cursor.set_byte_range(0..source_code.len());\n        query_cursor.set_byte_range(0..38);\n\n        let text_provider = |node: tree_sitter::Node| {\n            println!(\"text_provider\");\n            let range = node.byte_range();\n            let text_slice = &source_code.as_bytes()[range.start..range.end];\n            let iter = vec![text_slice].into_iter();\n            iter\n        };\n\n        // let dummy = |node: tree_sitter::Node| vec![].into_iter();\n        let source_code_bytes = &source_code.as_bytes();\n        let start = time::Instant::now();\n\n        let mut query_matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n        let mut matches: Vec<Node> = Vec::new();\n        while let Some(m) = query_matches.next() {\n            matches.push(m.captures[0].node);\n            println!(\"{:?}\", m);\n        }\n\n\n        let matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n        \n\n        // for qmatch in matches {\n        //     for capture in qmatch.captures {\n        //         match capture.node.utf8_text(source_code_bytes) {\n        //             Ok(text) => {\n        //                 let i = capture.index as usize;\n        //                 let capture_name = &query.capture_names()[i];\n        //                 let text = format!(\"\\x1b[{}m{}\\x1b[0m\", i + 100, text);\n        //                 println!(\"{:20} {}\", capture_name, text);\n        //             }\n        //             _ => {}\n        //         };\n        //     }\n        // }\n\n        let elapsed = time::Instant::now() - start;\n        println!(\"Elapsed time: {:?} ms\", elapsed.as_millis());\n    }\n\n    // #[test]\n//     fn test_tree_sitter_colors_ranges() {\n//         let mut parser = Parser::new();\n\n//         let language = tree_sitter_rust::language();\n//         parser\n//             .set_language(language)\n//             .expect(\"Error loading Rust grammar\");\n\n//         let source_code = r#\"\n// fn foo() {\n//     let x = 42;\n//     println!(\"Hello, world!\");\n// }\n//         \"#;\n\n//         let tree = parser.parse(source_code, None).unwrap();\n\n//         let query_pattern = r#\"\n//         [\n//           (string_literal)\n//           (raw_string_literal)\n//         ] @string\n\n//         (function_item\n//             name: (identifier) @function)\n\n//         \"fn\" @keyword.function\n//         \"#;\n\n//         let query = Query::new(language, query_pattern).unwrap();\n//         let mut query_cursor = QueryCursor::new();\n//         query_cursor.set_byte_range(0..source_code.len());\n//         // query_cursor.set_byte_range(0..38);\n//         // query_cursor.set_byte_range(0..3);\n\n//         let dummy = |node: tree_sitter::Node| vec![].into_iter();\n//         let source_code_bytes = &source_code.as_bytes();\n//         let start = time::Instant::now();\n\n//         let matches = query_cursor.matches(&query, tree.root_node(), dummy);\n\n//         let mut color_ranges: Vec<(Point, Point, usize)> = vec![];\n\n//         for qmatch in matches {\n//             for capture in qmatch.captures {\n//                 let i = capture.index as usize;\n//                 let capture_name = &query.capture_names()[i];\n\n//                 let color_range = (\n//                     capture.node.start_position(),\n//                     capture.node.end_position(),\n//                     i,\n//                 );\n//                 color_ranges.push(color_range);\n//             }\n//         }\n\n//         let elapsed = time::Instant::now() - start;\n//         println!(\"Elapsed time: {:?} ns\", elapsed.as_nanos());\n\n//         color_ranges.iter().for_each(|cr| println!(\"{:?}\", cr));\n//     }\n}\n\n#[cfg(test)]\nmod tests_text {\n    use crate::code::Code;\n\n    #[test]\n    fn test_new_text_buffer_is_empty() {\n        let text_buffer = Code::new();\n        assert!(text_buffer.is_empty());\n    }\n\n    #[test]\n    fn test_new_text_buffer_is_zero_len() {\n        let text_buffer = Code::new();\n        assert_eq!(text_buffer.len_lines(), 1);\n    }\n\n    #[test]\n    fn test_insert_char() {\n        let mut text_buffer = Code::new();\n        text_buffer.insert_char('a', 0, 0);\n        assert_eq!(text_buffer.len_lines(), 1);\n        assert_eq!(text_buffer.line_len(0), 1);\n    }\n\n    #[test]\n    fn test_remove_char() {\n        let mut text_buffer = Code::new();\n        text_buffer.insert_char('a', 0, 0);\n        text_buffer.remove_char(0, 1);\n        assert_eq!(text_buffer.len_lines(), 1);\n    }\n}\n\n#[cfg(test)]\nmod tests_selection {\n    use crate::selection::{Point, Selection};\n\n    #[test]\n    fn test_is_selected_when_active_and_inside_selection() {\n        let mut selection = Selection::new();\n        selection.start = Point { y: 1, x: 1 };\n        selection.end = Point { y: 3, x: 3 };\n        selection.active = true;\n\n        assert!(selection.contains(2, 2));\n        assert!(selection.contains(1, 1));\n        assert!(selection.contains(3, 2));\n    }\n\n    #[test]\n    fn test_is_selected_when_active_and_outside_selection() {\n        let mut selection = Selection::new();\n        selection.start = Point { y: 1, x: 1 };\n        selection.end = Point { y: 3, x: 3 };\n        selection.active = true;\n\n        assert!(!selection.is_selected(0, 0));\n        assert!(!selection.is_selected(4, 4));\n        assert!(selection.is_selected(1, 4));\n        assert!(!selection.is_selected(4, 1));\n    }\n\n    #[test]\n    fn test_is_selected_when_inactive() {\n        let mut selection = Selection::new();\n\n        assert!(!selection.contains(2, 2));\n        assert!(!selection.contains(1, 1));\n        assert!(!selection.contains(3, 3));\n    }\n}\n\n#[cfg(test)]\nmod tokio_test {\n\n    use std::process::Stdio;\n    use tokio::io;\n    use tokio::io::{AsyncBufReadExt, BufReader};\n    use tokio::process::Command;\n\n    #[tokio::test]\n    async fn test_process() -> io::Result<()> {\n        let mut cmd = Command::new(\"ls\");\n\n        cmd.stdout(Stdio::piped());\n\n        let mut child = cmd.spawn().expect(\"failed to spawn command\");\n\n        let stdout = child.stdout.take().expect(\"can not get stdout\");\n\n        let mut reader = BufReader::new(stdout).lines();\n\n        let status = child.wait().await?;\n\n        println!(\"child status was: {}\", status);\n\n        while let Some(line) = reader.next_line().await? {\n            println!(\"Line: {}\", line);\n        }\n\n        Ok(())\n    }\n}\n\n\n#[cfg(test)]\nmod color_test {\n\n    #[test]\n    fn test_colored_output(){\n        let (r, g, b) = (100, 200, 200);\n        let line = \"hello colored world\";\n        println!(\"\\u{1b}[38;2;{r};{g};{b}m{line} \\u{1b}[0m\", r=r, g=g, b=b, line=line);\n\n    }\n\n    #[test]\n    fn test_strfmt() {\n        use strfmt::strfmt;\n        let template = \"python3 {file}\";\n\n        let mut vars = std::collections::HashMap::new();\n        vars.insert(\"file\".to_string(), \"test.py\");\n        vars.insert(\"job\".to_string(), \"python developer\");\n\n        let res = strfmt(&template, &vars).unwrap();\n        println!(\"res {}\", res)\n    }\n}\n\n\n","uri":"file://./src/tests.rs","version":0}}}
[2024-11-18 20:16:14.473] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `sleep`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `sleep`\n  --> src/lsp.rs:15:19\n   |\n15 | use tokio::time::{sleep, Duration};\n   |                   ^^^^^\n\n"}},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Value`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Value`\n   --> src/lsp.rs:511:28\n    |\n511 |     use serde_json::{json, Value};\n    |                            ^^^^^\n\n"}},{"range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"if this is intentional, prefix it with an underscore: `_id`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `id`\n   --> src/lsp.rs:201:38\n    |\n201 |     pub async fn wait_for(&mut self, id: usize, mut rx: mpsc::Receiver<String>) -> Option<String> {\n    |                                      ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n"}},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"original diagnostic"}]},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/lsp.rs:220:13\n    |\n220 |         let result = self.wait_for(id, rx).await;\n    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:215:18\n    |\n215 |         let (tx, mut rx) = tokio::sync::mpsc::channel::<String>(1);\n    |                  ----^^\n    |                  |\n    |                  help: remove this `mut`\n\n"}},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/lsp.rs:81:13\n   |\n81 |         let mut stdout = child.stdout.take().unwrap();\n   |             ----^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"method `stop` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `stop` is never used\n   --> src/lsp.rs:178:18\n    |\n39  | impl Lsp {\n    | -------- method in this implementation\n...\n178 |     pub async fn stop(&mut self) {\n    |                  ^^^^\n\n"}},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":582,"character":11},"end":{"line":582,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_configuration` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_configuration` is never used\n   --> src/lsp.rs:583:12\n    |\n583 |     pub fn did_change_configuration() -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":617,"character":11},"end":{"line":617,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_watched_files` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_watched_files` is never used\n   --> src/lsp.rs:618:12\n    |\n618 |     pub fn did_change_watched_files(path: &str) -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":631,"character":11},"end":{"line":631,"character":24}},"severity":2,"code":"dead_code","source":"rustc","message":"function `document_link` is never used","tags":[1],"data":{"rendered":"warning: function `document_link` is never used\n   --> src/lsp.rs:632:12\n    |\n632 |     pub fn document_link(path: &str) -> String {\n    |            ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":681,"character":11},"end":{"line":681,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"function `completion` is never used","tags":[1],"data":{"rendered":"warning: function `completion` is never used\n   --> src/lsp.rs:682:12\n    |\n682 |     pub fn completion(id: usize, path: &str, line: usize, character: usize) -> String {\n    |            ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:88:17\n   |\n88 |                 stdin.write_all(header.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n88 |                 let _ = stdin.write_all(header.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:89:17\n   |\n89 |                 stdin.write_all(m.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n89 |                 let _ = stdin.write_all(m.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:90:17\n   |\n90 |                 stdin.flush().await;\n   |                 ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n90 |                 let _ = stdin.flush().await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:120:17\n    |\n120 |                 reader.read_exact(&mut content).await;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n120 |                 let _ = reader.read_exact(&mut content).await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}}},"message":"original diagnostic"}]},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:134:29\n    |\n134 | ...                   s.send(msg).await; // send to request channel\n    |                       ^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n134 |                             let _ = s.send(msg).await; // send to request channel\n    |                             +++++++\n\n"}},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:146:41\n    |\n146 | ...                   diagnostic_send.send(d.params).await;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n146 |                                         let _ = diagnostic_send.send(d.params).await;\n    |                                         +++++++\n\n"}},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}}},"message":"original diagnostic"}]},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `isIncomplete` should have a snake case name\n`#[warn(non_snake_case)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"convert the identifier to snake case: `is_incomplete`"}],"data":{"rendered":"warning: structure field `isIncomplete` should have a snake case name\n   --> src/lsp.rs:712:13\n    |\n712 |         pub isIncomplete: Option<bool>,\n    |             ^^^^^^^^^^^^ help: convert the identifier to snake case: `is_incomplete`\n    |\n    = note: `#[warn(non_snake_case)]` on by default\n\n"}},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `is_incomplete`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `sortText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"convert the identifier to snake case: `sort_text`"}],"data":{"rendered":"warning: structure field `sortText` should have a snake case name\n   --> src/lsp.rs:722:13\n    |\n722 |         pub sortText: Option<String>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `sort_text`\n\n"}},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `sort_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"convert the identifier to snake case: `insert_text`"}],"data":{"rendered":"warning: structure field `insertText` should have a snake case name\n   --> src/lsp.rs:723:13\n    |\n723 |         pub insertText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `insert_text`\n\n"}},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `filterText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"convert the identifier to snake case: `filter_text`"}],"data":{"rendered":"warning: structure field `filterText` should have a snake case name\n   --> src/lsp.rs:724:13\n    |\n724 |         pub filterText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `filter_text`\n\n"}},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `filter_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertTextFormat` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"convert the identifier to snake case: `insert_text_format`"}],"data":{"rendered":"warning: structure field `insertTextFormat` should have a snake case name\n   --> src/lsp.rs:725:13\n    |\n725 |         pub insertTextFormat: Option<f64>,\n    |             ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `insert_text_format`\n\n"}},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text_format`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"original diagnostic"}]},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `textEdit` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"convert the identifier to snake case: `text_edit`"}],"data":{"rendered":"warning: structure field `textEdit` should have a snake case name\n   --> src/lsp.rs:726:13\n    |\n726 |         pub textEdit: Option<TextEdit>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `text_edit`\n\n"}},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `text_edit`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `newText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"convert the identifier to snake case: `new_text`"}],"data":{"rendered":"warning: structure field `newText` should have a snake case name\n   --> src/lsp.rs:735:13\n    |\n735 |         pub newText: String,\n    |             ^^^^^^^ help: convert the identifier to snake case: `new_text`\n\n"}},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `new_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n   --> src/lsp.rs:452:10\n    |\n452 |     let (send, recv) = tokio::sync::oneshot::channel::<()>();\n    |          ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:463:9\n    |\n463 |     let mut stdout = child.stdout.take().unwrap();\n    |         ----^^^^^^\n    |         |\n    |         help: remove this `mut`\n\n"}},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:406:5\n    |\n406 |     lsp.start(lang, \"rust-analyzer\", None);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n406 |     let _ = lsp.start(lang, \"rust-analyzer\", None);\n    |     +++++++\n\n"}},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":4},"end":{"line":411,"character":17}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused implementer of `futures::Future` that must be used\nfutures do nothing unless you `.await` or poll them","data":{"rendered":"warning: unused implementer of `futures::Future` that must be used\n   --> src/lsp.rs:412:5\n    |\n412 |     lsp.init(dir);\n    |     ^^^^^^^^^^^^^\n    |\n    = note: futures do nothing unless you `.await` or poll them\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:469:13\n    |\n469 |             stdin.write_all(m.as_bytes()).await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n469 |             let _ = stdin.write_all(m.as_bytes()).await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:487:9\n    |\n487 |         send2_arc.send(\"hello\\n\".to_string()).await;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n487 |         let _ = send2_arc.send(\"hello\\n\".to_string()).await;\n    |         +++++++\n\n"}},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:14.476] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"function `hex_to_rgb` is never used","tags":[1],"data":{"rendered":"warning: function `hex_to_rgb` is never used\n  --> src/utils.rs:13:8\n   |\n13 | pub fn hex_to_rgb(hex_color: &str) -> (u8, u8, u8) {\n   |        ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":77,"character":7},"end":{"line":77,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"function `pad_left` is never used","tags":[1],"data":{"rendered":"warning: function `pad_left` is never used\n  --> src/utils.rs:78:8\n   |\n78 | pub fn pad_left(str: &str, length: usize) -> String {\n   |        ^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:14.476] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[{"range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":57},"end":{"line":3,"character":69}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":71},"end":{"line":3,"character":76}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueryMatch`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueryMatch`\n  --> src/tests.rs:50:29\n   |\n50 |     use tree_sitter::{Node, QueryMatch};\n   |                             ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}}},"message":"original diagnostic"}]},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_text_provider`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `text_provider`\n  --> src/tests.rs:92:13\n   |\n92 |         let text_provider = |node: tree_sitter::Node| {\n   |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_text_provider`\n\n"}},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `source_code_bytes`\n   --> src/tests.rs:101:13\n    |\n101 |         let source_code_bytes = &source_code.as_bytes();\n    |             ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_code_bytes`\n\n"}},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"if this is intentional, prefix it with an underscore: `_matches`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `matches`\n   --> src/tests.rs:112:13\n    |\n112 |         let matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`\n\n"}},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"function `walk_tree` is never used","tags":[1],"data":{"rendered":"warning: function `walk_tree` is never used\n --> src/tests.rs:6:8\n  |\n6 |     fn walk_tree(cursor: &mut TreeCursor, source_code: &str) {\n  |        ^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:14.485] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":854,"character":23},"end":{"line":854,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":878,"character":23},"end":{"line":878,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":932,"character":23},"end":{"line":932,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"if this is intentional, prefix it with an underscore: `_name`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `name`\n   --> src/code.rs:579:29\n    |\n579 |                         let name = capture_name.split('.').next().unwrap_or(capture_name);\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n"}},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":11},"end":{"line":168,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":361,"character":11},"end":{"line":361,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}},"severity":2,"code":"dead_code","source":"rustc","message":"field `row` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `row` is never read\n   --> src/code.rs:660:9\n    |\n658 | pub struct Runnable {\n    |            -------- field in this struct\n659 |     pub cmd: String,\n660 |     pub row: usize,\n    |         ^^^\n\n"}},{"range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}}},"message":"original diagnostic"}]},{"range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"field `search_pattern` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `search_pattern` is never read\n   --> src/code.rs:779:5\n    |\n777 | struct EarlyTerminationSearch<'a> {\n    |        ---------------------- field in this struct\n778 |     char_iter: ropey::iter::Chars<'a>,\n779 |     search_pattern: &'a str,\n    |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"method `move_line_up` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `move_line_up` is never used\n    --> src/code.rs:1082:12\n     |\n1038 | impl Code {\n     | --------- method in this implementation\n...\n1082 |     pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n     |            ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:867:17\n    |\n867 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:887:17\n    |\n887 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:940:17\n    |\n940 |             let result = rope_search(slice, substring);\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}}],"version":0}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":854,"character":23},"end":{"line":854,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":878,"character":23},"end":{"line":878,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":932,"character":23},"end":{"line":932,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"}],"version":0}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[]}}
[2024-11-18 20:16:14.617] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[]}}
[2024-11-18 20:16:14.618] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[]}}
[2024-11-18 20:16:15.651] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":854,"character":23},"end":{"line":854,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":878,"character":23},"end":{"line":878,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":932,"character":23},"end":{"line":932,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]}],"version":0}}
[2024-11-18 20:16:15.651] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:15.665] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","diagnostics":[{"range":{"start":{"line":854,"character":23},"end":{"line":854,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":878,"character":23},"end":{"line":878,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":932,"character":23},"end":{"line":932,"character":32}},"severity":2,"code":"unused_braces","codeDescription":{"href":"https://doc.rust-lang.org/rustc/?search=unused_braces"},"source":"rust-analyzer","message":"Unnecessary braces in use statement"},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `rayon::vec`\n`#[warn(unused_imports)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `rayon::vec`\n --> src/code.rs:2:5\n  |\n2 | use rayon::vec;\n  |     ^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":14}}},"message":"original diagnostic"}]},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"if this is intentional, prefix it with an underscore: `_name`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `name`\n   --> src/code.rs:579:29\n    |\n579 |                         let name = capture_name.split('.').next().unwrap_or(capture_name);\n    |                             ^^^^ help: if this is intentional, prefix it with an underscore: `_name`\n\n"}},{"range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_name`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":578,"character":28},"end":{"line":578,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:867:17\n    |\n867 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":866,"character":16},"end":{"line":866,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:887:17\n    |\n887 |             let result: Vec<(usize, usize)> = search_iter.collect();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":886,"character":16},"end":{"line":886,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/code.rs:940:17\n    |\n940 |             let result = rope_search(slice, substring);\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":939,"character":16},"end":{"line":939,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `lines_from`, `get_from`, and `from_to` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `lines_from`, `get_from`, and `from_to` are never used\n   --> src/code.rs:333:12\n    |\n37  | impl Code {\n    | --------- methods in this implementation\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}},"severity":2,"code":"dead_code","source":"rustc","message":"field `row` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `row` is never read\n   --> src/code.rs:660:9\n    |\n658 | pub struct Runnable {\n    |            -------- field in this struct\n659 |     pub cmd: String,\n660 |     pub row: usize,\n    |         ^^^\n\n"}},{"range":{"start":{"line":657,"character":11},"end":{"line":657,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":659,"character":8},"end":{"line":659,"character":11}}},"message":"original diagnostic"}]},{"range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"field `search_pattern` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `search_pattern` is never read\n   --> src/code.rs:779:5\n    |\n777 | struct EarlyTerminationSearch<'a> {\n    |        ---------------------- field in this struct\n778 |     char_iter: ropey::iter::Chars<'a>,\n779 |     search_pattern: &'a str,\n    |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":776,"character":7},"end":{"line":776,"character":29}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":778,"character":4},"end":{"line":778,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":55,"character":11},"end":{"line":55,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":11},"end":{"line":168,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":332,"character":11},"end":{"line":332,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":336,"character":11},"end":{"line":336,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":340,"character":11},"end":{"line":340,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":361,"character":11},"end":{"line":361,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n`#[warn(dead_code)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":36,"character":0},"end":{"line":36,"character":9}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `from_str`, `set_lang`, `lines_from`, `get_from`, `from_to`, and `is_empty` are never used\n   --> src/code.rs:56:12\n    |\n37  | impl Code {\n    | --------- associated items in this implementation\n...\n56  |     pub fn from_str(text: &str) -> Self {\n    |            ^^^^^^^^\n...\n169 |     pub fn set_lang(&mut self, lang:String, conf: &Config) {\n    |            ^^^^^^^^\n...\n333 |     pub fn lines_from(&self, from: usize) -> Option<Lines> {\n    |            ^^^^^^^^^^\n...\n337 |     pub fn get_from(&self, from: usize) -> Lines {\n    |            ^^^^^^^^\n...\n341 |     pub fn from_to(&self, row: usize, col: usize, row1: usize, col1: usize) -> RopeSlice {\n    |            ^^^^^^^\n...\n362 |     pub fn is_empty(&self) -> bool {\n    |            ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"}},{"range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"method `move_line_up` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `move_line_up` is never used\n    --> src/code.rs:1082:12\n     |\n1038 | impl Code {\n     | --------- method in this implementation\n...\n1082 |     pub fn move_line_up(&mut self, line_idx: usize) -> bool {\n     |            ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1037,"character":0},"end":{"line":1037,"character":9}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/code.rs","range":{"start":{"line":1081,"character":11},"end":{"line":1081,"character":23}}},"message":"original diagnostic"}]}],"version":0}}
[2024-11-18 20:16:15.666] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","diagnostics":[{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Serialize`\n --> src/config.rs:1:26\n  |\n1 | use serde::{Deserialize, Serialize};\n  |                          ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":34}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/config.rs","range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:15.666] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","diagnostics":[{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::fs::File`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::fs::File`\n --> src/tree.rs:2:5\n  |\n2 | use std::fs::File;\n  |     ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `PathBuf`\n --> src/tree.rs:3:23\n  |\n3 | use std::path::{Path, PathBuf};\n  |                       ^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":2,"character":22},"end":{"line":2,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueueableCommand`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueueableCommand`\n --> src/tree.rs:5:32\n  |\n5 | use crossterm::{cursor, queue, QueueableCommand, style::Print};\n  |                                ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":29},"end":{"line":4,"character":47}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":4,"character":31},"end":{"line":4,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde::de`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde::de`\n --> src/tree.rs:7:5\n  |\n7 | use serde::de;\n  |     ^^^^^^^^^\n\n"}},{"range":{"start":{"line":6,"character":0},"end":{"line":7,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::watch::error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::watch::error`\n --> src/tree.rs:8:5\n  |\n8 | use tokio::sync::watch::error;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":7,"character":0},"end":{"line":8,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":7,"character":4},"end":{"line":7,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `SetBackgroundColor as BColor`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `SetBackgroundColor as BColor`\n  --> src/tree.rs:12:31\n   |\n12 | use crossterm::style::{Color, SetBackgroundColor as BColor, SetForegroundColor as FColor};\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":11,"character":28},"end":{"line":11,"character":58}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":11,"character":30},"end":{"line":11,"character":58}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":44},"end":{"line":528,"character":52}}},"message":"original diagnostic"}]},{"range":{"start":{"line":528,"character":54},"end":{"line":528,"character":70}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `TreeNodeIterator`, `TreeNode`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":528,"character":42},"end":{"line":528,"character":70}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `TreeNodeIterator`, `TreeNode`\n   --> src/tree.rs:529:45\n    |\n529 |     use super::{list_files_and_directories, TreeNode, TreeNodeIterator};\n    |                                             ^^^^^^^^  ^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\nunreachable pattern","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}}},"message":"matches any value"}],"data":{"rendered":"warning: unreachable pattern\n   --> src/tree.rs:464:13\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |             ------------------------------------------------------------- matches any value\n...\n464 |             _ => {}\n    |             ^ unreachable pattern\n\n"}},{"range":{"start":{"line":454,"character":12},"end":{"line":454,"character":73}},"severity":4,"code":"unreachable_patterns","source":"rustc","message":"matches any value","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":463,"character":12},"end":{"line":463,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `row`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"try ignoring the field: `row: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `row`\n   --> src/tree.rs:455:44\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                            ^^^ help: try ignoring the field: `row: _`\n\n"}},{"range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `row: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":43},"end":{"line":454,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `column`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"try ignoring the field: `column: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `column`\n   --> src/tree.rs:455:49\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                 ^^^^^^ help: try ignoring the field: `column: _`\n\n"}},{"range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `column: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":48},"end":{"line":454,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `modifiers`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"try ignoring the field: `modifiers: _`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `modifiers`\n   --> src/tree.rs:455:63\n    |\n455 |             crossterm::event::MouseEvent { row, column, kind, modifiers } =>  {\n    |                                                               ^^^^^^^^^ help: try ignoring the field: `modifiers: _`\n\n"}},{"range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}},"severity":4,"code":"unused_variables","source":"rustc","message":"try ignoring the field: `modifiers: _`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":454,"character":62},"end":{"line":454,"character":71}}},"message":"original diagnostic"}]},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"if this is intentional, prefix it with an underscore: `_button`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `button`\n   --> src/tree.rs:459:60\n    |\n459 |                     crossterm::event::MouseEventKind::Down(button) => {}\n    |                                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_button`\n\n"}},{"range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_button`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":458,"character":59},"end":{"line":458,"character":65}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Write`","tags":[1],"data":{"rendered":"warning: unused import: `Write`\n --> src/tree.rs:4:21\n  |\n4 | use std::io::{self, Write};\n  |                     ^^^^^\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n  --> src/tree.rs:45:21\n   |\n45 |                 Err(e) => { debug!(\"cant get abs_path for {}\", name); continue;},\n   |                     ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":44,"character":20},"end":{"line":44,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:271:17\n    |\n271 |             for i in 0..padding_left {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":270,"character":16},"end":{"line":270,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:276:17\n    |\n276 |             for i in 0..depth {\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":275,"character":16},"end":{"line":275,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"if this is intentional, prefix it with an underscore: `_i`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `i`\n   --> src/tree.rs:288:21\n    |\n288 |                 for i in 0..self.width-col-1 {\n    |                     ^ help: if this is intentional, prefix it with an underscore: `_i`\n\n"}},{"range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_i`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":287,"character":20},"end":{"line":287,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}},"severity":2,"code":"dead_code","source":"rustc","message":"field `dir` is never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `dir` is never read\n   --> src/tree.rs:146:5\n    |\n143 | pub struct TreeView {\n    |            -------- field in this struct\n...\n146 |     dir: String,\n    |     ^^^\n\n"}},{"range":{"start":{"line":142,"character":11},"end":{"line":142,"character":19}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":145,"character":4},"end":{"line":145,"character":7}}},"message":"original diagnostic"}]},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"associated items in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:366:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/tree.rs:97:21\n   |\n97 |                     child.expand();\n   |                     ^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n97 |                     let _ = child.expand();\n   |                     +++++++\n\n"}},{"range":{"start":{"line":96,"character":20},"end":{"line":96,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":96,"character":20},"end":{"line":96,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:179:9\n    |\n179 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n179 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":178,"character":8},"end":{"line":178,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:228:9\n    |\n228 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n228 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":227,"character":8},"end":{"line":227,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":227,"character":8},"end":{"line":227,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:234:9\n    |\n234 |         root.expand();\n    |         ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n234 |         let _ = root.expand();\n    |         +++++++\n\n"}},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":233,"character":8},"end":{"line":233,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":254,"character":8},"end":{"line":254,"character":36}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:255:9\n    |\n255 |         queue!(stdout, cursor::Hide);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":259,"character":12},"end":{"line":259,"character":55}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:260:13\n    |\n260 |             queue!(stdout, cursor::MoveTo(0, i as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":272,"character":16},"end":{"line":272,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:273:17\n    |\n273 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":277,"character":16},"end":{"line":277,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:278:17\n    |\n278 |                 queue!(stdout, Print(' '));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":282,"character":16},"end":{"line":282,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:283:17\n    |\n283 |                 queue!(stdout, FColor(color), Print(ch));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":288,"character":20},"end":{"line":288,"character":46}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:289:21\n    |\n289 |                     queue!(stdout, Print(' '));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":291,"character":12},"end":{"line":291,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:292:13\n    |\n292 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":297,"character":12},"end":{"line":297,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:298:13\n    |\n298 |             queue!(stdout, cursor::MoveTo(0, count as u16));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":298,"character":12},"end":{"line":298,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:299:13\n    |\n299 |             queue!(stdout, Print(\" \".repeat(self.width-1)));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":299,"character":12},"end":{"line":299,"character":63}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:300:13\n    |\n300 |             queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":315,"character":8},"end":{"line":315,"character":79}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:316:9\n    |\n316 |         queue!(stdout,cursor::Show, cursor::MoveTo(0, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":316,"character":8},"end":{"line":316,"character":38}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:317:9\n    |\n317 |         queue!(stdout, Print(&search));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":317,"character":8},"end":{"line":317,"character":68}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:318:9\n    |\n318 |         queue!(stdout, Print(\" \".repeat(self.width-search.len()-1)));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":318,"character":8},"end":{"line":318,"character":59}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:319:9\n    |\n319 |         queue!(stdout, FColor(Color::DarkGrey), Print('│'));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":319,"character":8},"end":{"line":319,"character":106}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:320:9\n    |\n320 |         queue!(stdout, cursor::MoveTo((prefix.len() + self.search.index) as u16, (self.height -1) as u16));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:394:13\n    |\n394 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n394 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":393,"character":12},"end":{"line":393,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":393,"character":12},"end":{"line":393,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:412:13\n    |\n412 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n412 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":411,"character":12},"end":{"line":411,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":411,"character":12},"end":{"line":411,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:429:13\n    |\n429 |             node.expand();\n    |             ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n429 |             let _ = node.expand();\n    |             +++++++\n\n"}},{"range":{"start":{"line":428,"character":12},"end":{"line":428,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":428,"character":12},"end":{"line":428,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/tree.rs:435:21\n    |\n435 |                     child.expand();\n    |                     ^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n435 |                     let _ = child.expand();\n    |                     +++++++\n\n"}},{"range":{"start":{"line":434,"character":20},"end":{"line":434,"character":20}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":434,"character":20},"end":{"line":434,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"method `print` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `print` is never used\n  --> src/tree.rs:26:12\n   |\n22 | impl TreeNode {\n   | ------------- method in this implementation\n...\n26 |     pub fn print(&self) { println!(\"node {:?}\", self); }\n   |            ^^^^^\n\n"}},{"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":13}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":25,"character":11},"end":{"line":25,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":322,"character":11},"end":{"line":322,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":326,"character":7},"end":{"line":326,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":353,"character":11},"end":{"line":353,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":365,"character":11},"end":{"line":365,"character":26}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":390,"character":7},"end":{"line":390,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":452,"character":17},"end":{"line":452,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tree.rs","range":{"start":{"line":164,"character":0},"end":{"line":164,"character":13}}},"message":"associated items in this implementation"}],"tags":[1],"data":{"rendered":"warning: associated items `print`, `print_node`, `find_and_expand`, `find_and_toggle`, `find_by_index_expand`, and `handle_mouse` are never used\n   --> src/tree.rs:323:12\n    |\n165 | impl TreeView {\n    | ------------- associated items in this implementation\n...\n323 |     pub fn print(&self) {\n    |            ^^^^^\n...\n327 |     fn print_node(&self, node: &TreeNode, depth: usize, count: &mut usize) {\n    |        ^^^^^^^^^^\n...\n354 |     pub fn find_and_expand(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n366 |     pub fn find_and_toggle(&mut self, index: usize) {\n    |            ^^^^^^^^^^^^^^^\n...\n391 |     fn find_by_index_expand(node: &mut TreeNode, index: usize, count: &mut usize) -> bool {\n    |        ^^^^^^^^^^^^^^^^^^^^\n...\n453 |     pub async fn handle_mouse(&mut self, e: crossterm::event::MouseEvent) {\n    |                  ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":514,"character":3},"end":{"line":514,"character":29}},"severity":2,"code":"dead_code","source":"rustc","message":"function `list_files_and_directories` is never used","tags":[1],"data":{"rendered":"warning: function `list_files_and_directories` is never used\n   --> src/tree.rs:515:4\n    |\n515 | fn list_files_and_directories(path: &str) -> io::Result<Vec<String>> {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:15.668] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","diagnostics":[{"range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `KeyEventKind`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `KeyEventKind`\n  --> src/editor.rs:11:46\n   |\n11 |     MouseButton, MouseEvent, MouseEventKind, KeyEventKind\n   |                                              ^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":10,"character":43},"end":{"line":10,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":10,"character":45},"end":{"line":10,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":18,"character":4},"end":{"line":18,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":9}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `cursor::position`, `event`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":17,"character":10},"end":{"line":19,"character":9}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `cursor::position`, `event`\n  --> src/editor.rs:19:5\n   |\n19 |     cursor::position,\n   |     ^^^^^^^^^^^^^^^^\n20 |     event, execute, queue,\n   |     ^^^^^\n\n"}},{"range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Runnable`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Runnable`\n  --> src/editor.rs:27:35\n   |\n27 | use crate::code::{Code, NodePath, Runnable};\n   |                                   ^^^^^^^^\n\n"}},{"range":{"start":{"line":26,"character":32},"end":{"line":26,"character":42}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":26,"character":34},"end":{"line":26,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search::search::FileSearchResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search::search::FileSearchResult`\n  --> src/editor.rs:29:5\n   |\n29 | use crate::search::search::FileSearchResult;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":28,"character":4},"end":{"line":28,"character":43}}},"message":"original diagnostic"}]},{"range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `HoverResult`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `HoverResult`\n  --> src/editor.rs:32:78\n   |\n32 | use crate::lsp::lsp_messages::{CompletionItem, Diagnostic, DiagnosticParams, HoverResult, ReferencesResult};\n   |                                                                              ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":31,"character":75},"end":{"line":31,"character":88}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":31,"character":77},"end":{"line":31,"character":88}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `BufReader`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `BufReader`\n  --> src/editor.rs:40:49\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                                 ^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":46},"end":{"line":39,"character":57}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":39,"character":48},"end":{"line":39,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":21},"end":{"line":40,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":40,"character":28},"end":{"line":40,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Child`, `Command`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":40,"character":0},"end":{"line":41,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Child`, `Command`\n  --> src/editor.rs:41:22\n   |\n41 | use tokio::process::{Child, Command};\n   |                      ^^^^^  ^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc::Receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc::Receiver`\n  --> src/editor.rs:42:5\n   |\n42 | use tokio::sync::mpsc::Receiver;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":41,"character":4},"end":{"line":41,"character":31}}},"message":"original diagnostic"}]},{"range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:920:67\n    |\n920 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n920 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n920 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}},"severity":4,"code":"unused_parens","source":"rustc","message":"remove these parentheses","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"original diagnostic"}]},{"range":{"start":{"line":919,"character":69},"end":{"line":919,"character":70}},"severity":2,"code":"unused_parens","source":"rustc","message":"unnecessary parentheses around function argument\n`#[warn(unused_parens)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":919,"character":66},"end":{"line":919,"character":67}}},"message":"remove these parentheses"}],"data":{"rendered":"warning: unnecessary parentheses around function argument\n   --> src/editor.rs:920:67\n    |\n920 |                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n    |                                                                   ^  ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\nhelp: remove these parentheses\n    |\n920 -                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue((87))), // todo: make it dynamic\n920 +                 true => (format!(\"  {}  \", '▶'), Color::AnsiValue(87)), // todo: make it dynamic\n    |\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`\n`#[warn(unused_variables)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:306:34\n    |\n306 |                         Some(Err(e)) => { /* println!(\"Error: {:?}\\r\", e) */ } ,\n    |                                  ^ help: if this is intentional, prefix it with an underscore: `_e`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"}},{"range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":305,"character":33},"end":{"line":305,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_start`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `start`\n   --> src/editor.rs:848:13\n    |\n848 |         let start = time::Instant::now();\n    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\n"}},{"range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_start`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":847,"character":12},"end":{"line":847,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_chars_len`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `chars_len`\n   --> src/editor.rs:934:17\n    |\n934 |             let chars_len = line.chars().len();\n    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chars_len`\n\n"}},{"range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_chars_len`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":933,"character":16},"end":{"line":933,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_c`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `c`\n    --> src/editor.rs:1018:17\n     |\n1018 |             for c in self.lp_width..self.width-status.chars().count()-1 {\n     |                 ^ help: if this is intentional, prefix it with an underscore: `_c`\n\n"}},{"range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_c`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1017,"character":16},"end":{"line":1017,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable\n`#[warn(unused_mut)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2176:26\n     |\n2176 |             let (height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n     |\n     = note: `#[warn(unused_mut)]` on by default\n\n"}},{"range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2175,"character":25},"end":{"line":2175,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2542:26\n     |\n2542 |         let (mut height, mut width) = (max_visible, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2541,"character":25},"end":{"line":2541,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":399,"character":20},"end":{"line":399,"character":38}},"severity":2,"code":"unreachable_patterns","source":"rustc","message":"unreachable pattern\n`#[warn(unreachable_patterns)]` on by default","data":{"rendered":"warning: unreachable pattern\n   --> src/editor.rs:400:21\n    |\n400 |                     KeyCode::Char('g') => {\n    |                     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\n"}},{"range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2403:22\n     |\n2403 |         let (height, mut width) = (5, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2402,"character":21},"end":{"line":2402,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":20}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":17}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2328:14\n     |\n2328 |         let (mut end, mut selected, mut selected_offset) = (false, 0, 0);\n     |              ----^^^\n     |              |\n     |              help: remove this `mut`\n\n"}},{"range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":17}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2327,"character":13},"end":{"line":2327,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":30}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":25}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:2329:22\n     |\n2329 |         let (height, mut width) = (10, 30);\n     |                      ----^^^^^\n     |                      |\n     |                      help: remove this `mut`\n\n"}},{"range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":25}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":2328,"character":21},"end":{"line":2328,"character":30}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":19}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1937:13\n     |\n1937 |         let mut end = false;\n     |             ----^^^\n     |             |\n     |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1936,"character":12},"end":{"line":1936,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":34}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":29}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1959:26\n     |\n1959 |             let (height, mut width) = (5, 30);\n     |                          ----^^^^^\n     |                          |\n     |                          help: remove this `mut`\n\n"}},{"range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":29}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1958,"character":25},"end":{"line":1958,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":27}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":20}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n    --> src/editor.rs:1971:17\n     |\n1971 |             let mut options = &completion_result.items;\n     |                 ----^^^^^^^\n     |                 |\n     |                 help: remove this `mut`\n\n"}},{"range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":20}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1970,"character":16},"end":{"line":1970,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":39,"character":33},"end":{"line":39,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n  --> src/editor.rs:40:34\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":39,"character":16},"end":{"line":39,"character":31}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncBufReadExt`","tags":[1],"data":{"rendered":"warning: unused import: `AsyncBufReadExt`\n  --> src/editor.rs:40:17\n   |\n40 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n   |                 ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_dir`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `dir`\n   --> src/editor.rs:127:16\n    |\n127 |     pub fn new(dir: String, config: Config) -> Self {\n    |                ^^^ help: if this is intentional, prefix it with an underscore: `_dir`\n\n"}},{"range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_dir`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":126,"character":15},"end":{"line":126,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_e`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `e`\n   --> src/editor.rs:170:17\n    |\n170 |             Err(e) => {},\n    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`\n\n"}},{"range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_e`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":169,"character":16},"end":{"line":169,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_logo_width`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logo_width`\n    --> src/editor.rs:1123:13\n     |\n1123 |         let logo_width = lines.get(0).unwrap().len();\n     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_logo_width`\n\n"}},{"range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logo_width`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1122,"character":12},"end":{"line":1122,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":828,"character":7},"end":{"line":828,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:829:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n829  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1118 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":828,"character":7},"end":{"line":828,"character":16}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1117,"character":7},"end":{"line":1117,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `clear_all` and `draw_logo` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":125,"character":0},"end":{"line":125,"character":11}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `clear_all` and `draw_logo` are never used\n    --> src/editor.rs:829:8\n     |\n126  | impl Editor {\n     | ----------- methods in this implementation\n...\n829  |     fn clear_all(&mut self) {\n     |        ^^^^^^^^^\n...\n1118 |     fn draw_logo(&mut self) {\n     |        ^^^^^^^^^\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled\n`#[warn(unused_must_use)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:535:29\n    |\n535 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n535 |                             let _ = node.toggle();\n    |                             +++++++\n\n"}},{"range":{"start":{"line":534,"character":28},"end":{"line":534,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":534,"character":28},"end":{"line":534,"character":41}}},"message":"original diagnostic"}]},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:653:45\n    |\n653 | ...                   node.toggle();\n    |                       ^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n653 |                                             let _ = node.toggle();\n    |                                             +++++++\n\n"}},{"range":{"start":{"line":652,"character":44},"end":{"line":652,"character":44}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":652,"character":44},"end":{"line":652,"character":57}}},"message":"original diagnostic"}]},{"range":{"start":{"line":850,"character":12},"end":{"line":850,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:851:13\n    |\n851 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":851,"character":43},"end":{"line":851,"character":73}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:852:44\n    |\n852 |             if self.tree_view.is_search(){ queue!(stdout(), cursor::Show); }\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":915,"character":12},"end":{"line":915,"character":85}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:916:13\n    |\n916 |             queue!(stdout, BColor(Color::Reset), FColor(lncolor), Print(line_number));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":924,"character":12},"end":{"line":924,"character":97}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:925:13\n    |\n925 |             queue!(stdout, BColor(Color::Reset), FColor(run_or_empty_color), Print(run_or_empty));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":925,"character":12},"end":{"line":925,"character":70}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:926:13\n    |\n926 |             queue!(stdout, BColor(Color::Reset), FColor(Color::Reset));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1012,"character":16},"end":{"line":1012,"character":80}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1013:17\n     |\n1013 |                 queue!(stdout, cursor::MoveTo(self.lp_width as u16, row as u16));\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1016,"character":12},"end":{"line":1016,"character":84}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1017:13\n     |\n1017 |             queue!(stdout, cursor::MoveTo(self.lp_width as u16, self.height as u16));\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1052,"character":8},"end":{"line":1052,"character":50}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1053:9\n     |\n1053 |         queue!(stdout(), Print(\" \".repeat(space)));\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1130,"character":12},"end":{"line":1133,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1131:13\n     |\n1131 | /             queue!(stdout,\n1132 | |                 cursor::MoveTo(self.lp_width as u16, r as u16),\n1133 | |                 terminal::Clear(ClearType::UntilNewLine)\n1134 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1819,"character":8},"end":{"line":1822,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1820:9\n     |\n1820 | /         queue!(stdout(),\n1821 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1822 | |             BColor(Color::Reset), FColor(Color::Reset), Print(line),\n1823 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1823,"character":8},"end":{"line":1825,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1824:9\n     |\n1824 | /         queue!(stdout(),\n1825 | |             cursor::MoveTo((self.lp_width + 1 + prefix.len() + x) as u16, y as u16),\n1826 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1828:9\n     |\n1828 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1828 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1827,"character":8},"end":{"line":1827,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":1838,"character":8},"end":{"line":1841,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1839:9\n     |\n1839 | /         queue!(stdout(),\n1840 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n1841 | |             BColor(Color::Reset), FColor(Color::Reset), Print(\" \".repeat(line.chars().count())),\n1842 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":24}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:1844:9\n     |\n1844 |         stdout().flush();\n     |         ^^^^^^^^^^^^^^^^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n     |\n1844 |         let _ = stdout().flush();\n     |         +++++++\n\n"}},{"range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":1843,"character":8},"end":{"line":1843,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":2067,"character":12},"end":{"line":2075,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2068:13\n     |\n2068 | /             queue!(stdout(),\n2069 | |                 cursor::MoveTo(\n2070 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2071 | |                     (self.r - self.y + row + 1) as u16\n...    |\n2075 | |                 BColor(Color::Reset), FColor(Color::Reset),\n2076 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2295,"character":12},"end":{"line":2298,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2296:13\n     |\n2296 | /             queue!(stdout(),\n2297 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (row + fromy) as u16),\n2298 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2299 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2303,"character":8},"end":{"line":2306,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2304:9\n     |\n2304 | /         queue!(stdout(),\n2305 | |             cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 2) as u16, (self.height-1) as u16),\n2306 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2307 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2385,"character":12},"end":{"line":2391,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2386:13\n     |\n2386 | /             queue!(stdout(),\n2387 | |                 cursor::MoveTo(\n2388 | |                     (self.c + self.lp_width + self.ln_width + self.lns_width - 2) as u16,\n2389 | |                     (self.r - self.y + row + 1) as u16\n2390 | |                 ),\n2391 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2392 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2525,"character":12},"end":{"line":2528,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2526:13\n     |\n2526 | /             queue!(stdout(),\n2527 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, row  as u16),\n2528 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),  BColor(Color::Reset), FColor(Color::Reset),\n2529 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2678,"character":12},"end":{"line":2682,"character":13}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2679:13\n     |\n2679 | /             queue!(stdout(),\n2680 | |                 cursor::MoveTo((self.lp_width + self.ln_width + self.lns_width - 1) as u16, (row + fromy) as u16),\n2681 | |                 BColor(bgcolor), FColor(self.lncolor), Print(label),\n2682 | |                 terminal::Clear(ClearType::UntilNewLine), BColor(Color::Reset), FColor(Color::Reset),\n2683 | |             );\n     | |_____________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}},{"range":{"start":{"line":2690,"character":8},"end":{"line":2693,"character":9}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}}},"message":"Actual error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n    --> src/editor.rs:2691:9\n     |\n2691 | /         queue!(stdout(),\n2692 | |             cursor::MoveTo((self.lp_width + 1) as u16, (self.height-1) as u16),\n2693 | |             BColor(Color::Reset), FColor(Color::Reset), Print(status),\n2694 | |         );\n     | |_________^\n     |\n     = note: this `Result` may be an `Err` variant, which should be handled\n     = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:16:15.671] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","diagnostics":[{"range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"method `swap` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `swap` is never used\n   --> src/selection.rs:109:12\n    |\n38  | impl Selection {\n    | -------------- method in this implementation\n...\n109 |     pub fn swap(&mut self) {\n    |            ^^^^\n\n"}},{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":14}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/selection.rs","range":{"start":{"line":108,"character":11},"end":{"line":108,"character":15}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:15.671] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","diagnostics":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"if this is intentional, prefix it with an underscore: `_logger`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `logger`\n  --> src/main.rs:20:9\n   |\n20 |     let logger = match std::env::var(\"RED_LOG\") {\n   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_logger`\n\n"}},{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_logger`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/main.rs","range":{"start":{"line":19,"character":8},"end":{"line":19,"character":14}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:15.671] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","diagnostics":[{"range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused imports","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":30},"end":{"line":3,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":3,"character":57},"end":{"line":3,"character":69}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":3,"character":71},"end":{"line":3,"character":76}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Point`, `QueryMatches`, `Range`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":3,"character":28},"end":{"line":3,"character":35}}},"message":"remove the unused imports"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Point`, `QueryMatches`, `Range`\n --> src/tests.rs:4:31\n  |\n4 |     use tree_sitter::{Parser, Point, Query, QueryCursor, QueryMatches, Range, TreeCursor};\n  |                               ^^^^^                      ^^^^^^^^^^^^  ^^^^^\n\n"}},{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `QueryMatch`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `QueryMatch`\n  --> src/tests.rs:50:29\n   |\n50 |     use tree_sitter::{Node, QueryMatch};\n   |                             ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":49,"character":26},"end":{"line":49,"character":38}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":49,"character":28},"end":{"line":49,"character":38}}},"message":"original diagnostic"}]},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"if this is intentional, prefix it with an underscore: `_text_provider`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `text_provider`\n  --> src/tests.rs:92:13\n   |\n92 |         let text_provider = |node: tree_sitter::Node| {\n   |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_text_provider`\n\n"}},{"range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_text_provider`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":91,"character":12},"end":{"line":91,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `source_code_bytes`\n   --> src/tests.rs:101:13\n    |\n101 |         let source_code_bytes = &source_code.as_bytes();\n    |             ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_code_bytes`\n\n"}},{"range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_source_code_bytes`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":100,"character":12},"end":{"line":100,"character":29}}},"message":"original diagnostic"}]},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"if this is intentional, prefix it with an underscore: `_matches`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `matches`\n   --> src/tests.rs:112:13\n    |\n112 |         let matches = query_cursor.matches(&query, tree.root_node(), source_code.as_bytes());\n    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`\n\n"}},{"range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_matches`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/tests.rs","range":{"start":{"line":111,"character":12},"end":{"line":111,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"function `walk_tree` is never used","tags":[1],"data":{"rendered":"warning: function `walk_tree` is never used\n --> src/tests.rs:6:8\n  |\n6 |     fn walk_tree(cursor: &mut TreeCursor, source_code: &str) {\n  |        ^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:15.671] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","diagnostics":[{"range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `AsyncWriteExt`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `AsyncWriteExt`\n --> src/process.rs:3:34\n  |\n3 | use tokio::io::{AsyncBufReadExt, AsyncWriteExt, BufReader};\n  |                                  ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":2,"character":31},"end":{"line":2,"character":46}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":2,"character":33},"end":{"line":2,"character":46}}},"message":"original diagnostic"}]},{"range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/process.rs:168:9\n    |\n168 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":167,"character":4},"end":{"line":167,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::Mutex`\n   --> src/process.rs:169:9\n    |\n169 |     use tokio::sync::Mutex;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n  --> src/process.rs:62:14\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |              ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":13},"end":{"line":61,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `child_stdout_receiver`\n  --> src/process.rs:62:24\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                        ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_child_stdout_receiver`\n\n"}},{"range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_child_stdout_receiver`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":23},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"if this is intentional, prefix it with an underscore: `_m`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `m`\n  --> src/process.rs:98:26\n   |\n98 |                     Some(m) = kill.recv() => { // killing manually\n   |                          ^ help: if this is intentional, prefix it with an underscore: `_m`\n\n"}},{"range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_m`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":97,"character":25},"end":{"line":97,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/process.rs:62:20\n   |\n62 |         let (send, mut child_stdout_receiver) = tokio::sync::mpsc::channel::<String>(10);\n   |                    ----^^^^^^^^^^^^^^^^^^^^^\n   |                    |\n   |                    help: remove this `mut`\n\n"}},{"range":{"start":{"line":61,"character":19},"end":{"line":61,"character":23}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":61,"character":19},"end":{"line":61,"character":44}}},"message":"original diagnostic"}]},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"severity":4,"code":"dead_code","source":"rustc","message":"methods in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `update_false`, `kill_process`, `upd`, and `lines` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `update_false`, `kill_process`, `upd`, and `lines` are never used\n   --> src/process.rs:128:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n\n"}},{"range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":167,"character":8},"end":{"line":167,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `super::Process`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":166,"character":0},"end":{"line":166,"character":17}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `super::Process`\n   --> src/process.rs:171:9\n    |\n171 |     use super::Process;\n    |         ^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/process.rs:167:1\n    |\n167 | mod process_tests {\n    | ^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":170,"character":8},"end":{"line":170,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":6,"character":4},"end":{"line":6,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":9,"character":4},"end":{"line":9,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `kill_sender`, `process_lines`, and `process_started` are never read","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":5,"character":11},"end":{"line":5,"character":18}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `kill_sender`, `process_lines`, and `process_started` are never read\n  --> src/process.rs:7:5\n   |\n6  | pub struct Process {\n   |            ------- fields in this struct\n7  |     kill_sender: Option<tokio::sync::mpsc::Sender<String>>,\n   |     ^^^^^^^^^^^\n8  |     process_lines: Arc<Mutex<Vec<String>>>,\n   |     ^^^^^^^^^^^^^\n9  |     upd_process: Arc<AtomicBool>,\n10 |     process_started: Arc<Mutex<bool>>,\n   |     ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":48,"character":11},"end":{"line":48,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":127,"character":11},"end":{"line":127,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":131,"character":11},"end":{"line":131,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":147,"character":11},"end":{"line":147,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":151,"character":11},"end":{"line":151,"character":16}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":155,"character":7},"end":{"line":155,"character":18}},"severity":2,"code":"dead_code","source":"rustc","message":"methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/process.rs","range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}}},"message":"methods in this implementation"}],"tags":[1],"data":{"rendered":"warning: methods `start`, `update_false`, `kill_process`, `upd`, `lines`, and `lines_range` are never used\n   --> src/process.rs:49:12\n    |\n14  | impl Process {\n    | ------------ methods in this implementation\n...\n49  |     pub fn start(&mut self, cmd: &str, arg: &str) {\n    |            ^^^^^\n...\n128 |     pub fn update_false(&self) {\n    |            ^^^^^^^^^^^^\n...\n132 |     pub fn kill_process(&mut self) {\n    |            ^^^^^^^^^^^^\n...\n148 |     pub fn upd(&self) -> bool {\n    |            ^^^\n...\n152 |     pub fn lines(&self) -> Arc<Mutex<Vec<String>>> {\n    |            ^^^^^\n...\n156 |     fn lines_range(&self, start_index: usize, end_index: usize) -> Option<Vec<String>> {\n    |        ^^^^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:15.672] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","diagnostics":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `time`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `time`\n  --> src/search.rs:29:19\n   |\n29 |     use std::{fs, time};\n   |                   ^^^^\n\n"}},{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":28,"character":18},"end":{"line":28,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/search.rs:90:9\n   |\n90 |     use std::sync::Arc;\n   |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":89,"character":4},"end":{"line":89,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":89,"character":8},"end":{"line":89,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::task`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::task`\n   --> src/search.rs:169:9\n    |\n169 |     use tokio::task;\n    |         ^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":20}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":168,"character":8},"end":{"line":168,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Display`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Display`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^\n\n"}},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":29}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `futures::future::ready`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `futures::future::ready`\n   --> src/search.rs:301:13\n    |\n301 |         use futures::future::ready;\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":300,"character":8},"end":{"line":300,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":300,"character":12},"end":{"line":300,"character":34}}},"message":"original diagnostic"}]},{"range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::path::PathBuf`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::path::PathBuf`\n   --> src/search.rs:324:9\n    |\n324 |     use std::path::PathBuf;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":323,"character":4},"end":{"line":323,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":323,"character":8},"end":{"line":323,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::fs`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::fs`\n   --> src/search.rs:325:9\n    |\n325 |     use tokio::fs;\n    |         ^^^^^^^^^\n\n"}},{"range":{"start":{"line":324,"character":4},"end":{"line":324,"character":18}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":324,"character":8},"end":{"line":324,"character":17}}},"message":"original diagnostic"}]},{"range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `crate::search`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `crate::search`\n   --> src/search.rs:380:9\n    |\n380 |     use crate::search;\n    |         ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":379,"character":4},"end":{"line":379,"character":22}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":379,"character":8},"end":{"line":379,"character":21}}},"message":"original diagnostic"}]},{"range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::sync::Arc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::sync::Arc`\n   --> src/search.rs:405:9\n    |\n405 |     use std::sync::Arc;\n    |         ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":404,"character":4},"end":{"line":404,"character":23}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Mutex`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Mutex`\n   --> src/search.rs:407:29\n    |\n407 |     use tokio::sync::{mpsc, Mutex};\n    |                             ^^^^^\n\n"}},{"range":{"start":{"line":406,"character":26},"end":{"line":406,"character":33}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":406,"character":28},"end":{"line":406,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/search.rs:361:21\n    |\n361 |                 let mut thread_name = thread.id();\n    |                     ----^^^^^^^^^^^\n    |                     |\n    |                     help: remove this `mut`\n\n"}},{"range":{"start":{"line":360,"character":20},"end":{"line":360,"character":24}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":360,"character":20},"end":{"line":360,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"if this is intentional, prefix it with an underscore: `_sender`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `sender`\n   --> src/search.rs:458:17\n    |\n458 |             let sender = sender.clone();\n    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_sender`\n\n"}},{"range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_sender`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":457,"character":16},"end":{"line":457,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"field `preview` is never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}}},"message":"field in this struct"}],"tags":[1],"data":{"rendered":"warning: field `preview` is never read\n  --> src/search.rs:97:9\n   |\n94 |     pub struct SearchResult {\n   |                ------------ field in this struct\n...\n97 |         preview: String,\n   |         ^^^^^^^\n   |\n   = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":93,"character":15},"end":{"line":93,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"field in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":96,"character":8},"end":{"line":96,"character":15}}},"message":"original diagnostic"}]},{"range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":269,"character":8},"end":{"line":269,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":270,"character":8},"end":{"line":270,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":271,"character":8},"end":{"line":271,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:270:9\n    |\n269 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n270 |         line_number: usize,\n    |         ^^^^^^^^^^^\n271 |         column: usize,\n    |         ^^^^^^\n272 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":4,"code":"dead_code","source":"rustc","message":"fields in this struct","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":410,"character":8},"end":{"line":410,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":8},"end":{"line":411,"character":14}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":412,"character":8},"end":{"line":412,"character":12}},"severity":2,"code":"dead_code","source":"rustc","message":"fields `line_number`, `column`, and `line` are never read\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}}},"message":"fields in this struct"}],"tags":[1],"data":{"rendered":"warning: fields `line_number`, `column`, and `line` are never read\n   --> src/search.rs:411:9\n    |\n410 |     pub struct SearchResult {\n    |                ------------ fields in this struct\n411 |         line_number: usize,\n    |         ^^^^^^^^^^^\n412 |         column: usize,\n    |         ^^^^^^\n413 |         line: String,\n    |         ^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":2,"code":"non_snake_case","source":"rustc","message":"function `test_async_listFiles` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"convert the identifier to snake case: `test_async_list_files`"}],"data":{"rendered":"warning: function `test_async_listFiles` should have a snake case name\n   --> src/search.rs:328:14\n    |\n328 |     async fn test_async_listFiles() -> io::Result<()> {\n    |              ^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `test_async_list_files`\n\n"}},{"range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `test_async_list_files`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":327,"character":13},"end":{"line":327,"character":33}}},"message":"original diagnostic"}]},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:389:13\n    |\n389 |             tx.send(\"sending from first handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n389 |             let _ = tx.send(\"sending from first handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":388,"character":12},"end":{"line":388,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":388,"character":12},"end":{"line":388,"character":54}}},"message":"original diagnostic"}]},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:393:13\n    |\n393 |             tx2.send(\"sending from second handle\").await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n393 |             let _ = tx2.send(\"sending from second handle\").await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":392,"character":12},"end":{"line":392,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":392,"character":12},"end":{"line":392,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/search.rs:460:17\n    |\n460 |                 t.await;\n    |                 ^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n460 |                 let _ = t.await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":459,"character":16},"end":{"line":459,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":459,"character":16},"end":{"line":459,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::time::Instant`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::time::Instant`\n  --> src/search.rs:91:9\n   |\n91 |     use std::time::Instant;\n   |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":90,"character":4},"end":{"line":90,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":90,"character":8},"end":{"line":90,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":20},"end":{"line":255,"character":27}}},"message":"original diagnostic"}]},{"range":{"start":{"line":255,"character":29},"end":{"line":255,"character":33}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Display`, `Path`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":255,"character":4},"end":{"line":255,"character":35}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Display`, `Path`\n   --> src/search.rs:256:21\n    |\n256 |     use std::path::{Display, Path};\n    |                     ^^^^^^^  ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `self`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `self`\n   --> src/search.rs:258:21\n    |\n258 |     use tokio::io::{self, AsyncBufReadExt, BufReader};\n    |                     ^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":257,"character":20},"end":{"line":257,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":257,"character":20},"end":{"line":257,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::mpsc`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":254,"character":0},"end":{"line":254,"character":15}}},"message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module"},{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::mpsc`\n   --> src/search.rs:381:9\n    |\n381 |     use tokio::sync::mpsc;\n    |         ^^^^^^^^^^^^^^^^^\n    |\nhelp: if this is a test module, consider adding a `#[cfg(test)]` to the containing module\n   --> src/search.rs:255:1\n    |\n255 | mod tokio_tests {\n    | ^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":380,"character":4},"end":{"line":380,"character":26}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":380,"character":8},"end":{"line":380,"character":25}}},"message":"original diagnostic"}]},{"range":{"start":{"line":403,"character":0},"end":{"line":403,"character":13}},"severity":4,"code":"unused_imports","source":"rustc","message":"if this is a test module, consider adding a `#[cfg(test)]` to the containing module","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/search.rs","range":{"start":{"line":404,"character":8},"end":{"line":404,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":268,"character":15},"end":{"line":268,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:269:16\n    |\n269 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":274,"character":17},"end":{"line":274,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:275:18\n    |\n275 |     pub async fn search(path: &str, term: &str) -> tokio::io::Result<Vec<SearchResult>> {\n    |                  ^^^^^^\n\n"}},{"range":{"start":{"line":409,"character":15},"end":{"line":409,"character":27}},"severity":2,"code":"dead_code","source":"rustc","message":"struct `SearchResult` is never constructed\n`SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","tags":[1],"data":{"rendered":"warning: struct `SearchResult` is never constructed\n   --> src/search.rs:410:16\n    |\n410 |     pub struct SearchResult {\n    |                ^^^^^^^^^^^^\n    |\n    = note: `SearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n\n"}},{"range":{"start":{"line":415,"character":17},"end":{"line":415,"character":23}},"severity":2,"code":"dead_code","source":"rustc","message":"function `search` is never used","tags":[1],"data":{"rendered":"warning: function `search` is never used\n   --> src/search.rs:416:18\n    |\n416 |     pub async fn search(\n    |                  ^^^^^^\n\n"}}]}}
[2024-11-18 20:16:15.674] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","diagnostics":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":12},"end":{"line":0,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":34}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused imports: `Deserialize`, `Serialize`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":0,"character":0},"end":{"line":1,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused imports: `Deserialize`, `Serialize`\n --> src/lsp.rs:1:13\n  |\n1 | use serde::{Deserialize, Serialize};\n  |             ^^^^^^^^^^^  ^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n --> src/lsp.rs:2:5\n  |\n2 | use serde_json::Result;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":1,"character":0},"end":{"line":2,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":1,"character":4},"end":{"line":1,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `std::io::Error`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `std::io::Error`\n --> src/lsp.rs:5:5\n  |\n5 | use std::io::Error;\n  |     ^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":4,"character":4},"end":{"line":4,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `tokio::sync::oneshot`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `tokio::sync::oneshot`\n  --> src/lsp.rs:13:5\n   |\n13 | use tokio::sync::oneshot;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":12,"character":0},"end":{"line":13,"character":0}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":12,"character":4},"end":{"line":12,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `serde_json::Result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}}},"message":"remove the whole `use` item"}],"tags":[1],"data":{"rendered":"warning: unused import: `serde_json::Result`\n   --> src/lsp.rs:510:9\n    |\n510 |     use serde_json::Result;\n    |         ^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":509,"character":4},"end":{"line":509,"character":27}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the whole `use` item","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":509,"character":8},"end":{"line":509,"character":26}}},"message":"original diagnostic"}]},{"range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `Value`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `Value`\n   --> src/lsp.rs:511:28\n    |\n511 |     use serde_json::{json, Value};\n    |                            ^^^^^\n\n"}},{"range":{"start":{"line":510,"character":25},"end":{"line":510,"character":32}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":510,"character":27},"end":{"line":510,"character":32}}},"message":"original diagnostic"}]},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"if this is intentional, prefix it with an underscore: `_id`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `id`\n   --> src/lsp.rs:201:38\n    |\n201 |     pub async fn wait_for(&mut self, id: usize, mut rx: mpsc::Receiver<String>) -> Option<String> {\n    |                                      ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n"}},{"range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_id`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":200,"character":37},"end":{"line":200,"character":39}}},"message":"original diagnostic"}]},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"if this is intentional, prefix it with an underscore: `_result`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `result`\n   --> src/lsp.rs:220:13\n    |\n220 |         let result = self.wait_for(id, rx).await;\n    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`\n\n"}},{"range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_result`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":219,"character":12},"end":{"line":219,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:215:18\n    |\n215 |         let (tx, mut rx) = tokio::sync::mpsc::channel::<String>(1);\n    |                  ----^^\n    |                  |\n    |                  help: remove this `mut`\n\n"}},{"range":{"start":{"line":214,"character":17},"end":{"line":214,"character":21}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":214,"character":17},"end":{"line":214,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n  --> src/lsp.rs:81:13\n   |\n81 |         let mut stdout = child.stdout.take().unwrap();\n   |             ----^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"}},{"range":{"start":{"line":80,"character":12},"end":{"line":80,"character":16}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":80,"character":12},"end":{"line":80,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":2,"code":"unused_variables","source":"rustc","message":"unused variable: `send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"if this is intentional, prefix it with an underscore: `_send`"}],"tags":[1],"data":{"rendered":"warning: unused variable: `send`\n   --> src/lsp.rs:452:10\n    |\n452 |     let (send, recv) = tokio::sync::oneshot::channel::<()>();\n    |          ^^^^ help: if this is intentional, prefix it with an underscore: `_send`\n\n"}},{"range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}},"severity":4,"code":"unused_variables","source":"rustc","message":"if this is intentional, prefix it with an underscore: `_send`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":451,"character":9},"end":{"line":451,"character":13}}},"message":"original diagnostic"}]},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}},"severity":2,"code":"unused_mut","source":"rustc","message":"variable does not need to be mutable","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}}},"message":"remove this `mut`"}],"data":{"rendered":"warning: variable does not need to be mutable\n   --> src/lsp.rs:463:9\n    |\n463 |     let mut stdout = child.stdout.take().unwrap();\n    |         ----^^^^^^\n    |         |\n    |         help: remove this `mut`\n\n"}},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":12}},"severity":4,"code":"unused_mut","source":"rustc","message":"remove this `mut`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":462,"character":8},"end":{"line":462,"character":18}}},"message":"original diagnostic"}]},{"range":{"start":{"line":582,"character":11},"end":{"line":582,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_configuration` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_configuration` is never used\n   --> src/lsp.rs:583:12\n    |\n583 |     pub fn did_change_configuration() -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":617,"character":11},"end":{"line":617,"character":35}},"severity":2,"code":"dead_code","source":"rustc","message":"function `did_change_watched_files` is never used","tags":[1],"data":{"rendered":"warning: function `did_change_watched_files` is never used\n   --> src/lsp.rs:618:12\n    |\n618 |     pub fn did_change_watched_files(path: &str) -> String {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":631,"character":11},"end":{"line":631,"character":24}},"severity":2,"code":"dead_code","source":"rustc","message":"function `document_link` is never used","tags":[1],"data":{"rendered":"warning: function `document_link` is never used\n   --> src/lsp.rs:632:12\n    |\n632 |     pub fn document_link(path: &str) -> String {\n    |            ^^^^^^^^^^^^^\n\n"}},{"range":{"start":{"line":681,"character":11},"end":{"line":681,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"function `completion` is never used","tags":[1],"data":{"rendered":"warning: function `completion` is never used\n   --> src/lsp.rs:682:12\n    |\n682 |     pub fn completion(id: usize, path: &str, line: usize, character: usize) -> String {\n    |            ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:88:17\n   |\n88 |                 stdin.write_all(header.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n88 |                 let _ = stdin.write_all(header.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":87,"character":16},"end":{"line":87,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":87,"character":16},"end":{"line":87,"character":56}}},"message":"original diagnostic"}]},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:89:17\n   |\n89 |                 stdin.write_all(m.as_bytes()).await;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n89 |                 let _ = stdin.write_all(m.as_bytes()).await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":88,"character":16},"end":{"line":88,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":88,"character":16},"end":{"line":88,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n  --> src/lsp.rs:90:17\n   |\n90 |                 stdin.flush().await;\n   |                 ^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n   |\n90 |                 let _ = stdin.flush().await;\n   |                 +++++++\n\n"}},{"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":89,"character":16},"end":{"line":89,"character":35}}},"message":"original diagnostic"}]},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:120:17\n    |\n120 |                 reader.read_exact(&mut content).await;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n120 |                 let _ = reader.read_exact(&mut content).await;\n    |                 +++++++\n\n"}},{"range":{"start":{"line":119,"character":16},"end":{"line":119,"character":16}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":119,"character":16},"end":{"line":119,"character":53}}},"message":"original diagnostic"}]},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:134:29\n    |\n134 | ...                   s.send(msg).await; // send to request channel\n    |                       ^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n134 |                             let _ = s.send(msg).await; // send to request channel\n    |                             +++++++\n\n"}},{"range":{"start":{"line":133,"character":28},"end":{"line":133,"character":28}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":133,"character":28},"end":{"line":133,"character":45}}},"message":"original diagnostic"}]},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:146:41\n    |\n146 | ...                   diagnostic_send.send(d.params).await;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n146 |                                         let _ = diagnostic_send.send(d.params).await;\n    |                                         +++++++\n\n"}},{"range":{"start":{"line":145,"character":40},"end":{"line":145,"character":40}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":145,"character":40},"end":{"line":145,"character":76}}},"message":"original diagnostic"}]},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:406:5\n    |\n406 |     lsp.start(lang, \"rust-analyzer\", None);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n406 |     let _ = lsp.start(lang, \"rust-analyzer\", None);\n    |     +++++++\n\n"}},{"range":{"start":{"line":405,"character":4},"end":{"line":405,"character":4}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":405,"character":4},"end":{"line":405,"character":42}}},"message":"original diagnostic"}]},{"range":{"start":{"line":411,"character":4},"end":{"line":411,"character":17}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused implementer of `futures::Future` that must be used\nfutures do nothing unless you `.await` or poll them","data":{"rendered":"warning: unused implementer of `futures::Future` that must be used\n   --> src/lsp.rs:412:5\n    |\n412 |     lsp.init(dir);\n    |     ^^^^^^^^^^^^^\n    |\n    = note: futures do nothing unless you `.await` or poll them\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:469:13\n    |\n469 |             stdin.write_all(m.as_bytes()).await;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n469 |             let _ = stdin.write_all(m.as_bytes()).await;\n    |             +++++++\n\n"}},{"range":{"start":{"line":468,"character":12},"end":{"line":468,"character":12}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":468,"character":12},"end":{"line":468,"character":47}}},"message":"original diagnostic"}]},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}},"severity":2,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}}},"message":"use `let _ = ...` to ignore the resulting value: `let _ = `"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/lsp.rs:487:9\n    |\n487 |         send2_arc.send(\"hello\\n\".to_string()).await;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n487 |         let _ = send2_arc.send(\"hello\\n\".to_string()).await;\n    |         +++++++\n\n"}},{"range":{"start":{"line":486,"character":8},"end":{"line":486,"character":8}},"severity":4,"code":"unused_must_use","source":"rustc","message":"use `let _ = ...` to ignore the resulting value: `let _ = `","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":486,"character":8},"end":{"line":486,"character":51}}},"message":"original diagnostic"}]},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `isIncomplete` should have a snake case name\n`#[warn(non_snake_case)]` on by default","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"convert the identifier to snake case: `is_incomplete`"}],"data":{"rendered":"warning: structure field `isIncomplete` should have a snake case name\n   --> src/lsp.rs:712:13\n    |\n712 |         pub isIncomplete: Option<bool>,\n    |             ^^^^^^^^^^^^ help: convert the identifier to snake case: `is_incomplete`\n    |\n    = note: `#[warn(non_snake_case)]` on by default\n\n"}},{"range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `is_incomplete`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":711,"character":12},"end":{"line":711,"character":24}}},"message":"original diagnostic"}]},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `sortText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"convert the identifier to snake case: `sort_text`"}],"data":{"rendered":"warning: structure field `sortText` should have a snake case name\n   --> src/lsp.rs:722:13\n    |\n722 |         pub sortText: Option<String>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `sort_text`\n\n"}},{"range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `sort_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":721,"character":12},"end":{"line":721,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"convert the identifier to snake case: `insert_text`"}],"data":{"rendered":"warning: structure field `insertText` should have a snake case name\n   --> src/lsp.rs:723:13\n    |\n723 |         pub insertText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `insert_text`\n\n"}},{"range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":722,"character":12},"end":{"line":722,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `filterText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"convert the identifier to snake case: `filter_text`"}],"data":{"rendered":"warning: structure field `filterText` should have a snake case name\n   --> src/lsp.rs:724:13\n    |\n724 |         pub filterText: Option<String>,\n    |             ^^^^^^^^^^ help: convert the identifier to snake case: `filter_text`\n\n"}},{"range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `filter_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":723,"character":12},"end":{"line":723,"character":22}}},"message":"original diagnostic"}]},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `insertTextFormat` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"convert the identifier to snake case: `insert_text_format`"}],"data":{"rendered":"warning: structure field `insertTextFormat` should have a snake case name\n   --> src/lsp.rs:725:13\n    |\n725 |         pub insertTextFormat: Option<f64>,\n    |             ^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `insert_text_format`\n\n"}},{"range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `insert_text_format`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":724,"character":12},"end":{"line":724,"character":28}}},"message":"original diagnostic"}]},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `textEdit` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"convert the identifier to snake case: `text_edit`"}],"data":{"rendered":"warning: structure field `textEdit` should have a snake case name\n   --> src/lsp.rs:726:13\n    |\n726 |         pub textEdit: Option<TextEdit>,\n    |             ^^^^^^^^ help: convert the identifier to snake case: `text_edit`\n\n"}},{"range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `text_edit`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":725,"character":12},"end":{"line":725,"character":20}}},"message":"original diagnostic"}]},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":2,"code":"non_snake_case","source":"rustc","message":"structure field `newText` should have a snake case name","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"convert the identifier to snake case: `new_text`"}],"data":{"rendered":"warning: structure field `newText` should have a snake case name\n   --> src/lsp.rs:735:13\n    |\n735 |         pub newText: String,\n    |             ^^^^^^^ help: convert the identifier to snake case: `new_text`\n\n"}},{"range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}},"severity":4,"code":"non_snake_case","source":"rustc","message":"convert the identifier to snake case: `new_text`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":734,"character":12},"end":{"line":734,"character":19}}},"message":"original diagnostic"}]},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}},"severity":2,"code":"unused_imports","source":"rustc","message":"unused import: `sleep`","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}}},"message":"remove the unused import"}],"tags":[1],"data":{"rendered":"warning: unused import: `sleep`\n  --> src/lsp.rs:15:19\n   |\n15 | use tokio::time::{sleep, Duration};\n   |                   ^^^^^\n\n"}},{"range":{"start":{"line":14,"character":18},"end":{"line":14,"character":25}},"severity":4,"code":"unused_imports","source":"rustc","message":"remove the unused import","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":14,"character":18},"end":{"line":14,"character":23}}},"message":"original diagnostic"}]},{"range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}},"severity":2,"code":"dead_code","source":"rustc","message":"method `stop` is never used","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}}},"message":"method in this implementation"}],"tags":[1],"data":{"rendered":"warning: method `stop` is never used\n   --> src/lsp.rs:178:18\n    |\n39  | impl Lsp {\n    | -------- method in this implementation\n...\n178 |     pub async fn stop(&mut self) {\n    |                  ^^^^\n\n"}},{"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":8}},"severity":4,"code":"dead_code","source":"rustc","message":"method in this implementation","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/lsp.rs","range":{"start":{"line":177,"character":17},"end":{"line":177,"character":21}}},"message":"original diagnostic"}]}]}}
[2024-11-18 20:16:15.676] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/apps/rust/red/src/utils.rs","diagnostics":[{"range":{"start":{"line":12,"character":7},"end":{"line":12,"character":17}},"severity":2,"code":"dead_code","source":"rustc","message":"function `hex_to_rgb` is never used","tags":[1],"data":{"rendered":"warning: function `hex_to_rgb` is never used\n  --> src/utils.rs:13:8\n   |\n13 | pub fn hex_to_rgb(hex_color: &str) -> (u8, u8, u8) {\n   |        ^^^^^^^^^^\n\n"}},{"range":{"start":{"line":77,"character":7},"end":{"line":77,"character":15}},"severity":2,"code":"dead_code","source":"rustc","message":"function `pad_left` is never used","tags":[1],"data":{"rendered":"warning: function `pad_left` is never used\n  --> src/utils.rs:78:8\n   |\n78 | pub fn pad_left(str: &str, length: usize) -> String {\n   |        ^^^^^^^^\n\n"}}]}}
[2024-11-18 20:16:15.676] [DEBUG] lsp: <- {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossterm-0.27.0/src/macros.rs","diagnostics":[{"range":{"start":{"line":62,"character":8},"end":{"line":64,"character":24}},"severity":4,"code":"unused_must_use","source":"rustc","message":"unused `Result` that must be used\nthis `Result` may be an `Err` variant, which should be handled","relatedInformation":[{"location":{"uri":"file:///Users/max/apps/rust/red/src/editor.rs","range":{"start":{"line":850,"character":12},"end":{"line":850,"character":42}}},"message":"Exact error occurred here"}],"data":{"rendered":"warning: unused `Result` that must be used\n   --> src/editor.rs:851:13\n    |\n851 |             queue!(stdout(), cursor::Hide);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this `Result` may be an `Err` variant, which should be handled\n    = note: this warning originates in the macro `queue` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"}}]}}
[2024-11-18 20:16:16.597] [DEBUG] editor: event.code Esc
[2024-11-18 20:16:17.374] [DEBUG] editor: event.code Esc
[2024-11-18 20:16:17.978] [DEBUG] editor: event.code Esc
[2024-11-18 20:16:19.355] [DEBUG] code: ts insert InputEdit { start_byte: 14, old_end_byte: 14, new_end_byte: 15, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:16:20.988] [DEBUG] code: ts insert InputEdit { start_byte: 15, old_end_byte: 15, new_end_byte: 16, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:16:21.739] [DEBUG] code: ts insert InputEdit { start_byte: 16, old_end_byte: 16, new_end_byte: 17, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:16:21.818] [DEBUG] code: ts insert InputEdit { start_byte: 17, old_end_byte: 17, new_end_byte: 18, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:16:21.893] [DEBUG] code: ts insert InputEdit { start_byte: 18, old_end_byte: 18, new_end_byte: 19, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:16:21.957] [DEBUG] code: ts insert InputEdit { start_byte: 19, old_end_byte: 19, new_end_byte: 20, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:16:22.868] [DEBUG] editor: event.code Char('b')
[2024-11-18 20:24:12.503] [DEBUG] main: starting red
[2024-11-18 20:24:19.897] [DEBUG] code: ts insert InputEdit { start_byte: 0, old_end_byte: 0, new_end_byte: 1, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:24:20.074] [DEBUG] code: ts insert InputEdit { start_byte: 1, old_end_byte: 1, new_end_byte: 2, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:24:20.126] [DEBUG] code: ts insert InputEdit { start_byte: 2, old_end_byte: 2, new_end_byte: 3, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:24:20.229] [DEBUG] code: ts insert InputEdit { start_byte: 3, old_end_byte: 3, new_end_byte: 4, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:24:20.321] [DEBUG] code: ts insert InputEdit { start_byte: 4, old_end_byte: 4, new_end_byte: 5, start_position: Point { row: 0, column: 0 }, old_end_position: Point { row: 0, column: 0 }, new_end_position: Point { row: 0, column: 0 } }
[2024-11-18 20:41:04.220] [DEBUG] main: starting red
